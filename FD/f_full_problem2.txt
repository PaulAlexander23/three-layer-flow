function F = f_full_problem2( y, Q, m2, m3, s1, s2 )
%f_full_problem rhs for the full nonlinear evolution equations
%   Detailed explanation goes here
global D1 D3 D4

h1 = y(1:end/2);
h2 = y(end/2+1:end);

F = [(s1 * h1 .^ 2 * (h1 .^ 4 * m2 * m3 .^ 2 - 3 * h1 .^ 3 * m2 .^ 2 * m3 + 4 * h1 .^ 3 * m3 .^ 2 * h2 - 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 + 4 * h1 * m3 .^ 2 * h2 .^ 3 + 2 * m2 * m3 * h2 .^ 4 + 3 * h1 .^ 2 * m2 .^ 2 * m3 - 4 * m2 * m3 * h2 .^ 3 - h1 * m2 .^ 2 * m3 + 6 * m2 * m3 * h2 .^ 2 - 4 * m2 * m3 * h2 - m2 .^ 2 - h1 .^ 4 * m3 .^ 2 - m2 .^ 2 * h2 .^ 4 - m3 .^ 2 * h2 .^ 4 + 4 * m2 .^ 2 * h2 .^ 3 - 6 * m2 .^ 2 * h2 .^ 2 + 4 * m2 .^ 2 * h2 - 6 * h1 .^ 2 * m2 * m3 + 4 * h1 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 * h2 + 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 4 * h1 * m2 * m3 * h2 .^ 3 + 3 * h1 .^ 3 * m2 .^ 2 * m3 * h2 - 3 * h1 .^ 3 * m2 * m3 .^ 2 * h2 - 3 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 + 3 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 + h1 * m2 .^ 2 * m3 * h2 .^ 3 - h1 * m2 * m3 .^ 2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h1) * (D1*h1)) + (s1 * h1 .^ 3 * (4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) + 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 - (D1*h1) * m2 .^ 2 * m3 - 4 * m2 * m3 * (D1*h2) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) - 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) + 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) - 12 * m2 .^ 2 * h2 * (D1*h2) + 4 * (D1*h1) * m2 * m3 - 9 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) + 8 * m2 * m3 * h2 .^ 3 * (D1*h2) + 6 * h1 * m2 .^ 2 * m3 * (D1*h1) - 12 * m2 * m3 * h2 .^ 2 * (D1*h2) + 12 * m2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 * (D1*h1) - 4 * h1 .^ 3 * m2 * m3 * (D1*h2) - 4 * (D1*h1) * m2 * m3 * h2 .^ 3 + 3 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) - 3 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) + (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 - (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * m2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) + 9 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) - 9 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) - 6 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) - 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) + 6 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) + 3 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) - 3 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2)) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h1)) / 0.3e1 - (s1 * h1 .^ 3 * (h1 .^ 4 * m2 * m3 .^ 2 - 3 * h1 .^ 3 * m2 .^ 2 * m3 + 4 * h1 .^ 3 * m3 .^ 2 * h2 - 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 + 4 * h1 * m3 .^ 2 * h2 .^ 3 + 2 * m2 * m3 * h2 .^ 4 + 3 * h1 .^ 2 * m2 .^ 2 * m3 - 4 * m2 * m3 * h2 .^ 3 - h1 * m2 .^ 2 * m3 + 6 * m2 * m3 * h2 .^ 2 - 4 * m2 * m3 * h2 - m2 .^ 2 - h1 .^ 4 * m3 .^ 2 - m2 .^ 2 * h2 .^ 4 - m3 .^ 2 * h2 .^ 4 + 4 * m2 .^ 2 * h2 .^ 3 - 6 * m2 .^ 2 * h2 .^ 2 + 4 * m2 .^ 2 * h2 - 6 * h1 .^ 2 * m2 * m3 + 4 * h1 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 * h2 + 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 4 * h1 * m2 * m3 * h2 .^ 3 + 3 * h1 .^ 3 * m2 .^ 2 * m3 * h2 - 3 * h1 .^ 3 * m2 * m3 .^ 2 * h2 - 3 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 + 3 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 + h1 * m2 .^ 2 * m3 * h2 .^ 3 - h1 * m2 * m3 .^ 2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (D3*h1) * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2))) / 0.3e1 + (s1 * h1 .^ 3 * (h1 .^ 4 * m2 * m3 .^ 2 - 3 * h1 .^ 3 * m2 .^ 2 * m3 + 4 * h1 .^ 3 * m3 .^ 2 * h2 - 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 + 4 * h1 * m3 .^ 2 * h2 .^ 3 + 2 * m2 * m3 * h2 .^ 4 + 3 * h1 .^ 2 * m2 .^ 2 * m3 - 4 * m2 * m3 * h2 .^ 3 - h1 * m2 .^ 2 * m3 + 6 * m2 * m3 * h2 .^ 2 - 4 * m2 * m3 * h2 - m2 .^ 2 - h1 .^ 4 * m3 .^ 2 - m2 .^ 2 * h2 .^ 4 - m3 .^ 2 * h2 .^ 4 + 4 * m2 .^ 2 * h2 .^ 3 - 6 * m2 .^ 2 * h2 .^ 2 + 4 * m2 .^ 2 * h2 - 6 * h1 .^ 2 * m2 * m3 + 4 * h1 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 * h2 + 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 4 * h1 * m2 * m3 * h2 .^ 3 + 3 * h1 .^ 3 * m2 .^ 2 * m3 * h2 - 3 * h1 .^ 3 * m2 * m3 .^ 2 * h2 - 3 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 + 3 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 + h1 * m2 .^ 2 * m3 * h2 .^ 3 - h1 * m2 * m3 .^ 2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D4*h1)) / 0.3e1 + (m2 * s2 * h1 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h2) * (D1*h1)) / 0.3e1 + (m2 * s2 * h1 .^ 2 * (h2 - 1) * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h2) * (D1*h2)) / 0.3e1 + (m2 * s2 * h1 .^ 2 * (h2 - 1) .^ 2 * (9 * h1 .^ 2 * m2 * m3 * (D1*h1) - 2 * h1 * m2 * m3 * h2 * (D1*h1) - h1 .^ 2 * m2 * m3 * (D1*h2) - 9 * h1 .^ 2 * m3 * (D1*h1) + 2 * h1 * m3 * h2 * (D1*h1) + h1 .^ 2 * m3 * (D1*h2) - 4 * h1 * m2 * m3 * (D1*h1) + (D1*h1) * m2 * h2 .^ 2 + 2 * h1 * m2 * h2 * (D1*h2) - (D1*h1) * m3 * h2 .^ 2 - 2 * h1 * m3 * h2 * (D1*h2) - 9 * m2 * h2 .^ 2 * (D1*h2) + 9 * m3 * h2 .^ 2 * (D1*h2) + 4 * h1 * m3 * (D1*h1) - 2 * (D1*h1) * h2 * m2 - 2 * h1 * (D1*h2) * m2 + 4 * (D1*h1) * m3 * h2 + 4 * h1 * m3 * (D1*h2) + 12 * m2 * h2 * (D1*h2) - 12 * m3 * h2 * (D1*h2) + (D1*h1) * m2 - 3 * (D1*h2) * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h2)) / 0.6e1 - (m2 * s2 * h1 .^ 2 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (D3*h2) * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2))) / 0.6e1 + (m2 * s2 * h1 .^ 2 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D4*h2)) / 0.6e1 + (2 * h1 * m2 * m3 * Q * (h1 .^ 2 * m2 * m3 - h1 .^ 2 * m3 + 2 * h1 * h2 * m2 - 2 * h1 * m3 * h2 - 3 * m2 * h2 .^ 2 + 3 * m3 * h2 .^ 2 - 2 * h1 * m2 + 3 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D1*h1)) + (h1 .^ 2 * m2 * m3 * Q * (2 * h1 * m2 * m3 * (D1*h1) - 2 * h1 * m3 * (D1*h1) + 2 * (D1*h1) * h2 * m2 + 2 * h1 * (D1*h2) * m2 - 2 * (D1*h1) * m3 * h2 - 2 * h1 * m3 * (D1*h2) - 6 * m2 * h2 * (D1*h2) + 6 * m3 * h2 * (D1*h2) - 2 * (D1*h1) * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3)) - (h1 .^ 2 * m2 * m3 * Q * (h1 .^ 2 * m2 * m3 - h1 .^ 2 * m3 + 2 * h1 * h2 * m2 - 2 * h1 * m3 * h2 - 3 * m2 * h2 .^ 2 + 3 * m3 * h2 .^ 2 - 2 * h1 * m2 + 3 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2)));
...
    (h1 * m2 * s1 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h1) * (D1*h1)) / 0.3e1 + (h1 .^ 2 * m2 * s1 * (h2 - 1) * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h1) * (D1*h2)) / 0.3e1 + (h1 .^ 2 * m2 * s1 * (h2 - 1) .^ 2 * (9 * h1 .^ 2 * m2 * m3 * (D1*h1) - 2 * h1 * m2 * m3 * h2 * (D1*h1) - h1 .^ 2 * m2 * m3 * (D1*h2) - 9 * h1 .^ 2 * m3 * (D1*h1) + 2 * h1 * m3 * h2 * (D1*h1) + h1 .^ 2 * m3 * (D1*h2) - 4 * h1 * m2 * m3 * (D1*h1) + (D1*h1) * m2 * h2 .^ 2 + 2 * h1 * m2 * h2 * (D1*h2) - (D1*h1) * m3 * h2 .^ 2 - 2 * h1 * m3 * h2 * (D1*h2) - 9 * m2 * h2 .^ 2 * (D1*h2) + 9 * m3 * h2 .^ 2 * (D1*h2) + 4 * h1 * m3 * (D1*h1) - 2 * (D1*h1) * h2 * m2 - 2 * h1 * (D1*h2) * m2 + 4 * (D1*h1) * m3 * h2 + 4 * h1 * m3 * (D1*h2) + 12 * m2 * h2 * (D1*h2) - 12 * m3 * h2 * (D1*h2) + (D1*h1) * m2 - 3 * (D1*h2) * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h1)) / 0.6e1 - (h1 .^ 2 * m2 * s1 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (D3*h1) * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2))) / 0.6e1 + (h1 .^ 2 * m2 * s1 * (h2 - 1) .^ 2 * (3 * h1 .^ 3 * m2 * m3 - h1 .^ 2 * m2 * m3 * h2 - 3 * h1 .^ 3 * m3 + h1 .^ 2 * m3 * h2 - 2 * h1 .^ 2 * m2 * m3 + h1 * m2 * h2 .^ 2 - h1 * m3 * h2 .^ 2 - 3 * m2 * h2 .^ 3 + 3 * m3 * h2 .^ 3 + 2 * h1 .^ 2 * m3 - 2 * h1 * h2 * m2 + 4 * h1 * m3 * h2 + 6 * m2 * h2 .^ 2 - 6 * m3 * h2 .^ 2 + h1 * m2 - 3 * h2 * m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D4*h1)) / 0.6e1 + (s2 * (h2 - 1) .^ 2 * (h1 .^ 4 * m2 .^ 2 * m3 - 2 * h1 .^ 4 * m2 * m3 - h1 .^ 3 * m2 .^ 2 * h2 + 4 * h1 .^ 3 * m2 * m3 * h2 + 3 * h1 .^ 2 * m2 .^ 2 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 3 * h1 * m2 .^ 2 * h2 .^ 3 + 4 * h1 * m2 * m3 * h2 .^ 3 + h1 .^ 4 * m3 + h1 .^ 3 * m2 * h2 - 4 * h1 .^ 3 * m3 * h2 + h1 .^ 3 * m2 .^ 2 - 3 * h1 .^ 2 * m2 * h2 .^ 2 + 6 * h1 .^ 2 * m3 * h2 .^ 2 - 3 * h1 .^ 2 * m2 .^ 2 * h2 + 3 * h1 * m2 * h2 .^ 3 - 4 * h1 * m3 * h2 .^ 3 + 3 * h1 * m2 .^ 2 * h2 .^ 2 - m2 * h2 .^ 4 + m3 * h2 .^ 4 - h1 .^ 3 * m2 + 3 * h1 .^ 2 * m2 * h2 - 3 * h1 * m2 * h2 .^ 2 + m2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h2) * (D1*h2)) + (s2 * (h2 - 1) .^ 3 * (-3 * (D1*h1) * m2 * h2 .^ 2 + 3 * m2 * h2 .^ 2 * (D1*h2) - h1 .^ 3 * m2 .^ 2 * (D1*h2) - 3 * (D1*h1) * m2 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m3 * (D1*h1) + h1 .^ 3 * m2 * (D1*h2) - 4 * h1 .^ 3 * m3 * (D1*h2) + 3 * h1 .^ 2 * m2 .^ 2 * (D1*h1) - 3 * h1 .^ 2 * m2 .^ 2 * (D1*h2) + 3 * (D1*h1) * m2 * h2 .^ 3 - 4 * (D1*h1) * m3 * h2 .^ 3 + 3 * (D1*h1) * m2 .^ 2 * h2 .^ 2 - 4 * m2 * h2 .^ 3 * (D1*h2) + 4 * m3 * h2 .^ 3 * (D1*h2) - 3 * h1 .^ 2 * m2 * (D1*h1) + 3 * h1 .^ 2 * m2 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 6 * h1 * m2 * h2 * (D1*h2) + 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h1) - 8 * h1 .^ 3 * m2 * m3 * (D1*h1) - 3 * h1 .^ 2 * m2 .^ 2 * h2 * (D1*h1) + 6 * h1 * m2 .^ 2 * h2 .^ 2 * (D1*h1) + 6 * h1 .^ 2 * m2 .^ 2 * h2 * (D1*h2) - 9 * h1 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 3 * h1 .^ 2 * m2 * h2 * (D1*h1) - 12 * h1 .^ 2 * m3 * h2 * (D1*h1) - 6 * h1 * m2 * h2 .^ 2 * (D1*h1) - 6 * h1 .^ 2 * m2 * h2 * (D1*h2) + 12 * h1 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 * h2 * (D1*h2) - 6 * h1 * m2 .^ 2 * h2 * (D1*h1) + 9 * h1 * m2 * h2 .^ 2 * (D1*h2) - 12 * h1 * m3 * h2 .^ 2 * (D1*h2) + 6 * h1 * m2 .^ 2 * h2 * (D1*h2) + 6 * h1 * m2 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2)) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D3*h2)) / 0.3e1 - (s2 * (h2 - 1) .^ 3 * (h1 .^ 4 * m2 .^ 2 * m3 - 2 * h1 .^ 4 * m2 * m3 - h1 .^ 3 * m2 .^ 2 * h2 + 4 * h1 .^ 3 * m2 * m3 * h2 + 3 * h1 .^ 2 * m2 .^ 2 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 3 * h1 * m2 .^ 2 * h2 .^ 3 + 4 * h1 * m2 * m3 * h2 .^ 3 + h1 .^ 4 * m3 + h1 .^ 3 * m2 * h2 - 4 * h1 .^ 3 * m3 * h2 + h1 .^ 3 * m2 .^ 2 - 3 * h1 .^ 2 * m2 * h2 .^ 2 + 6 * h1 .^ 2 * m3 * h2 .^ 2 - 3 * h1 .^ 2 * m2 .^ 2 * h2 + 3 * h1 * m2 * h2 .^ 3 - 4 * h1 * m3 * h2 .^ 3 + 3 * h1 * m2 .^ 2 * h2 .^ 2 - m2 * h2 .^ 4 + m3 * h2 .^ 4 - h1 .^ 3 * m2 + 3 * h1 .^ 2 * m2 * h2 - 3 * h1 * m2 * h2 .^ 2 + m2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (D3*h2) * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2))) / 0.3e1 + (s2 * (h2 - 1) .^ 3 * (h1 .^ 4 * m2 .^ 2 * m3 - 2 * h1 .^ 4 * m2 * m3 - h1 .^ 3 * m2 .^ 2 * h2 + 4 * h1 .^ 3 * m2 * m3 * h2 + 3 * h1 .^ 2 * m2 .^ 2 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 - 3 * h1 * m2 .^ 2 * h2 .^ 3 + 4 * h1 * m2 * m3 * h2 .^ 3 + h1 .^ 4 * m3 + h1 .^ 3 * m2 * h2 - 4 * h1 .^ 3 * m3 * h2 + h1 .^ 3 * m2 .^ 2 - 3 * h1 .^ 2 * m2 * h2 .^ 2 + 6 * h1 .^ 2 * m3 * h2 .^ 2 - 3 * h1 .^ 2 * m2 .^ 2 * h2 + 3 * h1 * m2 * h2 .^ 3 - 4 * h1 * m3 * h2 .^ 3 + 3 * h1 * m2 .^ 2 * h2 .^ 2 - m2 * h2 .^ 4 + m3 * h2 .^ 4 - h1 .^ 3 * m2 + 3 * h1 .^ 2 * m2 * h2 - 3 * h1 * m2 * h2 .^ 2 + m2 * h2 .^ 3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D4*h2)) / 0.3e1 + (2 * m2 * Q * (h2 - 1) * (3 * h1 .^ 2 * m2 * m3 - 2 * h1 * m2 * m3 * h2 - 3 * h1 .^ 2 * m3 + 2 * h1 * m3 * h2 - 4 * h1 * m2 * m3 - m2 * h2 .^ 2 + m3 * h2 .^ 2 + 4 * h1 * m3 + 2 * h2 * m2 - 4 * h2 * m3 - m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) * (D1*h2)) + (m2 * Q * (h2 - 1) .^ 2 * (6 * h1 * m2 * m3 * (D1*h1) - 2 * (D1*h1) * m2 * m3 * h2 - 2 * h1 * m2 * m3 * (D1*h2) - 6 * h1 * m3 * (D1*h1) + 2 * (D1*h1) * m3 * h2 + 2 * h1 * m3 * (D1*h2) - 4 * (D1*h1) * m2 * m3 - 2 * m2 * h2 * (D1*h2) + 2 * m3 * h2 * (D1*h2) + 4 * (D1*h1) * m3 + 2 * (D1*h2) * m2 - 4 * (D1*h2) * m3) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3)) - (m2 * Q * (h2 - 1) .^ 2 * (3 * h1 .^ 2 * m2 * m3 - 2 * h1 * m2 * m3 * h2 - 3 * h1 .^ 2 * m3 + 2 * h1 * m3 * h2 - 4 * h1 * m2 * m3 - m2 * h2 .^ 2 + m3 * h2 .^ 2 + 4 * h1 * m3 + 2 * h2 * m2 - 4 * h2 * m3 - m2) / (h1 .^ 4 * m2 .^ 2 * m3 .^ 2 - 2 * h1 .^ 4 * m2 * m3 .^ 2 + 4 * h1 .^ 3 * m2 .^ 2 * m3 - 4 * h1 .^ 3 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m3 .^ 2 * h2 .^ 3 - 2 * m2 * m3 * h2 .^ 4 - 6 * h1 .^ 2 * m2 .^ 2 * m3 + 4 * m2 * m3 * h2 .^ 3 + 4 * h1 * m2 .^ 2 * m3 - 6 * m2 * m3 * h2 .^ 2 + 4 * m2 * m3 * h2 + m2 .^ 2 + h1 .^ 4 * m3 .^ 2 + m2 .^ 2 * h2 .^ 4 + m3 .^ 2 * h2 .^ 4 - 4 * m2 .^ 2 * h2 .^ 3 + 6 * m2 .^ 2 * h2 .^ 2 - 4 * m2 .^ 2 * h2 + 6 * h1 .^ 2 * m2 * m3 - 4 * h1 * m2 * m3 - 4 * h1 .^ 3 * m2 * m3 + 4 * h1 .^ 3 * m2 * m3 * h2 - 6 * h1 .^ 2 * m2 * m3 * h2 .^ 2 + 4 * h1 * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * h2 + 4 * h1 .^ 3 * m2 * m3 .^ 2 * h2 + 6 * h1 .^ 2 * m2 .^ 2 * m3 * h2 .^ 2 - 6 * h1 .^ 2 * m2 * m3 .^ 2 * h2 .^ 2 - 4 * h1 * m2 .^ 2 * m3 * h2 .^ 3 + 4 * h1 * m2 * m3 .^ 2 * h2 .^ 3) .^ 2 * (-8 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h1) - 4 * h1 .^ 3 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m3 .^ 2 * h2 .^ 3 + 4 * (D1*h1) * m2 .^ 2 * m3 + 4 * m2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m3 .^ 2 * (D1*h1) + 4 * m2 .^ 2 * h2 .^ 3 * (D1*h2) + 4 * m3 .^ 2 * h2 .^ 3 * (D1*h2) - 12 * m2 .^ 2 * h2 .^ 2 * (D1*h2) + 12 * m2 .^ 2 * h2 * (D1*h2) - 4 * (D1*h1) * m2 * m3 + 12 * h1 .^ 2 * m2 .^ 2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m3 .^ 2 * h2 .^ 2 * (D1*h2) - 8 * m2 * m3 * h2 .^ 3 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * (D1*h1) + 12 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * (D1*h1) + 4 * h1 .^ 3 * m2 * m3 * (D1*h2) + 4 * (D1*h1) * m2 * m3 * h2 .^ 3 - 4 * h1 .^ 3 * m2 .^ 2 * m3 * (D1*h2) + 4 * h1 .^ 3 * m2 * m3 .^ 2 * (D1*h2) - 4 * (D1*h1) * m2 .^ 2 * m3 * h2 .^ 3 + 4 * (D1*h1) * m2 * m3 .^ 2 * h2 .^ 3 + 4 * h1 .^ 3 * m2 .^ 2 * m3 .^ 2 * (D1*h1) - 4 * m2 .^ 2 * (D1*h2) + 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h1) - 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 * h2 * (D1*h2) + 12 * h1 * m2 * m3 * h2 .^ 2 * (D1*h2) - 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h1) + 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h1) + 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h1) + 12 * h1 .^ 2 * m2 .^ 2 * m3 * h2 * (D1*h2) - 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h1) - 12 * h1 .^ 2 * m2 * m3 .^ 2 * h2 * (D1*h2) - 12 * h1 * m2 .^ 2 * m3 * h2 .^ 2 * (D1*h2) + 12 * h1 * m2 * m3 .^ 2 * h2 .^ 2 * (D1*h2)))];

end
