<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2017" minor="3"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" preplot="" helpbrowser="standard" contextmenusize="automatic" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1080" rtablesize="10" useclientjvm="true" labelwidth="20" postplot="" typesetting="extended" ansi="false" elisiondigitsthreshold="10000" showassumed="1" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/>
<Group hide-input="false" hide-output="false" labelreference="L50" drawlabel="true">
<Input><Text-field style="Heading 1" layout="Heading 1">Evolution Equations Script</Text-field>
</Input>
</Group>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Set up</Text-field></Title>
<Group hide-input="false" hide-output="false" labelreference="L3520" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart;
with(LinearAlgebra):
with(PDEtools):
with(plots):
with(CodeGeneration):
declare(h1(t,x),y1(t,x),h2(t,x),y2(t,x)): 
constants:=constants,H1,H2,m2,m3,s1,s2:</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUYjNiYtSSNtaUdGJDYlUSR+aDFGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUTAmQXBwbHlGdW5jdGlvbjtGJy9GNVEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj8vJSlzdHJldGNoeUdGPy8lKnN5bW1ldHJpY0dGPy8lKGxhcmdlb3BHRj8vJS5tb3ZhYmxlbGltaXRzR0Y/LyUnYWNjZW50R0Y/LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTi1JKG1mZW5jZWRHRiQ2JC1GIzYoLUYuNiVRInRGJ0YxRjQtRjg2LVEiLEYnRjtGPS9GQUYzRkJGREZGRkhGSkZML0ZQUSwwLjMzMzMzMzNlbUYnLUYuNiVRInhGJ0YxRjQvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj9GO0Y7RjstRjg2LVExJkludmlzaWJsZVRpbWVzO0YnRjtGPUZARkJGREZGRkhGSkZMRk8tRi42JVE5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzRidGMUY0RmFvLUYuNiVRI2gxRidGMUY0Rjs=">KigtSSR+aDFHNiI2JEkidEdGJUkieEdGJSIiIkk5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzR0YlRilJI2gxR0YlRik=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUYjNiYtSSNtaUdGJDYlUSR+eTFGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUTAmQXBwbHlGdW5jdGlvbjtGJy9GNVEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj8vJSlzdHJldGNoeUdGPy8lKnN5bW1ldHJpY0dGPy8lKGxhcmdlb3BHRj8vJS5tb3ZhYmxlbGltaXRzR0Y/LyUnYWNjZW50R0Y/LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTi1JKG1mZW5jZWRHRiQ2JC1GIzYoLUYuNiVRInRGJ0YxRjQtRjg2LVEiLEYnRjtGPS9GQUYzRkJGREZGRkhGSkZML0ZQUSwwLjMzMzMzMzNlbUYnLUYuNiVRInhGJ0YxRjQvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj9GO0Y7RjstRjg2LVExJkludmlzaWJsZVRpbWVzO0YnRjtGPUZARkJGREZGRkhGSkZMRk8tRi42JVE5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzRidGMUY0RmFvLUYuNiVRI3kxRidGMUY0Rjs=">KigtSSR+eTFHNiI2JEkidEdGJUkieEdGJSIiIkk5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzR0YlRilJI3kxR0YlRik=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUYjNiYtSSNtaUdGJDYlUSR+aDJGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUTAmQXBwbHlGdW5jdGlvbjtGJy9GNVEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj8vJSlzdHJldGNoeUdGPy8lKnN5bW1ldHJpY0dGPy8lKGxhcmdlb3BHRj8vJS5tb3ZhYmxlbGltaXRzR0Y/LyUnYWNjZW50R0Y/LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTi1JKG1mZW5jZWRHRiQ2JC1GIzYoLUYuNiVRInRGJ0YxRjQtRjg2LVEiLEYnRjtGPS9GQUYzRkJGREZGRkhGSkZML0ZQUSwwLjMzMzMzMzNlbUYnLUYuNiVRInhGJ0YxRjQvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj9GO0Y7RjstRjg2LVExJkludmlzaWJsZVRpbWVzO0YnRjtGPUZARkJGREZGRkhGSkZMRk8tRi42JVE5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzRidGMUY0RmFvLUYuNiVRI2gyRidGMUY0Rjs=">KigtSSR+aDJHNiI2JEkidEdGJUkieEdGJSIiIkk5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzR0YlRilJI2gyR0YlRik=</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUYjNiYtSSNtaUdGJDYlUSR+eTJGJy8lJ2l0YWxpY0dRJXRydWVGJy8lLG1hdGh2YXJpYW50R1EnaXRhbGljRictSSNtb0dGJDYtUTAmQXBwbHlGdW5jdGlvbjtGJy9GNVEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRj8vJSlzdHJldGNoeUdGPy8lKnN5bW1ldHJpY0dGPy8lKGxhcmdlb3BHRj8vJS5tb3ZhYmxlbGltaXRzR0Y/LyUnYWNjZW50R0Y/LyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGTi1JKG1mZW5jZWRHRiQ2JC1GIzYoLUYuNiVRInRGJ0YxRjQtRjg2LVEiLEYnRjtGPS9GQUYzRkJGREZGRkhGSkZML0ZQUSwwLjMzMzMzMzNlbUYnLUYuNiVRInhGJ0YxRjQvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRj9GO0Y7RjstRjg2LVExJkludmlzaWJsZVRpbWVzO0YnRjtGPUZARkJGREZGRkhGSkZMRk8tRi42JVE5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzRidGMUY0RmFvLUYuNiVRI3kyRidGMUY0Rjs=">KigtSSR+eTJHNiI2JEkidEdGJUkieEdGJSIiIkk5d2lsbH5ub3d+YmV+ZGlzcGxheWVkfmFzR0YlRilJI3kyR0YlRik=</Equation></Text-field>
</Output>
</Group>
<Group hide-input="false" hide-output="false" labelreference="L3517" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">A:=Matrix(8,8,[[0, 0, 0, 0, 0, 1/2/m3, 1, 1],
               [h1(t,x)^2/2, h1(t,x), -h1(t,x)^2/2/m2,-h1(t,x), -1, 0, 0, 0],
               [0, 0, h2(t,x)^2/2/m2, h2(t,x), 1, -h2(t,x)^2/2/m3, -h2(t,x), -1],
               [h1(t,x), 1, -h1(t,x), -m2, 0, 0, 0, 0],
               [0, 0, h2(t,x), m2, 0, -h2(t,x), -m3, 0],
               [1, 0, -1, 0, 0, 0, 0, 0],
               [0, 0, 1, 0, 0, -1, 0, 0],
               [h1(t,x)^3/6, h1(t,x)^2/2, (h2(t,x)^3 - h1(t,x)^3)/6/m2, (h2(t,x)^2 - h1(t,x)^2)/2, h2(t,x) - h1(t,x), (1 - h2(t,x)^3)/6/m3, (1 - h2(t,x)^2)/2, 1 - h2(t,x)]]);
a:=Vector(8,[0, 0, 0, 0, 0, diff(h1(t,x),x$3)*s1, diff(h2(t,x),x$3)*s2, Q]);
latex(a)<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbW9HRiQ2LVEhRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRkMvJStleGVjdXRhYmxlR0Y0Ri8=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYjLUkjbW9HRiQ2LVEhRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRkM=</Equation>


</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUSJBRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GNlEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkAvJSlzdHJldGNoeUdGQC8lKnN5bW1ldHJpY0dGQC8lKGxhcmdlb3BHRkAvJS5tb3ZhYmxlbGltaXRzR0ZALyUnYWNjZW50R0ZALyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTy1JKG1mZW5jZWRHRiQ2KC1JJ210YWJsZUdGJDY8LUkkbXRyR0YkNi0tSSRtdGRHRiQ2KC1JI21uR0YkNiRRIjBGJ0Y8LyUpcm93YWxpZ25HUSFGJy8lLGNvbHVtbmFsaWduR0Zeby8lK2dyb3VwYWxpZ25HRl5vLyUocm93c3BhbkdRIjFGJy8lK2NvbHVtbnNwYW5HRmVvRmVuRmVuRmVuRmVuLUZmbjYoLUkmbWZyYWNHRiQ2KC1GaW42JEZlb0Y8LUYsNiYtRmluNiRRIjJGJ0Y8LUY5Ni1RMSZJbnZpc2libGVUaW1lcztGJ0Y8Rj5GQUZDRkVGR0ZJRksvRk5RJjAuMGVtRicvRlFGaHAtRi82JVEjbTNGJ0YyRjVGPC8lLmxpbmV0aGlja25lc3NHRmVvLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmFxLyUpYmV2ZWxsZWRHRkBGXG9GX29GYW9GY29GZm8tRmZuNihGXXBGXG9GX29GYW9GY29GZm9GZnFGXG9GX29GYW8tRlk2LS1GZm42KC1GIzYkLUZbcDYoLUklbXN1cEdGJDYlLUYjNiQtRi82JVEjaDFGJ0YyRjUtRiw2KEZlci1GOTYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y8Rj5GQUZDRkVGR0ZJRktGZ3BGaXAtRlM2JC1GLDYoLUYvNiVRInRGJ0YyRjUtRjk2LVEiLEYnRjxGPi9GQkY0RkNGRUZHRklGS0ZncC9GUVEsMC4zMzMzMzMzZW1GJy1GLzYlUSJ4RidGMkY1LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZARjxGPEZddEZgdEY8RmFwLyUxc3VwZXJzY3JpcHRzaGlmdEdGW29GYXBGXXFGX3FGYnFGZHEtRiw2KC1GW3A2KEZdcEZhcEZdcUZfcUZicUZkcUZkcC1GLDYkLUZhcjYlRmhyRmFwRmJ0RjxGXXRGYHRGPEZcb0Zfb0Zhb0Zjb0Zmby1GZm42KEZjckZcb0Zfb0Zhb0Zjb0Zmby1GZm42KC1GIzYkLUYsNiUtRjk2LVEqJnVtaW51czA7RidGPEY+RkFGQ0ZFRkdGSUZLL0ZOUSwwLjIyMjIyMjJlbUYnL0ZRRmh1LUZbcDYoRmByLUYsNiZGYXBGZHAtRi82JVEjbTJGJ0YyRjVGPEZdcUZfcUZicUZkcUY8LUYsNidGZHUtRiw2KEZmdEZkcC1GW3A2KC1GLDYmRmp0Rl10RmB0RjwtRiw2JkZedkZddEZgdEY8Rl1xRl9xRmJxRmRxRl10RmB0RjxGXXRGYHRGPEZcb0Zfb0Zhb0Zjb0Zmby1GZm42KC1GIzYkLUYsNiVGZHVGY3JGPC1GLDYnRmR1RmhyRl10RmB0RjxGXG9GX29GYW9GY29GZm8tRmZuNigtRmluNiRRKyZ1bWludXMwOzFGJ0Y8RlxvRl9vRmFvRmNvRmZvRmVuRmVuRmVuRlxvRl9vRmFvLUZZNi1GZW5GZW4tRmZuNigtRiM2JC1GW3A2KC1GYXI2JS1GIzYkLUYvNiVRI2gyRidGMkY1LUYsNihGZHhGanJGXXNGXXRGYHRGPEZhcEZidEZcdkZdcUZfcUZicUZkcS1GLDYoRmZ0RmRwLUZbcDYoLUYsNiYtRmFyNiVGZ3hGYXBGYnRGXXRGYHRGPEZpdkZdcUZfcUZicUZkcUZddEZgdEY8RlxvRl9vRmFvRmNvRmZvLUZmbjYoRmJ4RlxvRl9vRmFvRmNvRmZvRmZxLUZmbjYoLUYjNiQtRiw2JUZkdS1GW3A2KEZgeEZfcEZdcUZfcUZicUZkcUY8LUYsNidGZHUtRiw2KEZmdEZkcC1GW3A2KEZdeS1GLDYmRmpwRl10RmB0RjxGXXFGX3FGYnFGZHFGXXRGYHRGPEZddEZgdEY8RlxvRl9vRmFvRmNvRmZvLUZmbjYoLUYjNiQtRiw2JUZkdUZieEY8LUYsNidGZHVGZ3hGXXRGYHRGPEZcb0Zfb0Zhb0Zjb0Zmb0Zjd0Zcb0Zfb0Zhby1GWTYtRlx1RmZxRlt3LUZmbjYoLUYsNiVGZHVGXnZGPEZcb0Zfb0Zhb0Zjb0Zmb0ZlbkZlbkZlbkZlbkZcb0Zfb0Zhby1GWTYtRmVuRmVuRmF5LUZmbjYoRl52RlxvRl9vRmFvRmNvRmZvRmVuRmN6LUZmbjYoLUYsNiVGZHVGanBGPEZcb0Zfb0Zhb0Zjb0Zmb0ZlbkZcb0Zfb0Zhby1GWTYtRmZxRmVuRmN3RmVuRmVuRmVuRmVuRmVuRlxvRl9vRmFvLUZZNi1GZW5GZW5GZnFGZW5GZW5GY3dGZW5GZW5GXG9GX29GYW8tRlk2LS1GZm42KC1GIzYkLUZbcDYoLUZhcjYlRmNyLUZpbjYkUSIzRidGPEZidC1GaW42JFEiNkYnRjxGXXFGX3FGYnFGZHEtRiw2KC1GW3A2KEZdcEZqXGxGXXFGX3FGYnFGZHFGZHAtRiw2JC1GYXI2JUZockZnXGxGYnRGPEZddEZgdEY8RlxvRl9vRmFvRmNvRmZvRmpxLUZmbjYoLUYjNiQtRltwNigtRiw2Ji1GYXI2JUZieEZnXGxGYnQtRjk2LVEoJm1pbnVzO0YnRjxGPkZBRkNGRUZHRklGS0ZndUZpdUZlXGxGPC1GLDYmRmpcbEZkcEZedkY8Rl1xRl9xRmJxRmRxLUYsNihGX11sRmRwLUZbcDYoLUYsNiYtRiw2Ji1GLDYkLUZhcjYlRmd4RmdcbEZidEY8Rl9ebEZhXWxGPEZddEZgdEY8Rml2Rl1xRl9xRmJxRmRxRl10RmB0RjxGXG9GX29GYW9GY29GZm8tRmZuNigtRiM2JC1GLDYmLUZbcDYoRmB4RmFwRl1xRl9xRmJxRmRxRl9ebEZeckY8LUYsNiYtRiw2KEZmdEZkcC1GLDYkRl95RjxGXXRGYHRGPEZfXmxGZHRGPEZcb0Zfb0Zhb0Zjb0Zmby1GZm42KC1GIzYkLUYsNiZGYnhGX15sRmNyRjwtRiw2JkZneEZfXmxGaHJGPEZcb0Zfb0Zhb0Zjb0Zmby1GZm42KC1GIzYkLUZbcDYoLUYsNiZGXXBGX15sRl1ebEY8LUYsNiZGalxsRmRwRmpwRjxGXXFGX3FGYnFGZHEtRiw2KEZfXWxGZHAtRltwNigtRiw2Ji1GLDYmRl1wRl9ebEZcX2xGPEZddEZgdEY8RmF6Rl1xRl9xRmJxRmRxRl10RmB0RjxGXG9GX29GYW9GY29GZm8tRmZuNigtRiM2JC1GLDYmRmZ0Rl9ebEZmX2xGPC1GLDYmRmZ0Rl9ebEZqX2xGPEZcb0Zfb0Zhb0Zjb0Zmby1GZm42KC1GIzYkLUYsNiZGXXBGX15sRmJ4RjwtRiw2JkZdcEZfXmxGZ3hGPEZcb0Zfb0Zhb0Zjb0Zmb0Zcb0Zfb0Zhby8lJmFsaWduR1ElYXhpc0YnL0Zdb1EpYmFzZWxpbmVGJy9GYG9GYXEvRmJvUSd8ZnJsZWZ0fGhyRicvJS9hbGlnbm1lbnRzY29wZUdGNC8lLGNvbHVtbndpZHRoR1ElYXV0b0YnLyUmd2lkdGhHRmRjbC8lK3Jvd3NwYWNpbmdHUSYxLjBleEYnLyUuY29sdW1uc3BhY2luZ0dRJjAuOGVtRicvJSlyb3dsaW5lc0dRJW5vbmVGJy8lLGNvbHVtbmxpbmVzR0ZfZGwvJSZmcmFtZUdGX2RsLyUtZnJhbWVzcGFjaW5nR1EsMC40ZW1+MC41ZXhGJy8lKmVxdWFscm93c0dGQC8lLWVxdWFsY29sdW1uc0dGQC8lLWRpc3BsYXlzdHlsZUdGQC8lJXNpZGVHUSZyaWdodEYnLyUwbWlubGFiZWxzcGFjaW5nR0ZcZGxGPC9JK21zZW1hbnRpY3NHRiRRJ01hdHJpeEYnLyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0ZiZWxGPC1JJW1zdWJHRiQ2JS1GLzYlUShfcnRhYmxlRidGMkY1LUYsNiYtRmluNiRRNTE4NDQ2ODgzOTEwNDYyMzA5MDcwRidGPEZddEZgdEY8LyUvc3Vic2NyaXB0c2hpZnRHRltv">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSJBR0YoWCxJKWFueXRoaW5nR0YmRihGKFtnbCEiJSEhISNbbyIpIiktSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjBGKC1JKm1jb21wbGV0ZUdGMjYkLUkmbWZyYWNHRjI2JC1JJW1zdXBHRjI2JEtGODYkLUkjbWlHRjI2I1EjaDFGKC1JJl9Ib2xkR0YyNiM3Iy1JI2gxR0YoNiRJInRHRihJInhHRigvUSptY29tcGxldGVGKEZKLUYxNiNRIjJGKEZRLUZHNiM3IywkKiRGSiIiIyMiIiJGWUYwRkBGMC1GMTYjUSIxRihGMC1GODYkLUY7NiQtRj42JEZALUYxNiNRIjNGKC1GMTYjUSI2RigtRkc2IzcjLCQqJEZKIiIkI0ZlbiIiJ0YwRkBGMEZmbkYwRjBGMEY3RjAtRjg2JC1JJW1yb3dHRjI2JC1JI21vR0YyNiNRKiZ1bWludXMwO0YoLUY7NiRGPS1GYHA2JUZRLUZjcDYjUTEmSW52aXNpYmxlVGltZXM7RigtRkM2I1EjbTJGKC1GRzYjNyMsJComRkpGWUkjbTJHRighIiIjRmZxRlktRjg2JC1GOzYkLUY+NiRLRjg2JC1GQzYjUSNoMkYoLUZHNiM3Iy1JI2gyR0YoRkwvRlBGZnJGUUZocC1GRzYjNyMsJComRmZyRllGZXFGZnFGWi1GODYkLUZgcDYkRmJwRkAtRkc2IzcjLCRGSkZmcUZeci1GMTYjUSsmdW1pbnVzMDsxRihGZm4tRjg2JC1GOzYkLUZgcDYlLUY+NiRGXnJGX28tRmNwNiNRKCZtaW51cztGKEZdby1GYHA2JUZib0ZqcEZdcS1GRzYjNyMsJComLCYqJEZmckZqb0ZlbkZpb0ZmcUZlbkZlcUZmcUZbcEYwRl5zRl5yLUZgcDYkRmJwRl1xRl1xRjBGMC1GODYkLUZgcDYlLUY7NiRGXHJGUUZhdEY6LUZHNiM3IywmKiRGZnJGWUZaRlhGZ3FGMEZmc0ZmbkYwRjBGMEYwLUY4NiQtRmBwNiVGXnJGYXRGQC1GRzYjNyMsJkZmckZlbkZKRmZxLUY7NiRGZm4tRmBwNiVGUUZqcC1GQzYjUSNtM0YoRjAtRjg2JC1GYHA2JEZicC1GOzYkRlxyRmR2LUZHNiM3IywkKiZGZnJGWUkjbTNHRihGZnFGZ3FGMC1GODYkLUZgcDYkRmJwRl5yLUZHNiM3IywkRmZyRmZxRjBGZnMtRjg2JC1GOzYkLUZgcDYlRmZuRmF0Rl90LUZgcDYlRmJvRmpwRmZ2LUZHNiM3IywkKiYsJkZlbkZlbkZcdUZmcUZlbkZkd0ZmcUZbcEZmbkYwRmV3RjAtRmBwNiRGYnBGZnZGMEYwLUY4NiQtRmBwNiUtRjs2JEZmbkZRRmF0RmN1LUZHNiM3IywmRlpGZW5GaXVGZ3FGZm5GMEZmc0YwRjBGMEYwLUY4NiQtRmBwNiVGZm5GYXRGXnItRkc2IzcjLCZGZW5GZW5GZnJGZnE3Iy1JJ01hdHJpeEdGJTYjL0kkJWlkR0YoIjVxITRCWTVSKW9XPQ==</Equation></Text-field>
</Output>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSVtcm93R0YkNiYtSSNtaUdGJDYlUSJhRicvJSdpdGFsaWNHUSV0cnVlRicvJSxtYXRodmFyaWFudEdRJ2l0YWxpY0YnLUkjbW9HRiQ2LVEpJkFzc2lnbjtGJy9GNlEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkAvJSlzdHJldGNoeUdGQC8lKnN5bW1ldHJpY0dGQC8lKGxhcmdlb3BHRkAvJS5tb3ZhYmxlbGltaXRzR0ZALyUnYWNjZW50R0ZALyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGTy1JKG1mZW5jZWRHRiQ2KC1JJ210YWJsZUdGJDY8LUkkbXRyR0YkNiYtSSRtdGRHRiQ2KC1JI21uR0YkNiRRIjBGJ0Y8LyUpcm93YWxpZ25HUSFGJy8lLGNvbHVtbmFsaWduR0Zeby8lK2dyb3VwYWxpZ25HRl5vLyUocm93c3BhbkdRIjFGJy8lK2NvbHVtbnNwYW5HRmVvRlxvRl9vRmFvRlhGWEZYRlgtRlk2Ji1GZm42KC1GIzYkLUYsNiYtRiM2JC1JJW1zdWJHRiQ2JS1GLzYlUSNoMUYnRjJGNS1GLDYoLUYvNiVRInhGJ0YyRjUtRjk2LVEoJmNvbW1hO0YnRjxGPi9GQkY0RkNGRUZHRklGSy9GTlEmMC4wZW1GJy9GUVEsMC4zMzMzMzMzZW1GJ0ZqcEZdcUZqcEY8LyUvc3Vic2NyaXB0c2hpZnRHRltvLUYsNigtRi82JVElZGlmZkYnRjJGNS1GOTYtUTAmQXBwbHlGdW5jdGlvbjtGJ0Y8Rj5GQUZDRkVGR0ZJRktGYXEvRlFGYnEtRlM2JC1GLDYoLUYsNihGaXFGXHItRlM2JC1GLDYoLUYsNihGaXFGXHItRlM2JC1GLDYoLUYsNihGZXBGXHItRlM2JC1GLDYoLUYvNiVRInRGJ0YyRjUtRjk2LVEiLEYnRjxGPkZgcUZDRkVGR0ZJRktGYXFGY3FGanAvJStmb3JlZ3JvdW5kR1EoWzAsMCwwXUYnLyUpcmVhZG9ubHlHRkBGPEY8Rlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjwtRjk2LVExJkludmlzaWJsZVRpbWVzO0YnRjxGPkZBRkNGRUZHRklGS0ZhcUZfci1GLzYlUSNzMUYnRjJGNUY8LUYsNiYtRlM2JEZncUY8RmF0RmR0RjxGXG9GX29GYW9GY29GZm9GXG9GX29GYW8tRlk2Ji1GZm42KC1GIzYkLUYsNiYtRiM2JC1GY3A2JS1GLzYlUSNoMkYnRjJGNUZocEZlcS1GLDYoRmlxRlxyLUZTNiQtRiw2KC1GLDYoRmlxRlxyLUZTNiQtRiw2KC1GLDYoRmlxRlxyLUZTNiQtRiw2KC1GLDYoRmd1RlxyRmJzRlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjxGaXNGanBGXHRGX3RGPEY8Rlx0Rl90RjxGYXQtRi82JVEjczJGJ0YyRjVGPC1GLDYmLUZTNiRGanVGPEZhdEZed0Y8RlxvRl9vRmFvRmNvRmZvRlxvRl9vRmFvLUZZNiYtRmZuNigtRi82JVEiUUYnRjJGNUZcb0Zfb0Zhb0Zjb0Zmb0Zcb0Zfb0Zhby8lJmFsaWduR1ElYXhpc0YnL0Zdb1EpYmFzZWxpbmVGJy9GYG9RJ2NlbnRlckYnL0Zib1EnfGZybGVmdHxockYnLyUvYWxpZ25tZW50c2NvcGVHRjQvJSxjb2x1bW53aWR0aEdRJWF1dG9GJy8lJndpZHRoR0ZpeC8lK3Jvd3NwYWNpbmdHUSYxLjBleEYnLyUuY29sdW1uc3BhY2luZ0dRJjAuOGVtRicvJSlyb3dsaW5lc0dRJW5vbmVGJy8lLGNvbHVtbmxpbmVzR0ZkeS8lJmZyYW1lR0ZkeS8lLWZyYW1lc3BhY2luZ0dRLDAuNGVtfjAuNWV4RicvJSplcXVhbHJvd3NHRkAvJS1lcXVhbGNvbHVtbnNHRkAvJS1kaXNwbGF5c3R5bGVHRkAvJSVzaWRlR1EmcmlnaHRGJy8lMG1pbmxhYmVsc3BhY2luZ0dGYXlGPC9JK21zZW1hbnRpY3NHRiRRKkNvbFZlY3RvckYnLyUlb3BlbkdRJyZsc3FiO0YnLyUmY2xvc2VHUScmcnNxYjtGJ0ZnekY8LUZjcDYlLUYvNiVRKF9ydGFibGVGJ0YyRjUtRiw2Ji1GaW42JFE1MTg0NDY4ODM5MTA0NjIyOTIyMDZGJ0Y8Rlx0Rl90RjxGZXE=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyM+SSJhR0YoWCpJKWFueXRoaW5nR0YmRihGKFtnbCEjJSEhISIpIiktSSNtbkc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiNRIjBGKEYwRjBGMEYwLUkqbWNvbXBsZXRlR0YyNiQtSSVtcm93R0YyNiUtRjg2JC1JJW1zdWJHRjI2JC1JI21pR0YyNiNRI2gxRigtRjs2Jy1GQzYjUSJ4RigtSSNtb0dGMjYjUSgmY29tbWE7RihGSEZLRkgtSSZfSG9sZEdGMjYjNyMtSSVkaWZmR0YmNiQtRlQ2JC1GVDYkLUkjaDFHRig2JEkidEdGKEkieEdGKEZobkZobkZobi1GTDYjUTEmSW52aXNpYmxlVGltZXM7RigtRkM2I1EjczFGKC1GUDYjNyMqJkZTIiIiSSNzMUdGKEZjby1GODYkLUY7NiUtRjg2JC1GQDYkLUZDNiNRI2gyRihGRi1GUDYjNyMtRlQ2JC1GVDYkLUZUNiQtSSNoMkdGKEZmbkZobkZobkZobkZpbi1GQzYjUSNzMkYoLUZQNiM3IyomRmNwRmNvSSNzMkdGKEZjby1GQzYjUSJRRig3Iy0mSSdWZWN0b3JHRiU2I0knY29sdW1uR0YoNiMvSSQlaWRHRigiNTFBSGkvIlIpb1c9</Equation></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output"><Font encoding="UTF-8"> \134left[ \134begin {array}{c} 0\134\134 \134noalign{\134medskip}0\134\134 \134noalign{\134medskip}0
\134\134 \134noalign{\134medskip}0\134\134 \134noalign{\134medskip}0\134\134 \134noalign{\134medskip}
 \134left( {\134frac {\134partial ^{3}}{\134partial {x}^{3}}}{\134it h1} \134left( t,x
 \134right)  \134right) {\134it s1}\134\134 \134noalign{\134medskip} \134left( {\134frac {
\134partial ^{3}}{\134partial {x}^{3}}}{\134it h2} \134left( t,x \134right)  \134right) 
{\134it s2}\134\134 \134noalign{\134medskip}Q\134end {array} \134right] </Font></Text-field>
</Output>
</Group>
<Group hide-output="false" labelreference="L3518" drawlabel="true" applyint="true" applyrational="true">
<Input><Text-field style="Text" size="14" layout="Normal"><Font size="14">u1 = p1x/2*y^2 + c1*y</Font></Text-field><Text-field style="Text" size="14" layout="Normal"><Font size="14">u2 = p2x/(2*m2)*y^2 + c2*y + d2</Font></Text-field><Text-field style="Text" size="14" layout="Normal"><Font size="14">u3 = p3x/(2*m3)*y^2 + c3*y + d3 </Font></Text-field><Text-field style="Text" layout="Normal"><Font size="14">b = [p1x,c1,p2x,c2,d2,p3x,c3,d3]</Font></Text-field>
</Input>
</Group>
<Group hide-output="false" labelreference="L3519" drawlabel="true" applyint="true" applyrational="true">
<Input><Text-field style="Heading 2" layout="Heading 2">Solving and building solutions</Text-field>
</Input>
</Group>
<Group hide-input="false" hide-output="false" labelreference="L3516" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">b:=factor(MatrixInverse(A).a):
u1:=collect(b[1]*y^2/2+b[2]*y,y,factor):
u2:=collect(b[3]*y^2/2/m2+b[4]*y+b[5],y,factor):
u3:=collect(b[6]*y^2/2/m3+b[7]*y+b[8],y,factor):
</Text-field>
</Input>
</Group>
<Group hide-input="false" hide-output="false" labelreference="L4816" drawlabel="true">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">evolution_1_notdiff:=collect(int(u1,y=0..h1(t,x)),{diff(h1(t,x),x$3),diff(h2(t,x),x$3)},factor):
evolution_2_notdiff:=collect(int(u3,y=1..h2(t,x)),{diff(h1(t,x),x$3),diff(h2(t,x),x$3)},factor):

evolution_1_notdiff_eta:=eval(evolution_1_notdiff,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x)}):
evolution_2_notdiff_eta:=eval(evolution_2_notdiff,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x)}):

evolution_1:=diff(evolution_1_notdiff, x):
evolution_2:=diff(evolution_2_notdiff, x):

evolution_1_eta:=eval(evolution_1,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x)}):
evolution_2_eta:=eval(evolution_2,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x)}):

evolution_1_delta:=eval(evolution_1_eta,{y1(t,x)=delta*y1(t,x),y2(t,x)=delta*y2(t,x)}):
evolution_2_delta:=eval(evolution_2_eta,{y1(t,x)=delta*y1(t,x),y2(t,x)=delta*y2(t,x)}):

evolution_1_linear:=coeff(taylor(evolution_1_delta,delta,2),delta,1):
evolution_2_linear:=coeff(taylor(evolution_2_delta,delta,2),delta,1):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L4826" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#Backing out velocities
u1_eta:=simplify(eval(u1,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):
u2_eta:=simplify(eval(u2,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):
u3_eta:=simplify(eval(u3,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):

v1:=int(diff(u1,x),y=0..y):
v2:=int(diff(u1,x),y=h1..y)+int(diff(u1,x),y=0..h1):
v3:=int(diff(u1,x),y=h2..y)+int(diff(u1,x),y=h1..h2)+int(diff(u1,x),y=0..h1):

v1_eta:=simplify(eval(v1,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):
v2_eta:=simplify(eval(v2,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):
v3_eta:=simplify(eval(v3,{h1(t,x)=H1+y1(t,x),h2(t,x)=H2+y2(t,x),y=z})):</Text-field>
</Input>
</Group>
<Group hide-input="false" labelreference="L4824" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">#Matlab(simplify(evolution_1_linear));
#Matlab(simplify(evolution_2_linear));
#Matlab((evolution_1_eta));
#<Equation executable="true" style="2D Input" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbW9HRiQ2LVEhRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRkMvJStleGVjdXRhYmxlR0Y0Ri8=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYlLUkjbW9HRiQ2LVEhRicvJSxtYXRodmFyaWFudEdRJ25vcm1hbEYnLyUmZmVuY2VHUSZmYWxzZUYnLyUqc2VwYXJhdG9yR0Y0LyUpc3RyZXRjaHlHRjQvJSpzeW1tZXRyaWNHRjQvJShsYXJnZW9wR0Y0LyUubW92YWJsZWxpbWl0c0dGNC8lJ2FjY2VudEdGNC8lJ2xzcGFjZUdRJjAuMGVtRicvJSdyc3BhY2VHRkMvJStleGVjdXRhYmxlR0Y0Ri8=</Equation>Matlab((evolution_2_eta));
#Matlab((evolution_1_notdiff_eta));
#Matlab((evolution_2_notdiff_eta));
#simplify(evolution_1_notdiff)
(coeff(evolution_1_notdiff,Q,1))</Text-field>
</Input>
<Output><Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUkqbWNvbXBsZXRlRzYjL0krbW9kdWxlbmFtZUc2IkksVHlwZXNldHRpbmdHSShfc3lzbGliR0YnNiQtSSZtZnJhY0dGJDYoLUklbXJvd0dGJDYqLUklbXN1cEdGJDYlLUYjNiQtSSNtaUdGJDYlUSNoMUYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GLzYoRjYtSSNtb0dGJDYtUTAmQXBwbHlGdW5jdGlvbjtGJy9GPlEnbm9ybWFsRicvJSZmZW5jZUdRJmZhbHNlRicvJSpzZXBhcmF0b3JHRkovJSlzdHJldGNoeUdGSi8lKnN5bW1ldHJpY0dGSi8lKGxhcmdlb3BHRkovJS5tb3ZhYmxlbGltaXRzR0ZKLyUnYWNjZW50R0ZKLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGWS1JKG1mZW5jZWRHRiQ2JC1GLzYoLUY3NiVRInRGJ0Y6Rj0tRkM2LVEiLEYnRkZGSC9GTEY8Rk1GT0ZRRlNGVUZXL0ZlblEsMC4zMzMzMzMzZW1GJy1GNzYlUSJ4RidGOkY9LyUrZm9yZWdyb3VuZEdRKFswLDAsMF1GJy8lKXJlYWRvbmx5R0ZKRkZGRkZnb0Zqb0ZGLUkjbW5HRiQ2JFEiMkYnRkYvJTFzdXBlcnNjcmlwdHNoaWZ0R1EiMEYnLUZDNi1RMSZJbnZpc2libGVUaW1lcztGJ0ZGRkhGS0ZNRk9GUUZTRlVGV0ZaLUY3NiVRI20yRidGOkY9RmNwLUY3NiVRI20zRidGOkY9RmNwLUZnbjYkLUYvNjItRi82KEYxRmNwRmZwRmNwRmlwRkYtRkM2LVEoJm1pbnVzO0YnRkZGSEZLRk1GT0ZRRlNGVS9GWFEsMC4yMjIyMjIyZW1GJy9GZW5GZnEtRi82JkYxRmNwRmlwRkYtRkM2LVEnJnBsdXM7RidGRkZIRktGTUZPRlFGU0ZVRmVxRmdxLUYvNipGXHBGY3BGNEZjcC1GIzYkLUY3NiVRI2gyRidGOkY9LUYvNihGYXJGQkZmbkZnb0Zqb0ZGRmNwRmZwRkZGYnEtRi82KkZccEZjcEY0RmNwRmlwRmNwRl9yRkZGYnEtRi82KC1GXXA2JFEiM0YnRkZGY3BGZnBGY3AtRjI2JUZfckZccEZgcEZGRmpxLUYvNihGanJGY3BGaXBGY3BGXXNGRkZicS1GLzYoRlxwRmNwRjRGY3BGZnBGRkZqcS1GLzYmRmpyRmNwRmZwRkZGRkZGRkYtRi82W28tRkM2LVEqJnVtaW51czA7RidGRkZIRktGTUZPRlFGU0ZVRmVxRmdxLUYvNiwtRl1wNiRRIjRGJ0ZGRmNwLUYyNiVGNEZqckZgcEZjcC1GMjYlRmZwRlxwRmBwRmNwRmlwRmNwRl9yRkZGanEtRi82LEZcdEZjcEZfdEZjcEZmcEZjcC1GMjYlRmlwRlxwRmBwRmNwRl9yRkZGanEtRi82LC1GXXA2JFEiNkYnRkZGY3BGMUZjcEZhdEZjcEZpcEZjcEZdc0ZGRmJxLUYvNixGaXRGY3BGMUZjcEZmcEZjcEZldEZjcEZdc0ZGRmJxLUYvNixGXHRGY3BGNEZjcEZhdEZjcEZpcEZjcC1GMjYlRl9yRmpyRmBwRkZGanEtRi82LEZcdEZjcEY0RmNwRmZwRmNwRmV0RmNwRmB1RkZGanEtRi82LEZcdEZjcEZfdEZjcEZmcEZjcEZpcEZjcEZfckZGRmJxLUYvNixGaXRGY3BGMUZjcEZmcEZjcEZpcEZjcEZdc0ZGRmpxLUYvNixGXHRGY3BGNEZjcEZmcEZjcEZpcEZjcEZgdUZGRmpxRmF0RmpxLUYvNiYtRjI2JUY0Rlx0RmBwRmNwRmV0RkZGanEtRi82JkZhdEZjcC1GMjYlRl9yRlx0RmBwRkZGanEtRi82JkZldEZjcEZgdkZGRmJxLUYvNihGXHRGY3BGYXRGY3BGYHVGRkZqcS1GLzYoRml0RmNwRmF0RmNwRl1zRkZGYnEtRi82KEZcdEZjcEZhdEZjcEZfckZGRmpxLUYvNipGaXRGY3BGMUZjcEZmcEZjcEZpcEZGRmpxLUYvNihGXHZGY3BGYXRGY3BGZXRGRkZicS1GLzYqRlxwRmNwRlx2RmNwRmZwRmNwRmV0RkZGanEtRi82KkZcdEZjcEZfdEZjcEZhdEZjcEZpcEZGRmJxLUYvNipGXHRGY3BGX3RGY3BGZXRGY3BGX3JGRkZqcS1GLzYqRml0RmNwRjFGY3BGZXRGY3BGXXNGRkZicS1GLzYqRlx0RmNwRjRGY3BGZXRGY3BGYHVGRkZicS1GLzYqRlxwRmNwRmZwRmNwRmlwRmNwRmB2RkZGYnEtRi82KkZpdEZjcEYxRmNwRmF0RmNwRmlwRkZGanEtRi82KkZcdEZjcEZmcEZjcEZpcEZjcEZgdUZGRmpxLUYvNipGXHRGY3BGNEZjcEZhdEZjcEZpcEZGRmJxLUYvNipGaXRGY3BGZnBGY3BGaXBGY3BGXXNGRkZqcS1GLzYqRlx0RmNwRmZwRmNwRmlwRmNwRl9yRkZGYnEtRi82KkZcdEZjcEY0RmNwRmZwRmNwRmlwRkZGYnEtRi82KkZcdEZjcEZfdEZjcEZmcEZjcEZpcEZGRkYvJS5saW5ldGhpY2tuZXNzR1EiMUYnLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRl15LyUpYmV2ZWxsZWRHRkotRiw2KC1GLzYsLUYyNiVGQEZccEZgcEZjcEZmcEZjcEZpcEZjcC1GZ242JC1GLzYyLUYvNihGZnlGY3BGZnBGY3BGaXBGRkZicS1GLzYmRmZ5RmNwRmlwRkYtRkM2LVEiK0YnRkZGSEZLRk1GT0ZRRlNGVUZlcUZncS1GLzYqRlxwRmNwRkBGY3BGZHJGY3BGZnBGRkZicS1GLzYqRlxwRmNwRkBGY3BGaXBGY3BGZHJGRkZicS1GLzYoRmpyRmNwRmZwRmNwLUYyNiVGZHJGXHBGYHBGRkZgei1GLzYoRmpyRmNwRmlwRmNwRml6RkZGYnEtRi82KEZccEZjcEZARmNwRmZwRkZGYHpGY3NGRkZGRmdvRmpvRkYtRi82Ji1GLzZqbi1GLzYkRmF0RkZGYHotRi82Ji1GMjYlRkBGXHRGYHBGY3BGZXRGRkZgei1GLzYmRmF0RmNwLUYyNiVGZHJGXHRGYHBGRkZgei1GLzYmRmV0RmNwRltcbEZGRmJxLUYvNihGXHRGY3BGYXRGY3AtRjI2JUZkckZqckZgcEZGRmB6LUYvNihGaXRGY3BGYXRGY3BGaXpGRkZicS1GLzYoRlx0RmNwRmF0RmNwRmRyRkZGYHotRi82KEZnW2xGY3BGYXRGY3BGZXRGRkZicS1GLzYqRlxwRmNwRmdbbEZjcEZmcEZjcEZldEZGRmB6LUYvNipGXHRGY3AtRjI2JUZARmpyRmBwRmNwRmF0RmNwRmlwRkZGYnEtRi82KkZcdEZjcEZdXWxGY3BGZXRGY3BGZHJGRkZgei1GLzYqRml0RmNwRmZ5RmNwRmV0RmNwRml6RkZGYnEtRi82KkZcdEZjcEZARmNwRmV0RmNwRmFcbEZGRmJxLUYvNipGXHBGY3BGZnBGY3BGaXBGY3BGW1xsRkZGYnEtRi82KkZpdEZjcEZmeUZjcEZhdEZjcEZpcEZGRmB6LUYvNipGXHRGY3BGZnBGY3BGaXBGY3BGYVxsRkZGYHotRi82KkZcdEZjcEZARmNwRmF0RmNwRmlwRkZGYnEtRi82KkZpdEZjcEZmcEZjcEZpcEZjcEZpekZGRmB6LUYvNipGXHRGY3BGZnBGY3BGaXBGY3BGZHJGRkZgei1GLzYqRml0RmNwRmZ5RmNwRmZwRmNwRmlwRkZGYnEtRi82KkZcdEZjcEZARmNwRmZwRmNwRmlwRkZGYnEtRi82KkZcdEZjcEZdXWxGY3BGZnBGY3BGaXBGRkZicS1GLzYsRlx0RmNwRl1dbEZjcEZhdEZjcEZpcEZjcEZkckZGRmB6LUYvNixGXHRGY3BGXV1sRmNwRmZwRmNwRmV0RmNwRmRyRkZGYHotRi82LEZpdEZjcEZmeUZjcEZhdEZjcEZpcEZjcEZpekZGRmJxLUYvNixGaXRGY3BGZnlGY3BGZnBGY3BGZXRGY3BGaXpGRkZicS1GLzYsRlx0RmNwRkBGY3BGYXRGY3BGaXBGY3BGYVxsRkZGYHotRi82LEZcdEZjcEZARmNwRmZwRmNwRmV0RmNwRmFcbEZGRmB6LUYvNixGXHRGY3BGXV1sRmNwRmZwRmNwRmlwRmNwRmRyRkZGYnEtRi82LEZpdEZjcEZmeUZjcEZmcEZjcEZpcEZjcEZpekZGRmB6LUYvNixGXHRGY3BGQEZjcEZmcEZjcEZpcEZjcEZhXGxGRkZGRmdvRmpvRkZGaHhGW3lGXnlGYHk=">LV9JLFR5cGVzZXR0aW5nRzYkJSpwcm90ZWN0ZWRHSShfc3lzbGliRzYiSSxtcHJpbnRzbGFzaEdGKDYkNyMqLEtJKm1jb21wbGV0ZUc2JEYmL0krbW9kdWxlbmFtZUdGKEYkNiQtSSNtaUdGLzYjUSNoMUYoLUkmX0hvbGRHRi82IzcjLUkjaDFHRig2JEkidEdGKEkieEdGKC9RKm1jb21wbGV0ZUYoRjsiIiNJI20yR0YoIiIiSSNtM0dGKEZELDIqKEYtRkJGQ0ZERkVGREZEKiZGLUZCRkVGRCEiIiooRi1GREtGLjYkLUY0NiNRI2gyRigtRjg2IzcjLUkjaDJHRihGPS9GQUZTRkRGQ0ZERkIqKEYtRkRGRUZERktGRCEiIyomRkNGREZLRkIhIiQqJkZFRkRGS0ZCIiIkKiZGLUZERkNGREZXRkNGZW5GRCxqbioqRi1GZW5GQ0ZCRkVGREZLRkQhIiUqKkYtRmVuRkNGREZFRkJGS0ZEIiIlKipGLUZCRkNGQkZFRkRGS0ZCIiInKipGLUZCRkNGREZFRkJGS0ZCISInKipGLUZERkNGQkZFRkRGS0ZlbkZpbioqRi1GREZDRkRGRUZCRktGZW5GW28qKkYtRmVuRkNGREZFRkRGS0ZERltvKipGLUZCRkNGREZFRkRGS0ZCRl9vKipGLUZERkNGREZFRkRGS0ZlbkZbbyokRkNGQkZEKiZGLUZbb0ZFRkJGRComRkNGQkZLRltvRkQqJkZFRkJGS0Zbb0ZEKiZGQ0ZCRktGZW5GaW4qJkZDRkJGS0ZCRl1vKiZGQ0ZCRktGREZpbkZHRl1vKihGLUZbb0ZDRkJGRUZCRkQqKEYtRltvRkNGREZFRkJGVyooRi1GZW5GQ0ZCRkVGREZbbyooRi1GZW5GRUZCRktGREZpbiooRi1GQkZFRkJGS0ZCRl1vKihGLUZERkVGQkZLRmVuRmluKihGQ0ZERkVGREZLRltvRlcqKEYtRkJGQ0ZCRkVGREZfbyooRkNGREZFRkRGS0ZlbkZbbyooRi1GREZDRkJGRUZERltvKihGQ0ZERkVGREZLRkJGX28qKEZDRkRGRUZERktGREZbbyooRi1GREZDRkRGRUZERmluKihGLUZlbkZDRkRGRUZERmluRkk3IyosRjtGQkZDRkRGRUZELDIqKEY7RkJGQ0ZERkVGREZEKiZGO0ZCRkVGREZJKihGO0ZERlNGREZDRkRGQiooRjtGREZFRkRGU0ZERlcqJkZDRkRGU0ZCRlkqJkZFRkRGU0ZCRmVuKiZGO0ZERkNGREZXRkNGZW5GRCxqbkZlb0ZEKiZGO0Zbb0ZFRkJGRComRkNGQkZTRltvRkQqJkZFRkJGU0Zbb0ZEKiZGQ0ZCRlNGZW5GaW4qJkZDRkJGU0ZCRl1vKiZGQ0ZCRlNGREZpbiooRjtGW29GQ0ZCRkVGQkZEKihGO0Zbb0ZDRkRGRUZCRlcqKEY7RmVuRkNGQkZFRkRGW28qKEY7RmVuRkVGQkZTRkRGaW4qKEY7RkJGRUZCRlNGQkZdbyooRjtGREZFRkJGU0ZlbkZpbiooRkNGREZFRkRGU0Zbb0ZXKihGO0ZCRkNGQkZFRkRGX28qKEZDRkRGRUZERlNGZW5GW28qKEY7RkRGQ0ZCRkVGREZbbyooRkNGREZFRkRGU0ZCRl9vKihGQ0ZERkVGREZTRkRGW29GXXFGXW8qKEY7RkRGQ0ZERkVGREZpbiooRjtGZW5GQ0ZERkVGREZpbioqRjtGZW5GQ0ZCRkVGREZTRkRGaW4qKkY7RmVuRkNGREZFRkJGU0ZERltvKipGO0ZCRkNGQkZFRkRGU0ZCRl1vKipGO0ZCRkNGREZFRkJGU0ZCRl9vKipGO0ZERkNGQkZFRkRGU0ZlbkZpbioqRjtGREZDRkRGRUZCRlNGZW5GW28qKkY7RmVuRkNGREZFRkRGU0ZERltvKipGO0ZCRkNGREZFRkRGU0ZCRl9vKipGO0ZERkNGREZFRkRGU0ZlbkZbb0ZJ</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L4827" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Matlab(u1_eta)</Text-field>
</Input>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20the%20function%20names%20%7Bdiff,%20y1,%20y2%7D%20are%20not%20recognized%20in%20the%20target%20language" hyperlink="true"><Font style="HyperlinkWarning">Warning, the function names {diff, y1, y2} are not recognized in the target language</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">cg = 0.12e2 * z * ((-(m2 - m3) ^ 2 * (y1(t, x) - z / 0.2e1 + H1) * y2(t, x) ^ 4 + 0.2e1 * (m2 - m3) * (m3 * (m2 - 0.2e1) * y1(t, x) ^ 2 + (((-z + 0.2e1 * H1) * m2 + z - 0.4e1 * H1 + (2 * H2)) * m3 - 0.2e1 * m2 * (H2 - 1)) * y1(t, x) + (-H1 * (z - H1) * m2 + (H1 - H2) * (-0.2e1 * H1 + z)) * m3 + m2 * (H2 - 1) * (-0.2e1 * H1 + z)) * y2(t, x) ^ 3 - 0.5e1 * (m2 - m3) * (m3 * (m2 - 0.6e1 / 0.5e1) * y1(t, x) ^ 3 - 0.9e1 / 0.10e2 * m3 * ((z - 0.10e2 / 0.3e1 * H1 + 0.4e1 / 0.3e1 * H2) * m2 - 0.2e1 / 0.3e1 * z + 0.4e1 * H1 - 0.8e1 / 0.3e1 * H2) * y1(t, x) ^ 2 + ((((0.6e1 / 0.5e1 * z - 0.12e2 / 0.5e1 * H1) * H2 - 0.9e1 / 0.5e1 * z * H1 + 0.3e1 * H1 ^ 2) * m2 + 0.6e1 / 0.5e1 * (H1 - H2) * (-0.3e1 * H1 + z + H2)) * m3 + 0.6e1 / 0.5e1 * m2 * ((H2 - 1) ^ 2)) * y1(t, x) + (-0.9e1 / 0.10e2 * ((-0.4e1 / 0.3e1 * z + 0.4e1 / 0.3e1 * H1) * H2 + H1 * (z - 0.10e2 / 0.9e1 * H1)) * H1 * m2 + 0.3e1 / 0.5e1 * (H1 - H2) ^ 2 * (-0.2e1 * H1 + z)) * m3 - 0.3e1 / 0.5e1 * m2 * ((H2 - 1) ^ 2) * (-0.2e1 * H1 + z)) * y2(t, x) ^ 2 + 0.4e1 * (m3 * (m2 - 0.1e1) * y1(t, x) ^ 4 - 0.3e1 / 0.4e1 * m3 * ((z - 0.16e2 / 0.3e1 * H1 + 0.10e2 / 0.3e1 * H2) * m2 - 0.2e1 / 0.3e1 * z + 0.16e2 / 0.3e1 * H1 - (4 * H2)) * y1(t, x) ^ 3 - 0.9e1 / 0.4e1 * (H1 - H2) * m3 * ((z - 0.8e1 / 0.3e1 * H1 + 0.2e1 / 0.3e1 * H2) * m2 - 0.2e1 / 0.3e1 * z + 0.8e1 / 0.3e1 * H1 - 0.4e1 / 0.3e1 * H2) * y1(t, x) ^ 2 + ((((0.3e1 * H1 - 0.3e1 / 0.2e1 * z) * (H2 ^ 2) + 0.9e1 / 0.2e1 * (z - 0.5e1 / 0.3e1 * H1) * H1 * H2 + 0.4e1 * H1 ^ 3 - 0.9e1 / 0.4e1 * z * H1 ^ 2) * m2 + 0.3e1 / 0.2e1 * (H1 - H2) ^ 2 * (z - 0.8e1 / 0.3e1 * H1 + 0.2e1 / 0.3e1 * H2)) * m3 - m2 * ((H2 - 1) ^ 3)) * y1(t, x) - 0.3e1 / 0.4e1 * (H1 - H2) * (((-0.2e1 * z + 0.2e1 * H1) * H2 + H1 * (z - 0.4e1 / 0.3e1 * H1)) * H1 * m2 - 0.2e1 / 0.3e1 * (H1 - H2) ^ 2 * (-0.2e1 * H1 + z)) * m3 + m2 * ((H2 - 1) ^ 3) * (-0.2e1 * H1 + z) / 0.2e1) * (m2 - m3) * y2(t, x) + m3 ^ 2 * (m2 - 0.1e1) * y1(t, x) ^ 5 - (m2 - 0.1e1) * ((z - 0.10e2 * H1 + (8 * H2)) * m3 - 0.8e1 * m2 * (H2 - 1)) * m3 * y1(t, x) ^ 4 / 0.2e1 - 0.2e1 * (((-0.5e1 / 0.2e1 * (H2 ^ 2) + (-0.3e1 / 0.2e1 * z + 0.8e1 * H1) * H2 + H1 * (z - 0.5e1 * H1)) * m2 - (H1 - H2) * (-0.5e1 * H1 + z + (3 * H2))) * m3 + 0.3e1 / 0.2e1 * (H2 - 1) * ((z - 0.16e2 / 0.3e1 * H1 + 0.5e1 / 0.3e1 * H2 + 0.5e1 / 0.3e1) * m2 - 0.2e1 / 0.3e1 * z + 0.16e2 / 0.3e1 * H1 - (2 * H2) - 0.2e1) * m2) * m3 * y1(t, x) ^ 3 - 0.3e1 * m3 * (((0.2e1 / 0.3e1 * (H2 ^ 3) + (-0.5e1 * H1 + 0.3e1 / 0.2e1 * z) * (H2 ^ 2) + (0.8e1 * H1 ^ 2 - 0.3e1 * z * H1) * H2 + H1 ^ 2 * (z - 0.10e2 / 0.3e1 * H1)) * m2 - (H1 - H2) ^ 2 * (z - 0.10e2 / 0.3e1 * H1 + 0.4e1 / 0.3e1 * H2)) * m3 + 0.3e1 * ((-0.2e1 / 0.9e1 * (H2 ^ 2) + (-z / 0.2e1 + 0.5e1 / 0.3e1 * H1 - 0.2e1 / 0.9e1) * H2 - 0.8e1 / 0.3e1 * H1 ^ 2 + (z + 0.5e1 / 0.3e1) * H1 - z / 0.2e1 - 0.2e1 / 0.9e1) * m2 + 0.4e1 / 0.9e1 * (H2 ^ 2) + (z / 0.3e1 - 0.2e1 * H1 + 0.4e1 / 0.9e1) * H2 + 0.8e1 / 0.3e1 * H1 ^ 2 + (-0.2e1 / 0.3e1 * z - 0.2e1) * H1 + z / 0.3e1 + 0.4e1 / 0.9e1) * (H2 - 1) * m2) * y1(t, x) ^ 2 + (-0.2e1 * (H1 - H2) * (((-0.2e1 * H1 + z) * (H2 ^ 2) - 0.7e1 / 0.2e1 * (z - 0.11e2 / 0.7e1 * H1) * H1 * H2 + H1 ^ 2 * (z - 0.5e1 / 0.2e1 * H1)) * m2 - (H1 - H2) ^ 2 * (z - 0.5e1 / 0.2e1 * H1 + H2 / 0.2e1)) * m3 ^ 2 - 0.9e1 * (H2 - 1) * (((-0.4e1 / 0.9e1 * H1 + 0.2e1 / 0.9e1 * z) * (H2 ^ 2) + (0.5e1 / 0.3e1 * H1 ^ 2 + (-0.4e1 / 0.9e1 - z) * H1 + 0.2e1 / 0.9e1 * z) * H2 - 0.16e2 / 0.9e1 * H1 ^ 3 + (z + 0.5e1 / 0.3e1) * H1 ^ 2 + (-0.4e1 / 0.9e1 - z) * H1 + 0.2e1 / 0.9e1 * z) * m2 - 0.2e1 / 0.9e1 * (H2 ^ 3) + (-0.2e1 / 0.9e1 * z + 0.8e1 / 0.9e1 * H1 + 0.2e1 / 0.9e1) * (H2 ^ 2) + (-0.2e1 * H1 ^ 2 + (0.2e1 / 0.3e1 * z + 0.8e1 / 0.9e1) * H1 - 0.4e1 / 0.9e1 - 0.2e1 / 0.9e1 * z) * H2 + 0.16e2 / 0.9e1 * H1 ^ 3 + (-0.2e1 / 0.3e1 * z - 0.2e1) * H1 ^ 2 + (0.2e1 / 0.3e1 * z + 0.8e1 / 0.9e1) * H1 - 0.2e1 / 0.9e1 * z) * m2 * m3 - m2 ^ 2 * ((H2 - 1) ^ 4)) * y1(t, x) - (H1 - H2) ^ 2 * (((-0.4e1 * z + 0.4e1 * H1) * H2 + H1 * (-0.2e1 * H1 + z)) * H1 * m2 - (H1 - H2) ^ 2 * (-0.2e1 * H1 + z)) * m3 ^ 2 / 0.2e1 - 0.3e1 * (H2 - 1) * (((-0.2e1 / 0.3e1 * H1 + 0.2e1 / 0.3e1 * z) * (H2 ^ 2) + (0.5e1 / 0.3e1 * H1 ^ 2 + (-0.2e1 / 0.3e1 - 0.3e1 / 0.2e1 * z) * H1 + 0.2e1 / 0.3e1 * z) * H2 - 0.4e1 / 0.3e1 * H1 ^ 3 + (z + 0.5e1 / 0.3e1) * H1 ^ 2 + (-0.2e1 / 0.3e1 - 0.3e1 / 0.2e1 * z) * H1 + 0.2e1 / 0.3e1 * z) * H1 * m2 - 0.2e1 / 0.3e1 * (-0.2e1 * H1 + z) * ((H2 ^ 2) / 0.2e1 + (-H1 / 0.2e1 - 0.1e1 / 0.2e1) * H2 + H1 ^ 2 - 0.3e1 / 0.2e1 * H1 + 0.1e1) * (H1 - H2)) * m2 * m3 + m2 ^ 2 * ((H2 - 1) ^ 4) * (-0.2e1 * H1 + z) / 0.2e1) * s1 * diff(diff(diff(y1(t, x), x), x), x) / 0.6e1 + ((H2 + y2(t, x) - 0.1e1) ^ 2 * ((-m2 / 0.2e1 + m3 / 0.2e1) * y2(t, x) ^ 3 + (m2 - m3) * (z - (6 * H2) + 0.4e1) * y2(t, x) ^ 2 / 0.4e1 + (-m3 * (m2 - 0.1e1) * y1(t, x) ^ 2 / 0.2e1 + m3 * (m2 - 0.1e1) * (-0.2e1 * H1 + z) * y1(t, x) / 0.2e1 + (H1 * (z - H1) * m2 / 0.2e1 + 0.3e1 / 0.2e1 * (H2 ^ 2) + (-z / 0.2e1 - 0.2e1) * H2 - z * H1 / 0.2e1 + z + H1 ^ 2 / 0.2e1) * m3 + m2 * (H2 - 1) * (-(3 * H2) + z + 0.1e1) / 0.2e1) * y2(t, x) + m3 * (m2 - 0.1e1) * y1(t, x) ^ 3 - 0.3e1 / 0.4e1 * (m2 - 0.1e1) * (z - 0.4e1 * H1 + 0.2e1 / 0.3e1 * H2 + 0.4e1 / 0.3e1) * m3 * y1(t, x) ^ 2 - 0.3e1 / 0.2e1 * (m2 - 0.1e1) * (-0.2e1 * H1 + z) * (H1 - H2 / 0.3e1 - 0.2e1 / 0.3e1) * m3 * y1(t, x) + (-0.3e1 / 0.4e1 * ((-0.2e1 / 0.3e1 * z + 0.2e1 / 0.3e1 * H1) * H2 - 0.4e1 / 0.3e1 * H1 ^ 2 + (z + 0.4e1 / 0.3e1) * H1 - 0.4e1 / 0.3e1 * z) * H1 * m2 + 0.3e1 / 0.4e1 * (H1 - H2) * (-0.2e1 / 0.3e1 * (H2 ^ 2) + (z / 0.3e1 - 0.2e1 / 0.3e1 * H1 + 0.4e1 / 0.3e1) * H2 - 0.4e1 / 0.3e1 * H1 ^ 2 + (z + 0.4e1 / 0.3e1) * H1 - 0.4e1 / 0.3e1 * z)) * m3 + m2 * ((H2 - 1) ^ 2) * (z - (2 * H2)) / 0.4e1) * s2 * diff(diff(diff(y2(t, x), x), x), x) / 0.3e1 + m3 * Q * ((-m2 + m3) * y2(t, x) ^ 2 + (m2 - m3) * (z - (2 * H2)) * y2(t, x) + m3 * (m2 - 0.1e1) * y1(t, x) ^ 2 - m3 * (m2 - 0.1e1) * (-0.2e1 * H1 + z) * y1(t, x) + (-H1 * (z - H1) * m2 + (H1 - H2) * (-H1 + z - H2)) * m3 + m2 * (H2 - 1) * (-H2 + z - 0.1e1))) * m2) / (0.2e1 * (m2 - m3) ^ 2 * y2(t, x) ^ 4 - 0.8e1 * (m2 - m3) * (m3 * (m2 - 0.1e1) * y1(t, x) + (H1 * m2 - H1 + H2) * m3 - m2 * (H2 - 1)) * y2(t, x) ^ 3 + 0.12e2 * (m2 - m3) * (m3 * (m2 - 0.1e1) * y1(t, x) ^ 2 + 0.2e1 * m3 * (m2 - 0.1e1) * (H1 - H2) * y1(t, x) + (H1 * (H1 - (2 * H2)) * m2 - (H1 - H2) ^ 2) * m3 + m2 * ((H2 - 1) ^ 2)) * y2(t, x) ^ 2 - 0.8e1 * (m2 - m3) * (m3 * (m2 - 0.1e1) * y1(t, x) ^ 3 + 0.3e1 * m3 * (m2 - 0.1e1) * (H1 - H2) * y1(t, x) ^ 2 + 0.3e1 * m3 * (H1 - H2) ^ 2 * (m2 - 0.1e1) * y1(t, x) + (H1 * (H1 ^ 2 - 0.3e1 * H2 * H1 + (3 * H2 ^ 2)) * m2 - (H1 - H2) ^ 3) * m3 - m2 * ((H2 - 1) ^ 3)) * y2(t, x) + 0.2e1 * m3 ^ 2 * (m2 - 0.1e1) ^ 2 * y1(t, x) ^ 4 + 0.8e1 * (m2 - 0.1e1) * m3 * ((H1 * m2 - H1 + H2) * m3 - m2 * (H2 - 1)) * y1(t, x) ^ 3 + 0.12e2 * (m2 - 0.1e1) * m3 * ((H1 ^ 2 * m2 - (H1 - H2) ^ 2) * m3 - 0.2e1 * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (H2 - 1) * m2) * y1(t, x) ^ 2 + 0.8e1 * (m2 - 0.1e1) * ((H1 ^ 3 * m2 - (H1 - H2) ^ 3) * m3 - 0.3e1 * ((H2 ^ 2) / 0.3e1 + (-H1 + 0.1e1 / 0.3e1) * H2 + H1 ^ 2 - H1 + 0.1e1 / 0.3e1) * (H2 - 1) * m2) * m3 * y1(t, x) + (0.2e1 * m2 ^ 2 * H1 ^ 4 + (-0.4e1 * H1 ^ 4 + 0.8e1 * H1 ^ 3 * H2 - 0.12e2 * H1 ^ 2 * (H2 ^ 2) + 0.8e1 * H1 * (H2 ^ 3)) * m2 + 0.2e1 * (H1 - H2) ^ 4) * m3 ^ 2 - 0.8e1 * (((H2 ^ 2) + (-0.3e1 / 0.2e1 * H1 + 0.1e1) * H2 + H1 ^ 2 - 0.3e1 / 0.2e1 * H1 + 0.1e1) * H1 * m2 - (H1 - H2) * ((H2 ^ 2) / 0.2e1 + (-H1 / 0.2e1 - 0.1e1 / 0.2e1) * H2 + H1 ^ 2 - 0.3e1 / 0.2e1 * H1 + 0.1e1)) * (H2 - 1) * m2 * m3 + 0.2e1 * m2 ^ 2 * ((H2 - 1) ^ 4));</Text-field>
</Output>
</Group>
<Group labelreference="L4825" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">Matlab(v1_eta)</Text-field>
</Input>
<Output><Text-field style="HyperlinkWarning" layout="HyperlinkWarning"><Hyperlink linktarget="http://www.maplesoft.com/support/help/errors/view.aspx?path=Warning,%20the%20function%20names%20%7Bdiff,%20y1,%20y2%7D%20are%20not%20recognized%20in%20the%20target%20language" hyperlink="true"><Font style="HyperlinkWarning">Warning, the function names {diff, y1, y2} are not recognized in the target language</Font></Hyperlink></Text-field>
</Output>
<Output><Text-field style="Line Printed Output" layout="Line Printed Output">cg0 = -0.6e1 * z ^ 2 * (-s1 * ((m3 ^ 2 * (m2 - 1) ^ 2 * y1(t, x) ^ 4) - (4 * (m2 - 1) * m3 * ((m2 - m3) * y2(t, x) + (-H1 * m2 + H1 - H2) * m3 + m2 * (H2 - 1)) * y1(t, x) ^ 3) + 0.6e1 * (m2 - 1) * m3 * (((m2 - m3) * y2(t, x) ^ 2) - (2 * (m2 - m3) * (H1 - H2) * y2(t, x)) + ((H1 ^ 2 * m2 - (H1 - H2) ^ 2) * m3) - 0.2e1 * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (H2 - 1) * m2) * (y1(t, x) ^ 2) - 0.4e1 * (m2 - 1) * (((m2 - m3) * y2(t, x) ^ 3) - (3 * (m2 - m3) * (H1 - H2) * y2(t, x) ^ 2) + (3 * (H1 - H2) ^ 2 * (m2 - m3) * y2(t, x)) + ((-H1 ^ 3 * m2 + (H1 - H2) ^ 3) * m3) + 0.3e1 * ((H1 ^ 2) + ((-H2 - 1) * H1) + (H2 ^ 2) / 0.3e1 + H2 / 0.3e1 + 0.1e1 / 0.3e1) * (H2 - 1) * m2) * m3 * y1(t, x) + ((m2 - m3) ^ 2 * y2(t, x) ^ 4) - (4 * (m2 - m3) * ((H1 * m2 - H1 + H2) * m3 - m2 * (H2 - 1)) * y2(t, x) ^ 3) + (6 * (m2 - m3) * ((H1 * (H1 - 2 * H2) * m2 - (H1 - H2) ^ 2) * m3 + m2 * (H2 - 1) ^ 2) * y2(t, x) ^ 2) - (4 * (m2 - m3) * ((H1 * (H1 ^ 2 - 3 * H2 * H1 + 3 * H2 ^ 2) * m2 - (H1 - H2) ^ 3) * m3 - m2 * (H2 - 1) ^ 3) * y2(t, x)) + ((m2 ^ 2 * H1 ^ 4 + (-2 * H1 ^ 4 + 4 * H2 * H1 ^ 3 - 6 * H1 ^ 2 * H2 ^ 2 + 4 * H2 ^ 3 * H1) * m2 + (H1 - H2) ^ 4) * m3 ^ 2) - 0.4e1 * (((H1 ^ 2) + (-0.3e1 / 0.2e1 * H2 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) + H2 + 0.1e1) * H1 * m2 - ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1) * (H1 - H2)) * (H2 - 1) * m2 * m3 + (m2 ^ 2 * (H2 - 1) ^ 4)) * ((m3 ^ 2 * (m2 - 1) * y1(t, x) ^ 5) + 0.4e1 * (m2 - 1) * m3 * (((m2 - m3) * y2(t, x)) + (-z / 0.12e2 + 0.5e1 / 0.4e1 * H1 - H2) * m3 + (m2 * (H2 - 1))) * (y1(t, x) ^ 4) - 0.5e1 * m3 * ((m2 - m3) * (m2 - 0.6e1 / 0.5e1) * (y2(t, x) ^ 2) + 0.2e1 / 0.5e1 * (m2 - m3) * ((z - (8 * H1) + (5 * H2)) * m2 - 0.2e1 / 0.3e1 * z + (8 * H1) - (6 * H2)) * y2(t, x) + ((-(2 * H1 ^ 2) + (0.4e1 / 0.15e2 * z + 0.16e2 / 0.5e1 * H2) * H1 - (H2 ^ 2) - 0.2e1 / 0.5e1 * z * H2) * m2 - 0.4e1 / 0.15e2 * (-0.15e2 / 0.2e1 * H1 + z + 0.9e1 / 0.2e1 * H2) * (H1 - H2)) * m3 + 0.2e1 / 0.5e1 * (H2 - 1) * m2 * ((z - (8 * H1) + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * m2 - 0.2e1 / 0.3e1 * z + (8 * H1) - (3 * H2) - 0.3e1)) * (y1(t, x) ^ 3) + 0.2e1 * m3 * (((m2 - 2) * (m2 - m3) * y2(t, x) ^ 3) + 0.3e1 / 0.2e1 * (m2 - m3) * ((z - (5 * H1) + (2 * H2)) * m2 - 0.2e1 / 0.3e1 * z + (6 * H1) - (4 * H2)) * (y2(t, x) ^ 2) - 0.3e1 * (m2 - m3) * (H1 - H2) * ((z - (4 * H1) + H2) * m2 - 0.2e1 / 0.3e1 * z + (4 * H1) - (2 * H2)) * y2(t, x) + (((5 * H1 ^ 3) + (-z - (12 * H2)) * (H1 ^ 2) + 0.3e1 * H2 * (0.5e1 / 0.2e1 * H2 + z) * H1 - (H2 ^ 3) - 0.3e1 / 0.2e1 * z * (H2 ^ 2)) * m2 + ((H1 - H2) ^ 2) * (z - (5 * H1) + (2 * H2))) * m3 - 0.3e1 * ((-(4 * H1 ^ 2) + (z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * H1 - (H2 ^ 2) / 0.3e1 + (-z / 0.2e1 - 0.1e1 / 0.3e1) * H2 - z / 0.2e1 - 0.1e1 / 0.3e1) * m2 + (4 * H1 ^ 2) + (-0.2e1 / 0.3e1 * z - (3 * H2) - 0.3e1) * H1 + 0.2e1 / 0.3e1 * (H2 ^ 2) + (z / 0.3e1 + 0.2e1 / 0.3e1) * H2 + z / 0.3e1 + 0.2e1 / 0.3e1) * (H2 - 1) * m2) * (y1(t, x) ^ 2) + (-((m2 - m3) ^ 2 * y2(t, x) ^ 4) - 0.4e1 / 0.3e1 * (m2 - m3) * (((z - (3 * H1)) * m2 - z + (6 * H1) - (3 * H2)) * m3 + (3 * m2 * (H2 - 1))) * (y2(t, x) ^ 3) + 0.6e1 * (m2 - m3) * (((-0.5e1 / 0.2e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.2e1 / 0.3e1 * z * H2) * m2 - 0.2e1 / 0.3e1 * (H1 - H2) * (-0.9e1 / 0.2e1 * H1 + z + 0.3e1 / 0.2e1 * H2)) * m3 - (m2 * (H2 - 1) ^ 2)) * (y2(t, x) ^ 2) - 0.6e1 * (m2 - m3) * (((-0.8e1 / 0.3e1 * (H1 ^ 3) + (z + (5 * H2)) * (H1 ^ 2) - 0.2e1 * H2 * (z + H2) * H1 + 0.2e1 / 0.3e1 * z * (H2 ^ 2)) * m2 - 0.2e1 / 0.3e1 * ((H1 - H2) ^ 2) * (z - (4 * H1) + H2)) * m3 + 0.2e1 / 0.3e1 * m2 * ((H2 - 1) ^ 3)) * y2(t, x) - 0.4e1 / 0.3e1 * (H1 - H2) * ((-0.15e2 / 0.4e1 * (H1 ^ 3) + (z + 0.33e2 / 0.4e1 * H2) * (H1 ^ 2) + (-0.7e1 / 0.2e1 * z * H2 - (3 * H2 ^ 2)) * H1 + z * (H2 ^ 2)) * m2 - ((H1 - H2) ^ 2) * (z - 0.15e2 / 0.4e1 * H1 + 0.3e1 / 0.4e1 * H2)) * (m3 ^ 2) - 0.6e1 * ((-0.8e1 / 0.3e1 * (H1 ^ 3) + (z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-0.2e1 / 0.3e1 * (H2 ^ 2) + (-z - 0.2e1 / 0.3e1) * H2 - z - 0.2e1 / 0.3e1) * H1 + 0.2e1 / 0.9e1 * z * (H2 ^ 2 + H2 + 1)) * m2 + 0.8e1 / 0.3e1 * (H1 ^ 3) + (-0.2e1 / 0.3e1 * z - (3 * H2) - 0.3e1) * (H1 ^ 2) + (0.4e1 / 0.3e1 * (H2 ^ 2) + (0.4e1 / 0.3e1 + 0.2e1 / 0.3e1 * z) * H2 + 0.4e1 / 0.3e1 + 0.2e1 / 0.3e1 * z) * H1 - (H2 ^ 3) / 0.3e1 + (-0.2e1 / 0.9e1 * z + 0.1e1 / 0.3e1) * (H2 ^ 2) + (-0.2e1 / 0.3e1 - 0.2e1 / 0.9e1 * z) * H2 - 0.2e1 / 0.9e1 * z) * (H2 - 1) * m2 * m3 - (m2 ^ 2 * (H2 - 1) ^ 4)) * y1(t, x) + ((m2 - m3) ^ 2) * (z - (3 * H1)) * (y2(t, x) ^ 4) / 0.3e1 - 0.4e1 / 0.3e1 * (m2 - m3) * ((H1 * (z - 0.3e1 / 0.2e1 * H1) * m2 - (H1 - H2) * (z - (3 * H1))) * m3 - m2 * (H2 - 1) * (z - (3 * H1))) * (y2(t, x) ^ 3) + 0.3e1 * (m2 - m3) * (((-0.5e1 / 0.3e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.4e1 / 0.3e1 * z * H2) * H1 * m2 - 0.2e1 / 0.3e1 * ((H1 - H2) ^ 2) * (z - (3 * H1))) * m3 + 0.2e1 / 0.3e1 * m2 * ((H2 - 1) ^ 2) * (z - (3 * H1))) * (y2(t, x) ^ 2) - 0.2e1 * (m2 - m3) * ((H1 - H2) * ((-(2 * H1 ^ 2) + (z + (3 * H2)) * H1 - 0.2e1 * z * H2) * H1 * m2 - 0.2e1 / 0.3e1 * ((H1 - H2) ^ 2) * (z - (3 * H1))) * m3 - 0.2e1 / 0.3e1 * m2 * ((H2 - 1) ^ 3) * (z - (3 * H1))) * y2(t, x) - ((H1 - H2) ^ 2) * ((-(3 * H1 ^ 2) + (z + (6 * H2)) * H1 - 0.4e1 * z * H2) * H1 * m2 - ((H1 - H2) ^ 2) * (z - (3 * H1))) * (m3 ^ 2) / 0.3e1 - 0.2e1 * ((-(2 * H1 ^ 3) + (z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-(H2 ^ 2) + (-0.3e1 / 0.2e1 * z - 0.1e1) * H2 - 0.3e1 / 0.2e1 * z - 0.1e1) * H1 + 0.2e1 / 0.3e1 * z * (H2 ^ 2 + H2 + 1)) * H1 * m2 - 0.2e1 / 0.3e1 * ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1) * (H1 - H2) * (z - (3 * H1))) * (H2 - 1) * m2 * m3 + (m2 ^ 2) * ((H2 - 1) ^ 4) * (z - (3 * H1)) / 0.3e1) * diff(diff(diff(diff(y1(t, x), x), x), x), x) / 0.12e2 - ((m3 * (m2 - 1) * y1(t, x) ^ 3) - m3 * (m2 - 1) * (y2(t, x) + z - (6 * H1) + H2 + 0.2e1) * (y1(t, x) ^ 2) / 0.2e1 + m3 * (m2 - 1) * (z - (3 * H1)) * (y2(t, x) - 3 * H1 + H2 + 2) * y1(t, x) / 0.3e1 + (-m2 / 0.2e1 + m3 / 0.2e1) * (y2(t, x) ^ 3) + (m2 - m3) * (z - (9 * H2) + 0.6e1) * (y2(t, x) ^ 2) / 0.6e1 + ((H1 * (z - 0.3e1 / 0.2e1 * H1) * m2 / 0.3e1 + (H1 ^ 2) / 0.2e1 - z * H1 / 0.3e1 + 0.3e1 / 0.2e1 * (H2 ^ 2) + (-0.2e1 - z / 0.3e1) * H2 + 0.2e1 / 0.3e1 * z) * m3 + (-0.9e1 / 0.2e1 * H2 + z + 0.3e1 / 0.2e1) * (H2 - 1) * m2 / 0.3e1) * y2(t, x) + (-(-(2 * H1 ^ 2) + (z + H2 + 0.2e1) * H1 - 0.2e1 / 0.3e1 * z * (H2 + 2)) * H1 * m2 / 0.2e1 + (-(2 * H1 ^ 2) + (z - H2 + 0.2e1) * H1 - (H2 ^ 2) + (z / 0.3e1 + 0.2e1) * H2 - 0.4e1 / 0.3e1 * z) * (H1 - H2) / 0.2e1) * m3 + m2 * ((H2 - 1) ^ 2) * (z - (3 * H2)) / 0.6e1) * ((m3 ^ 2 * (m2 - 1) ^ 2 * y1(t, x) ^ 4) - (4 * (m2 - 1) * m3 * ((m2 - m3) * y2(t, x) + (-H1 * m2 + H1 - H2) * m3 + m2 * (H2 - 1)) * y1(t, x) ^ 3) + 0.6e1 * (m2 - 1) * m3 * (((m2 - m3) * y2(t, x) ^ 2) - (2 * (m2 - m3) * (H1 - H2) * y2(t, x)) + ((H1 ^ 2 * m2 - (H1 - H2) ^ 2) * m3) - 0.2e1 * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (H2 - 1) * m2) * (y1(t, x) ^ 2) - 0.4e1 * (m2 - 1) * (((m2 - m3) * y2(t, x) ^ 3) - (3 * (m2 - m3) * (H1 - H2) * y2(t, x) ^ 2) + (3 * (H1 - H2) ^ 2 * (m2 - m3) * y2(t, x)) + ((-H1 ^ 3 * m2 + (H1 - H2) ^ 3) * m3) + 0.3e1 * ((H1 ^ 2) + ((-H2 - 1) * H1) + (H2 ^ 2) / 0.3e1 + H2 / 0.3e1 + 0.1e1 / 0.3e1) * (H2 - 1) * m2) * m3 * y1(t, x) + ((m2 - m3) ^ 2 * y2(t, x) ^ 4) - (4 * (m2 - m3) * ((H1 * m2 - H1 + H2) * m3 - m2 * (H2 - 1)) * y2(t, x) ^ 3) + (6 * (m2 - m3) * ((H1 * (H1 - 2 * H2) * m2 - (H1 - H2) ^ 2) * m3 + m2 * (H2 - 1) ^ 2) * y2(t, x) ^ 2) - (4 * (m2 - m3) * ((H1 * (H1 ^ 2 - 3 * H2 * H1 + 3 * H2 ^ 2) * m2 - (H1 - H2) ^ 3) * m3 - m2 * (H2 - 1) ^ 3) * y2(t, x)) + ((m2 ^ 2 * H1 ^ 4 + (-2 * H1 ^ 4 + 4 * H2 * H1 ^ 3 - 6 * H1 ^ 2 * H2 ^ 2 + 4 * H2 ^ 3 * H1) * m2 + (H1 - H2) ^ 4) * m3 ^ 2) - 0.4e1 * (((H1 ^ 2) + (-0.3e1 / 0.2e1 * H2 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) + H2 + 0.1e1) * H1 * m2 - ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1) * (H1 - H2)) * (H2 - 1) * m2 * m3 + (m2 ^ 2 * (H2 - 1) ^ 4)) * s2 * ((H2 + y2(t, x) - 1) ^ 2) * m2 * diff(diff(diff(diff(y2(t, x), x), x), x), x) / 0.6e1 - s2 * (H2 + y2(t, x) - 1) * (-(m2 - 1) * m3 * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - m3 * (m2 - 1) * (z - (3 * H1)) * (y1(t, x) ^ 2) + (((-3 * m2 + 3 * m3) * y2(t, x) ^ 2) + 0.2e1 * (m2 - m3) * (z - (3 * H2)) * y2(t, x) + (((3 * H1 ^ 2) - 0.2e1 * z * H1) * m2 + 0.2e1 * (H1 - H2) * (-0.3e1 / 0.2e1 * H1 + z - 0.3e1 / 0.2e1 * H2)) * m3 + 0.2e1 * (H2 - 1) * (-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * m2) * y1(t, x) + ((2 * m2 - 2 * m3) * y2(t, x) ^ 3) - (m2 - m3) * (z + (3 * H1) - (6 * H2)) * (y2(t, x) ^ 2) + 0.2e1 * (m2 - m3) * (H1 - H2) * (z - (3 * H2)) * y2(t, x) + (-(H1 ^ 2) * (z - H1) * m2 + ((H1 - H2) ^ 2) * (z - H1 - (2 * H2))) * m3 + 0.2e1 * ((-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) + (-z / 0.2e1 + 0.1e1) * H2 - z / 0.2e1 + 0.1e1) * (H2 - 1) * m2) * (H2 + y2(t, x) - 1) * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - (m3 * (m2 - 1) * (y2(t, x) - 3 * H1 + H2 + 2) * y1(t, x) ^ 2) + (((-m2 + m3) * y2(t, x) ^ 2) + (((-2 * H1 * m2 + 2 * H1 + 2 * H2 - 4) * m3 - 2 * m2 * (H2 - 1)) * y2(t, x)) + (((3 * H1 ^ 2 + (-2 * H2 - 4) * H1) * m2) - 0.3e1 * (H1 - H2) * (H1 + H2 / 0.3e1 - 0.4e1 / 0.3e1)) * m3 - (m2 * (H2 - 1) ^ 2)) * y1(t, x) + ((m2 - m3) * y2(t, x) ^ 3) - ((m2 - m3) * (H1 - 3 * H2 + 2) * y2(t, x) ^ 2) + (((-H1 ^ 2 * m2 + (H1 + 3 * H2 - 4) * (H1 - H2)) * m3) - 0.2e1 * (-0.3e1 / 0.2e1 * H2 + H1 + 0.1e1 / 0.2e1) * (H2 - 1) * m2) * y2(t, x) + ((H1 ^ 2 * (H1 - H2 - 2) * m2 - (H1 + H2 - 2) * (H1 - H2) ^ 2) * m3) - (m2 * (H2 - 1) ^ 2 * (H1 - H2))) * diff(y1(t, x), x) / 0.2e1 + diff(y2(t, x), x) * ((m3 ^ 3 * (m2 - 1) ^ 3 * y1(t, x) ^ 7) - 0.3e1 / 0.4e1 * ((m2 - 1) ^ 2) * (m3 ^ 2) * (((m2 - 0.11e2 / 0.3e1) * m3 + 0.8e1 / 0.3e1 * m2) * y2(t, x) + ((0.2e1 / 0.3e1 * z - 0.28e2 / 0.3e1 * H1 + H2 + 0.1e1) * m2 - 0.2e1 / 0.3e1 * z + 0.28e2 / 0.3e1 * H1 - 0.11e2 / 0.3e1 * H2 - 0.11e2 / 0.3e1) * m3 + 0.8e1 / 0.3e1 * m2 * (H2 - 1)) * (y1(t, x) ^ 6) + 0.2e1 * ((m2 - 1) ^ 2) * (m3 ^ 2) * (((m2 - m3) * y2(t, x) ^ 2) + (((z / 0.4e1 - 0.9e1 / 0.4e1 * H1) * m2 - 0.4e1 + 0.33e2 / 0.4e1 * H1 - (2 * H2) - 0.3e1 / 0.4e1 * z) * m3 + m2 * (-(12 * H1) + z + (4 * H2) + 0.5e1) / 0.2e1) * y2(t, x) + ((0.21e2 / 0.2e1 * (H1 ^ 2) + (-0.9e1 / 0.4e1 - 0.3e1 / 0.2e1 * z - 0.9e1 / 0.4e1 * H2) * H1 + z * (H2 + 1) / 0.4e1) * m2 - 0.21e2 / 0.2e1 * (H1 ^ 2) + (0.33e2 / 0.4e1 * H2 + 0.33e2 / 0.4e1 + 0.3e1 / 0.2e1 * z) * H1 - (H2 ^ 2) + (-0.4e1 - 0.3e1 / 0.4e1 * z) * H2 - 0.1e1 - 0.3e1 / 0.4e1 * z) * m3 + m2 * (H2 - 1) * ((2 * H2) + z - (12 * H1) + 0.7e1) / 0.2e1) * (y1(t, x) ^ 5) - 0.3e1 / 0.4e1 * ((m2 - 1) ^ 2) * (((m2 - m3) * y2(t, x) ^ 3) + 0.4e1 / 0.3e1 * (m2 - m3) * (z - (10 * H1) + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (y2(t, x) ^ 2) + ((-0.10e2 / 0.3e1 * (z - 0.9e1 / 0.2e1 * H1) * H1 * m2 - (55 * H1 ^ 2) + (0.160e3 / 0.3e1 + 0.80e2 / 0.3e1 * H2 + 0.10e2 * z) * H1 - (3 * H2 ^ 2) + (-0.38e2 / 0.3e1 - 0.8e1 / 0.3e1 * z) * H2 - 0.28e2 / 0.3e1 - 0.22e2 / 0.3e1 * z) * m3 - 0.20e2 / 0.3e1 * (-(6 * H1 ^ 2) + (z + (4 * H2) + 0.5e1) * H1 - 0.9e1 / 0.20e2 * (H2 ^ 2) + (-0.2e1 / 0.5e1 * z - 0.19e2 / 0.10e2) * H2 - 0.3e1 / 0.5e1 * z - 0.13e2 / 0.20e2) * m2) * y2(t, x) + (0.10e2 * (-0.14e2 / 0.3e1 * (H1 ^ 2) + (z + 0.3e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 - z * (H2 + 1) / 0.3e1) * H1 * m2 + 0.140e3 / 0.3e1 * (H1 ^ 3) + (-0.55e2 - 0.10e2 * z - (55 * H2)) * (H1 ^ 2) + (0.40e2 / 0.3e1 * (H2 ^ 2) + (0.160e3 / 0.3e1 + 0.10e2 * z) * H2 + 0.40e2 / 0.3e1 + 0.10e2 * z) * H1 - (H2 ^ 3) + (-0.19e2 / 0.3e1 - 0.4e1 / 0.3e1 * z) * (H2 ^ 2) + (-0.28e2 / 0.3e1 - 0.22e2 / 0.3e1 * z) * H2 - 0.4e1 / 0.3e1 * z) * m3 - 0.20e2 / 0.3e1 * (-(6 * H1 ^ 2) + ((2 * H2) + z + 0.7e1) * H1 - 0.3e1 / 0.20e2 * (H2 ^ 2) + (-z / 0.5e1 - 0.11e2 / 0.10e2) * H2 - 0.4e1 / 0.5e1 * z - 0.7e1 / 0.4e1) * (H2 - 1) * m2) * (m3 ^ 2) * (y1(t, x) ^ 4) + 0.3e1 * (m2 - 1) * m3 * (((m2 - m3) ^ 2 * y2(t, x) ^ 4) - (m2 - m3) * (((3 * H1 * m2) - (3 * H1) + (12 * H2) - z - 0.6e1) * m3 + m2 * (z - (12 * H2) + 0.9e1)) * (y2(t, x) ^ 3) / 0.3e1 - 0.4e1 / 0.3e1 * (m2 - m3) * (((-(5 * H1 ^ 2) + (z + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * H1 - z - 0.3e1 / 0.2e1) * m2 + (5 * H1 ^ 2) + (-z - 0.9e1 / 0.4e1 * H2 - 0.19e2 / 0.4e1) * H1 + 0.9e1 / 0.2e1 * (H2 ^ 2) + (-0.3e1 / 0.4e1 * z - 0.9e1 / 0.2e1) * H2 + 0.7e1 / 0.4e1 * z + 0.2e1) * m3 + 0.3e1 / 0.4e1 * m2 * (H2 - 1) * (-(6 * H2) + z + 0.3e1)) * (y2(t, x) ^ 2) + ((0.5e1 / 0.3e1 * (H1 ^ 2) * (z - (3 * H1)) * (m2 ^ 2) + (0.70e2 / 0.3e1 * (H1 ^ 3) + (-0.20e2 / 0.3e1 * z - 0.40e2 / 0.3e1 * H2 - 0.80e2 / 0.3e1) * (H1 ^ 2) + ((3 * H2 ^ 2) + (0.38e2 / 0.3e1 + 0.8e1 / 0.3e1 * z) * H2 + 0.22e2 / 0.3e1 * z + 0.28e2 / 0.3e1) * H1 + (-0.4e1 - 0.8e1 / 0.3e1 * z) * H2 - 0.4e1 / 0.3e1 * z) * m2 - 0.55e2 / 0.3e1 * (H1 ^ 3) + (0.80e2 / 0.3e1 + 0.5e1 * z + 0.40e2 / 0.3e1 * H2) * (H1 ^ 2) + (-(3 * H2 ^ 2) + (-0.38e2 / 0.3e1 - 0.8e1 / 0.3e1 * z) * H2 - 0.28e2 / 0.3e1 - 0.22e2 / 0.3e1 * z) * H1 + (4 * H2 ^ 3) + (-z - 0.6e1) * (H2 ^ 2) + (0.16e2 / 0.3e1 + 0.14e2 / 0.3e1 * z) * H2 + 0.4e1 / 0.3e1 * z) * (m3 ^ 2) + 0.10e2 / 0.3e1 * ((-(4 * H1 ^ 3) + (z + (4 * H2) + 0.5e1) * (H1 ^ 2) + (-0.9e1 / 0.10e2 * (H2 ^ 2) + (-0.19e2 / 0.5e1 - 0.4e1 / 0.5e1 * z) * H2 - 0.6e1 / 0.5e1 * z - 0.13e2 / 0.10e2) * H1 + (0.6e1 / 0.5e1 + 0.4e1 / 0.5e1 * z) * H2 - 0.3e1 / 0.10e2 + z / 0.10e2) * m2 + (4 * H1 ^ 3) + (-0.5e1 - z - (4 * H2)) * (H1 ^ 2) + (0.9e1 / 0.10e2 * (H2 ^ 2) + (0.4e1 / 0.5e1 * z + 0.19e2 / 0.5e1) * H2 + 0.13e2 / 0.10e2 + 0.6e1 / 0.5e1 * z) * H1 - 0.12e2 / 0.5e1 * (H2 ^ 3) + (0.3e1 / 0.5e1 * z + 0.9e1 / 0.2e1) * (H2 ^ 2) + (-0.17e2 / 0.5e1 - 0.2e1 * z) * H2 + 0.2e1 / 0.5e1 * z + 0.3e1 / 0.10e2) * m2 * m3 - (m2 ^ 2) * ((H2 - 1) ^ 2) * (z - (4 * H2) + 0.1e1)) * y2(t, x) + (-0.10e2 / 0.3e1 * (-0.7e1 / 0.2e1 * (H1 ^ 2) + (z + 0.3e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 - z * (H2 + 1) / 0.2e1) * (H1 ^ 2) * (m2 ^ 2) + (-0.70e2 / 0.3e1 * (H1 ^ 4) + (0.20e2 / 0.3e1 * z + 0.70e2 / 0.3e1 * H2 + 0.70e2 / 0.3e1) * (H1 ^ 3) + (-0.20e2 / 0.3e1 * (H2 ^ 2) + (-0.20e2 / 0.3e1 * z - 0.80e2 / 0.3e1) * H2 - 0.20e2 / 0.3e1 * z - 0.20e2 / 0.3e1) * (H1 ^ 2) + ((H2 ^ 3) + (0.4e1 / 0.3e1 * z + 0.19e2 / 0.3e1) * (H2 ^ 2) + (0.22e2 / 0.3e1 * z + 0.28e2 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z) * H1 - 0.4e1 / 0.3e1 * H2 * ((z + 0.3e1 / 0.2e1) * H2 + z)) * m2 - 0.10e2 / 0.3e1 * (H1 - H2) * (-0.7e1 / 0.2e1 * (H1 ^ 3) + (z + (2 * H2) + 0.11e2 / 0.2e1) * (H1 ^ 2) + ((-z / 0.2e1 - 0.5e1 / 0.2e1) * H2 - 0.3e1 / 0.2e1 * z - 0.2e1) * H1 + 0.3e1 / 0.10e2 * (H2 ^ 3) + (-z / 0.10e2 - 0.3e1 / 0.5e1) * (H2 ^ 2) + (0.7e1 / 0.10e2 * z + 0.4e1 / 0.5e1) * H2 + 0.2e1 / 0.5e1 * z)) * (m3 ^ 2) + 0.10e2 / 0.3e1 * (H2 - 1) * ((-(4 * H1 ^ 3) + ((2 * H2) + z + 0.7e1) * (H1 ^ 2) + (-0.3e1 / 0.10e2 * (H2 ^ 2) + (-0.11e2 / 0.5e1 - 0.2e1 / 0.5e1 * z) * H2 - 0.8e1 / 0.5e1 * z - 0.7e1 / 0.2e1) * H1 + (0.3e1 / 0.5e1 + 0.2e1 / 0.5e1 * z) * H2 + 0.3e1 / 0.10e2 + z / 0.2e1) * m2 + (4 * H1 ^ 3) + (-0.7e1 - z - (2 * H2)) * (H1 ^ 2) + (0.3e1 / 0.10e2 * (H2 ^ 2) + (0.2e1 / 0.5e1 * z + 0.11e2 / 0.5e1) * H2 + 0.7e1 / 0.2e1 + 0.8e1 / 0.5e1 * z) * H1 - 0.3e1 / 0.5e1 * (H2 ^ 3) + (z / 0.5e1 + 0.9e1 / 0.10e2) * (H2 ^ 2) + (-0.4e1 / 0.5e1 - 0.4e1 / 0.5e1 * z) * H2 - 0.2e1 / 0.5e1 * z - 0.1e1 / 0.2e1) * m2 * m3 - (m2 ^ 2) * ((H2 - 1) ^ 3) * (z - (3 * H2)) / 0.3e1) * (y1(t, x) ^ 3) - 0.17e2 / 0.4e1 * (m2 - 1) * (((m2 - m3) ^ 2 * y2(t, x) ^ 5) - 0.6e1 / 0.17e2 * ((m2 - m3) ^ 2) * (z + (6 * H1) - 0.85e2 / 0.6e1 * H2 + 0.31e2 / 0.6e1) * (y2(t, x) ^ 4) + 0.12e2 / 0.17e2 * (m2 - m3) * ((0.3e1 / 0.2e1 * (H1 ^ 2) * m2 - 0.3e1 / 0.2e1 * (H1 ^ 2) + (-z + (12 * H2) - 0.6e1) * H1 - 0.85e2 / 0.6e1 * (H2 ^ 2) + (0.2e1 * z + 0.31e2 / 0.3e1) * H2 - z - 0.2e1 / 0.3e1) * m3 + ((z - (12 * H2) + 0.9e1) * H1 + 0.85e2 / 0.6e1 * (H2 ^ 2) + (-0.2e1 * z - 0.31e2 / 0.3e1) * H2 + z - 0.5e1 / 0.6e1) * m2) * (y2(t, x) ^ 3) + 0.24e2 / 0.17e2 * (((-0.10e2 / 0.3e1 * (H1 ^ 3) + (z + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (H1 ^ 2) + (-0.2e1 * z - 0.3e1) * H1 + 0.2e1 / 0.3e1 * z) * m2 + 0.10e2 / 0.3e1 * (H1 ^ 3) + (-z - 0.9e1 / 0.4e1 * H2 - 0.19e2 / 0.4e1) * (H1 ^ 2) + ((9 * H2 ^ 2) + (-0.9e1 - 0.3e1 / 0.2e1 * z) * H2 + 0.4e1 + 0.7e1 / 0.2e1 * z) * H1 - 0.85e2 / 0.12e2 * (H2 ^ 3) + (0.31e2 / 0.4e1 + 0.3e1 / 0.2e1 * z) * (H2 ^ 2) + (-0.3e1 / 0.2e1 * z - 0.1e1) * H2 - z) * m3 + 0.3e1 / 0.2e1 * ((-(6 * H2) + z + 0.3e1) * H1 - 0.23e2 / 0.18e2 + 0.85e2 / 0.18e2 * (H2 ^ 2) + (-0.4e1 / 0.9e1 - z) * H2) * (H2 - 1) * m2) * (m2 - m3) * (y2(t, x) ^ 2) + ((-0.20e2 / 0.17e2 * (-0.9e1 / 0.4e1 * H1 + z) * (H1 ^ 3) * (m2 ^ 2) + (-0.210e3 / 0.17e2 * (H1 ^ 4) + (0.80e2 / 0.17e2 * z + 0.160e3 / 0.17e2 * H2 + 0.320e3 / 0.17e2) * (H1 ^ 3) + (-0.54e2 / 0.17e2 * (H2 ^ 2) + (-0.228e3 / 0.17e2 - 0.48e2 / 0.17e2 * z) * H2 - 0.132e3 / 0.17e2 * z - 0.168e3 / 0.17e2) * (H1 ^ 2) + ((0.144e3 / 0.17e2 + 0.96e2 / 0.17e2 * z) * H2 + 0.48e2 / 0.17e2 * z) * H1 - 0.32e2 / 0.17e2 * z * H2) * m2 - 0.60e2 / 0.17e2 * (H1 - H2) * (-0.11e2 / 0.4e1 * (H1 ^ 3) + (z - H2 / 0.12e2 + 0.16e2 / 0.3e1) * (H1 ^ 2) + (-0.59e2 / 0.60e2 * (H2 ^ 2) + (z / 0.5e1 + 0.23e2 / 0.15e2) * H2 - 0.11e2 / 0.5e1 * z - 0.14e2 / 0.5e1) * H1 + 0.17e2 / 0.12e2 * (H2 ^ 3) + (-0.2e1 / 0.5e1 * z - 0.31e2 / 0.15e2) * (H2 ^ 2) + (0.3e1 / 0.5e1 * z + 0.2e1 / 0.5e1) * H2 + 0.4e1 / 0.5e1 * z)) * (m3 ^ 2) - 0.40e2 / 0.17e2 * ((-(3 * H1 ^ 4) + (z + (4 * H2) + 0.5e1) * (H1 ^ 3) + (-0.27e2 / 0.20e2 * (H2 ^ 2) + (-0.57e2 / 0.10e2 - 0.6e1 / 0.5e1 * z) * H2 - 0.9e1 / 0.5e1 * z - 0.39e2 / 0.20e2) * (H1 ^ 2) + ((0.18e2 / 0.5e1 + 0.12e2 / 0.5e1 * z) * H2 + 0.3e1 / 0.10e2 * z - 0.9e1 / 0.10e2) * H1 - 0.4e1 / 0.5e1 * z * (H2 - 0.1e1 / 0.4e1)) * m2 + (3 * H1 ^ 4) + (-0.5e1 - z - (4 * H2)) * (H1 ^ 3) + (0.27e2 / 0.20e2 * (H2 ^ 2) + (0.6e1 / 0.5e1 * z + 0.57e2 / 0.10e2) * H2 + 0.39e2 / 0.20e2 + 0.9e1 / 0.5e1 * z) * (H1 ^ 2) + (-0.36e2 / 0.5e1 * (H2 ^ 3) + (0.9e1 / 0.5e1 * z + 0.27e2 / 0.2e1) * (H2 ^ 2) + (-0.6e1 * z - 0.51e2 / 0.5e1) * H2 + 0.9e1 / 0.10e2 + 0.6e1 / 0.5e1 * z) * H1 + 0.17e2 / 0.4e1 * (H2 ^ 4) + (-0.31e2 / 0.5e1 - 0.6e1 / 0.5e1 * z) * (H2 ^ 3) + (0.9e1 / 0.5e1 * z - 0.3e1 / 0.20e2) * (H2 ^ 2) + (0.23e2 / 0.10e2 + 0.6e1 / 0.5e1 * z) * H2 - 0.4e1 / 0.5e1 * z - 0.1e1 / 0.5e1) * m2 * m3 + 0.36e2 / 0.17e2 * ((H2 - 1) ^ 2) * ((z - (4 * H2) + 0.1e1) * H1 + 0.85e2 / 0.36e2 * (H2 ^ 2) + (-0.2e1 / 0.3e1 * z + 0.23e2 / 0.18e2) * H2 - z / 0.3e1 - 0.23e2 / 0.36e2) * (m2 ^ 2)) * y2(t, x) + (0.30e2 / 0.17e2 * (-0.14e2 / 0.5e1 * (H1 ^ 2) + (z + 0.3e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 - 0.2e1 / 0.3e1 * z * (H2 + 1)) * (H1 ^ 3) * (m2 ^ 2) + (0.168e3 / 0.17e2 * (H1 ^ 5) + (-0.60e2 / 0.17e2 * z - 0.210e3 / 0.17e2 * H2 - 0.210e3 / 0.17e2) * (H1 ^ 4) + (0.80e2 / 0.17e2 * (H2 ^ 2) + (0.320e3 / 0.17e2 + 0.80e2 / 0.17e2 * z) * H2 + 0.80e2 / 0.17e2 * z + 0.80e2 / 0.17e2) * (H1 ^ 3) + (-0.18e2 / 0.17e2 * (H2 ^ 3) + (-0.114e3 / 0.17e2 - 0.24e2 / 0.17e2 * z) * (H2 ^ 2) + (-0.168e3 / 0.17e2 - 0.132e3 / 0.17e2 * z) * H2 - 0.24e2 / 0.17e2 * z) * (H1 ^ 2) + 0.48e2 / 0.17e2 * H2 * ((z + 0.3e1 / 0.2e1) * H2 + z) * H1 - 0.16e2 / 0.17e2 * z * (H2 ^ 2)) * m2 + 0.30e2 / 0.17e2 * ((H1 - H2) ^ 2) * (-0.14e2 / 0.5e1 * (H1 ^ 3) + (z - H2 / 0.10e2 + 0.11e2 / 0.2e1) * (H1 ^ 2) + (-(H2 ^ 2) / 0.15e2 - 0.2e1 * z + H2 / 0.3e1 - 0.8e1 / 0.3e1) * H1 + 0.17e2 / 0.30e2 * (H2 ^ 3) + (-z / 0.5e1 - 0.31e2 / 0.30e2) * (H2 ^ 2) + (0.2e1 / 0.5e1 * z + 0.4e1 / 0.15e2) * H2 + 0.4e1 / 0.5e1 * z)) * (m3 ^ 2) - 0.40e2 / 0.17e2 * ((-(3 * H1 ^ 4) + ((2 * H2) + z + 0.7e1) * (H1 ^ 3) + (-0.9e1 / 0.20e2 * (H2 ^ 2) + (-0.33e2 / 0.10e2 - 0.3e1 / 0.5e1 * z) * H2 - 0.12e2 / 0.5e1 * z - 0.21e2 / 0.4e1) * (H1 ^ 2) + ((0.9e1 / 0.5e1 + 0.6e1 / 0.5e1 * z) * H2 + 0.3e1 / 0.2e1 * z + 0.9e1 / 0.10e2) * H1 - 0.2e1 / 0.5e1 * z * (H2 + 0.1e1 / 0.2e1)) * m2 + (3 * H1 ^ 4) + (-0.7e1 - z - (2 * H2)) * (H1 ^ 3) + (0.9e1 / 0.20e2 * (H2 ^ 2) + (0.3e1 / 0.5e1 * z + 0.33e2 / 0.10e2) * H2 + 0.21e2 / 0.4e1 + 0.12e2 / 0.5e1 * z) * (H1 ^ 2) + (-0.9e1 / 0.5e1 * (H2 ^ 3) + (0.3e1 / 0.5e1 * z + 0.27e2 / 0.10e2) * (H2 ^ 2) + (-0.12e2 / 0.5e1 * z - 0.12e2 / 0.5e1) * H2 - 0.3e1 / 0.2e1 - 0.6e1 / 0.5e1 * z) * H1 + 0.17e2 / 0.20e2 * (H2 ^ 4) + (-0.7e1 / 0.10e2 - 0.3e1 / 0.10e2 * z) * (H2 ^ 3) + (0.3e1 / 0.10e2 * z - 0.3e1 / 0.4e1) * (H2 ^ 2) + (0.2e1 / 0.5e1 + 0.9e1 / 0.10e2 * z) * H2 + z / 0.10e2 + 0.1e1 / 0.5e1) * (H2 - 1) * m2 * m3 + 0.12e2 / 0.17e2 * ((z - (3 * H2)) * H1 + 0.17e2 / 0.12e2 * (H2 ^ 2) + (-z / 0.2e1 + 0.5e1 / 0.3e1) * H2 - z / 0.2e1 - 0.1e1 / 0.12e2) * ((H2 - 1) ^ 3) * (m2 ^ 2)) * m3 * (y1(t, x) ^ 2) + 0.2e1 * (m2 - 1) * m3 * (((m2 - m3) ^ 2 * y2(t, x) ^ 6) - ((m2 - m3) ^ 2) * (z + (17 * H1) - (24 * H2) + 0.4e1) * (y2(t, x) ^ 5) / 0.4e1 + 0.3e1 / 0.2e1 * ((m2 - m3) ^ 2) * ((3 * H1 ^ 2) + (z - 0.85e2 / 0.6e1 * H2 + 0.31e2 / 0.6e1) * H1 + (10 * H2 ^ 2) + (-0.5e1 / 0.6e1 * z - 0.10e2 / 0.3e1) * H2 - z / 0.6e1 - 0.2e1 / 0.3e1) * (y2(t, x) ^ 4) - 0.3e1 / 0.2e1 * (m2 - m3) * (((H1 ^ 3 * m2) - (H1 ^ 3) + (-z + (12 * H2) - 0.6e1) * (H1 ^ 2) + (-0.85e2 / 0.3e1 * (H2 ^ 2) + (0.62e2 / 0.3e1 + 0.4e1 * z) * H2 - 0.4e1 / 0.3e1 - 0.2e1 * z) * H1 + 0.40e2 / 0.3e1 * (H2 ^ 3) + (-0.20e2 / 0.3e1 - 0.5e1 / 0.3e1 * z) * (H2 ^ 2) + (-0.8e1 / 0.3e1 - 0.2e1 / 0.3e1 * z) * H2 + 0.4e1 / 0.3e1 * z) * m3 + ((z - (12 * H2) + 0.9e1) * (H1 ^ 2) + (0.85e2 / 0.3e1 * (H2 ^ 2) + (-0.62e2 / 0.3e1 - 0.4e1 * z) * H2 + 0.2e1 * z - 0.5e1 / 0.3e1) * H1 - 0.40e2 / 0.3e1 * (H2 ^ 3) + (0.20e2 / 0.3e1 + 0.5e1 / 0.3e1 * z) * (H2 ^ 2) + (0.8e1 / 0.3e1 + 0.2e1 / 0.3e1 * z) * H2 + 0.1e1 - 0.4e1 / 0.3e1 * z) * m2) * (y2(t, x) ^ 3) - 0.2e1 * (m2 - m3) * (((-0.5e1 / 0.2e1 * (H1 ^ 3) + (z + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (H1 ^ 2) + (-0.3e1 * z - 0.9e1 / 0.2e1) * H1 + 0.2e1 * z) * H1 * m2 - (H1 - H2) * (-0.5e1 / 0.2e1 * (H1 ^ 3) + (z - H2 / 0.4e1 + 0.19e2 / 0.4e1) * (H1 ^ 2) + (-0.55e2 / 0.4e1 * (H2 ^ 2) + (0.13e2 / 0.4e1 * z + 0.73e2 / 0.4e1) * H2 - 0.21e2 / 0.4e1 * z - 0.6e1) * H1 + 0.15e2 / 0.2e1 * (H2 ^ 3) + (-0.5e1 / 0.4e1 * z - 0.5e1) * (H2 ^ 2) + (-0.3e1 / 0.4e1 * z - 0.3e1) * H2 + 0.3e1 * z)) * m3 + 0.9e1 / 0.4e1 * ((-(6 * H2) + z + 0.3e1) * (H1 ^ 2) + (-0.23e2 / 0.9e1 + 0.85e2 / 0.9e1 * (H2 ^ 2) + (-0.2e1 * z - 0.8e1 / 0.9e1) * H2) * H1 - 0.10e2 / 0.3e1 * (H2 ^ 3) + (0.5e1 / 0.9e1 * z - 0.10e2 / 0.9e1) * (H2 ^ 2) + (0.8e1 / 0.9e1 * z + 0.2e1 / 0.9e1) * H2 - 0.4e1 / 0.9e1 * z + 0.11e2 / 0.9e1) * (H2 - 1) * m2) * (y2(t, x) ^ 2) + ((0.5e1 / 0.4e1 * (-0.9e1 / 0.5e1 * H1 + z) * (H1 ^ 4) * (m2 ^ 2) - 0.5e1 * (-0.21e2 / 0.10e2 * (H1 ^ 4) + (z + (2 * H2) + 0.4e1) * (H1 ^ 3) + (-0.9e1 / 0.10e2 * (H2 ^ 2) + (-0.19e2 / 0.5e1 - 0.4e1 / 0.5e1 * z) * H2 - 0.11e2 / 0.5e1 * z - 0.14e2 / 0.5e1) * (H1 ^ 2) + ((0.18e2 / 0.5e1 + 0.12e2 / 0.5e1 * z) * H2 + 0.6e1 / 0.5e1 * z) * H1 - 0.8e1 / 0.5e1 * z * H2) * H1 * m2 + 0.15e2 / 0.4e1 * ((H1 - H2) ^ 2) * (-0.11e2 / 0.5e1 * (H1 ^ 3) + (z - 0.26e2 / 0.15e2 * H2 + 0.16e2 / 0.3e1) * (H1 ^ 2) + (-0.37e2 / 0.15e2 * (H2 ^ 2) + (0.14e2 / 0.15e2 * z + 0.28e2 / 0.5e1) * H2 - 0.44e2 / 0.15e2 * z - 0.56e2 / 0.15e2) * H1 + 0.8e1 / 0.5e1 * (H2 ^ 3) + (-z / 0.3e1 - 0.4e1 / 0.3e1) * (H2 ^ 2) + (-0.4e1 / 0.15e2 * z - 0.16e2 / 0.15e2) * H2 + 0.8e1 / 0.5e1 * z)) * (m3 ^ 2) + 0.5e1 / 0.2e1 * ((-0.12e2 / 0.5e1 * (H1 ^ 4) + (z + (4 * H2) + 0.5e1) * (H1 ^ 3) + (-0.9e1 / 0.5e1 * (H2 ^ 2) + (-0.38e2 / 0.5e1 - 0.8e1 / 0.5e1 * z) * H2 - 0.12e2 / 0.5e1 * z - 0.13e2 / 0.5e1) * (H1 ^ 2) + ((0.36e2 / 0.5e1 + 0.24e2 / 0.5e1 * z) * H2 + 0.3e1 / 0.5e1 * z - 0.9e1 / 0.5e1) * H1 - 0.16e2 / 0.5e1 * z * (H2 - 0.1e1 / 0.4e1)) * H1 * m2 + 0.12e2 / 0.5e1 * (H1 ^ 5) + (-0.5e1 - z - (4 * H2)) * (H1 ^ 4) + (0.9e1 / 0.5e1 * (H2 ^ 2) + (0.38e2 / 0.5e1 + 0.8e1 / 0.5e1 * z) * H2 + 0.12e2 / 0.5e1 * z + 0.13e2 / 0.5e1) * (H1 ^ 3) + (-0.72e2 / 0.5e1 * (H2 ^ 3) + (0.27e2 + 0.18e2 / 0.5e1 * z) * (H2 ^ 2) + (-0.12e2 * z - 0.102e3 / 0.5e1) * H2 + 0.9e1 / 0.5e1 + 0.12e2 / 0.5e1 * z) * (H1 ^ 2) + ((17 * H2 ^ 4) + (-0.124e3 / 0.5e1 - 0.24e2 / 0.5e1 * z) * (H2 ^ 3) + (0.36e2 / 0.5e1 * z - 0.3e1 / 0.5e1) * (H2 ^ 2) + (0.24e2 / 0.5e1 * z + 0.46e2 / 0.5e1) * H2 - 0.4e1 / 0.5e1 - 0.16e2 / 0.5e1 * z) * H1 - 0.24e2 / 0.5e1 * (H2 ^ 5) + (z + 0.4e1) * (H2 ^ 4) + (0.16e2 / 0.5e1 + 0.4e1 / 0.5e1 * z) * (H2 ^ 3) + (-0.24e2 / 0.5e1 * z + 0.9e1 / 0.5e1) * (H2 ^ 2) + (-0.22e2 / 0.5e1 + 0.8e1 / 0.5e1 * z) * H2 + 0.4e1 / 0.5e1 + 0.2e1 / 0.5e1 * z) * m2 * m3 - 0.9e1 / 0.2e1 * ((z - (4 * H2) + 0.1e1) * (H1 ^ 2) + (0.85e2 / 0.18e2 * (H2 ^ 2) + (-0.4e1 / 0.3e1 * z + 0.23e2 / 0.9e1) * H2 - 0.2e1 / 0.3e1 * z - 0.23e2 / 0.18e2) * H1 - 0.4e1 / 0.3e1 * (H2 ^ 3) + (0.5e1 / 0.18e2 * z - 0.14e2 / 0.9e1) * (H2 ^ 2) + (0.7e1 / 0.9e1 * z - 0.8e1 / 0.9e1) * H2 - z / 0.18e2 + 0.7e1 / 0.9e1) * ((H2 - 1) ^ 2) * (m2 ^ 2)) * y2(t, x) + (-0.3e1 / 0.2e1 * (-0.7e1 / 0.3e1 * (H1 ^ 2) + (z + 0.3e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 - 0.5e1 / 0.6e1 * z * (H2 + 1)) * (H1 ^ 4) * (m2 ^ 2) + 0.3e1 * (-0.7e1 / 0.3e1 * (H1 ^ 4) + (z + 0.7e1 / 0.6e1 * H2 + 0.7e1 / 0.2e1) * (H1 ^ 3) + (-(H2 ^ 2) / 0.2e1 + (-0.2e1 / 0.3e1 * z - 0.19e2 / 0.6e1) * H2 - 0.5e1 / 0.3e1 * z - 0.5e1 / 0.3e1) * (H1 ^ 2) + ((0.2e1 * z + 0.3e1) * H2 + 0.2e1 / 0.3e1 * z) * H1 - 0.4e1 / 0.3e1 * z * H2) * (H1 - H2) * H1 * m2 - 0.3e1 / 0.2e1 * ((H1 - H2) ^ 3) * (-0.7e1 / 0.3e1 * (H1 ^ 3) + (z - 0.3e1 / 0.2e1 * H2 + 0.11e2 / 0.2e1) * (H1 ^ 2) + (-0.5e1 / 0.6e1 * (H2 ^ 2) + (z / 0.2e1 + 0.19e2 / 0.6e1) * H2 - 0.5e1 / 0.2e1 * z - 0.10e2 / 0.3e1) * H1 + 0.2e1 / 0.3e1 * (H2 ^ 3) + (-z / 0.6e1 - 0.2e1 / 0.3e1) * (H2 ^ 2) + (-z / 0.6e1 - 0.2e1 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z)) * (m3 ^ 2) + 0.5e1 / 0.2e1 * ((-0.12e2 / 0.5e1 * (H1 ^ 4) + ((2 * H2) + z + 0.7e1) * (H1 ^ 3) + (-0.3e1 / 0.5e1 * (H2 ^ 2) + (-0.22e2 / 0.5e1 - 0.4e1 / 0.5e1 * z) * H2 - 0.16e2 / 0.5e1 * z - 0.7e1) * (H1 ^ 2) + ((0.18e2 / 0.5e1 + 0.12e2 / 0.5e1 * z) * H2 + 0.3e1 * z + 0.9e1 / 0.5e1) * H1 - 0.8e1 / 0.5e1 * z * (H2 + 0.1e1 / 0.2e1)) * H1 * m2 - (-0.12e2 / 0.5e1 * (H1 ^ 4) + (z - 0.2e1 / 0.5e1 * H2 + 0.7e1) * (H1 ^ 3) + (-(H2 ^ 2) + (z / 0.5e1 + 0.13e2 / 0.5e1) * H2 - 0.16e2 / 0.5e1 * z - 0.7e1) * (H1 ^ 2) + (0.13e2 / 0.5e1 * (H2 ^ 3) + (-z - 0.14e2 / 0.5e1) * (H2 ^ 2) + (0.8e1 / 0.5e1 * z - 0.11e2 / 0.5e1) * H2 + 0.12e2 / 0.5e1 * z + 0.3e1) * H1 - 0.4e1 / 0.5e1 * (H2 ^ 4) + z * (H2 ^ 3) / 0.5e1 + (0.4e1 / 0.5e1 + 0.2e1 / 0.5e1 * z) * (H2 ^ 2) + (-0.6e1 / 0.5e1 * z + 0.7e1 / 0.5e1) * H2 - 0.2e1 / 0.5e1 * z - 0.4e1 / 0.5e1) * (H1 - H2)) * (H2 - 1) * m2 * m3 - 0.3e1 / 0.2e1 * ((z - (3 * H2)) * (H1 ^ 2) + (0.17e2 / 0.6e1 * (H2 ^ 2) + (-z + 0.10e2 / 0.3e1) * H2 - z - 0.1e1 / 0.6e1) * H1 - 0.2e1 / 0.3e1 * (H2 ^ 3) + (z / 0.6e1 - 0.4e1 / 0.3e1) * (H2 ^ 2) + (0.2e1 / 0.3e1 * z - 0.4e1 / 0.3e1) * H2 + z / 0.6e1 + 0.1e1 / 0.3e1) * ((H2 - 1) ^ 3) * (m2 ^ 2)) * y1(t, x) - ((m2 - m3) ^ 3 * y2(t, x) ^ 7) / 0.4e1 + 0.2e1 * ((m2 - m3) ^ 2) * (((H1 * m2) - H1 + 0.7e1 / 0.8e1 * H2 + 0.1e1 / 0.8e1) * m3 - 0.7e1 / 0.8e1 * m2 * (H2 - 1)) * (y2(t, x) ^ 6) - ((m2 - m3) ^ 2) * ((H1 * (z + 0.17e2 / 0.2e1 * H1 - (24 * H2) + 0.4e1) * m2 - 0.17e2 / 0.2e1 * (H1 ^ 2) + (-z + (24 * H2) - 0.4e1) * H1 - 0.21e2 / 0.2e1 * (H2 ^ 2) + z - (3 * H2) + 0.2e1) * m3 + 0.21e2 / 0.2e1 * m2 * ((H2 - 1) ^ 2)) * (y2(t, x) ^ 5) / 0.2e1 + 0.3e1 / 0.2e1 * ((m2 - m3) ^ 2) * ((((2 * H1 ^ 2) + (z - 0.85e2 / 0.6e1 * H2 + 0.31e2 / 0.6e1) * H1 + (20 * H2 ^ 2) + (-0.20e2 / 0.3e1 - 0.5e1 / 0.3e1 * z) * H2 - z / 0.3e1 - 0.4e1 / 0.3e1) * H1 * m2 - (2 * H1 ^ 3) + (-0.31e2 / 0.6e1 - z + 0.85e2 / 0.6e1 * H2) * (H1 ^ 2) + (-(20 * H2 ^ 2) + (0.20e2 / 0.3e1 + 0.5e1 / 0.3e1 * z) * H2 + 0.4e1 / 0.3e1 + z / 0.3e1) * H1 + 0.35e2 / 0.6e1 * (H2 ^ 3) + 0.5e1 / 0.2e1 * (H2 ^ 2) + (-0.10e2 / 0.3e1 - 0.5e1 / 0.3e1 * z) * H2 + 0.2e1 / 0.3e1 * z) * m3 - 0.35e2 / 0.6e1 * m2 * ((H2 - 1) ^ 3)) * (y2(t, x) ^ 4) - (m2 - m3) * ((0.3e1 / 0.4e1 * (m2 ^ 2) * (H1 ^ 4) - (0.3e1 / 0.2e1 * (H1 ^ 3) + (z - (12 * H2) + 0.6e1) * (H1 ^ 2) + (0.85e2 / 0.2e1 * (H2 ^ 2) + (-0.6e1 * z - 0.31e2) * H2 + 0.3e1 * z + 0.2e1) * H1 - (40 * H2 ^ 3) + (0.5e1 * z + 0.20e2) * (H2 ^ 2) + (0.2e1 * z + 0.8e1) * H2 - 0.4e1 * z) * H1 * m2 + (H1 - H2) * (0.3e1 / 0.4e1 * (H1 ^ 3) + (z - 0.45e2 / 0.4e1 * H2 + 0.6e1) * (H1 ^ 2) + (0.125e3 / 0.4e1 * (H2 ^ 2) + (-0.5e1 * z - 0.25e2) * H2 + 0.3e1 * z + 0.2e1) * H1 - 0.35e2 / 0.4e1 * (H2 ^ 3) - (5 * H2 ^ 2) + (0.5e1 * z + 0.10e2) * H2 - 0.4e1 * z)) * (m3 ^ 2) + (((z - (12 * H2) + 0.9e1) * (H1 ^ 2) + (0.85e2 / 0.2e1 * (H2 ^ 2) + (-0.6e1 * z - 0.31e2) * H2 + 0.3e1 * z - 0.5e1 / 0.2e1) * H1 - (40 * H2 ^ 3) + (0.5e1 * z + 0.20e2) * (H2 ^ 2) + (0.2e1 * z + 0.8e1) * H2 - 0.4e1 * z + 0.3e1) * H1 * m2 + (-z + (12 * H2) - 0.9e1) * (H1 ^ 3) + (-0.85e2 / 0.2e1 * (H2 ^ 2) + (0.6e1 * z + 0.31e2) * H2 + 0.5e1 / 0.2e1 - 0.3e1 * z) * (H1 ^ 2) + ((40 * H2 ^ 3) + (-0.5e1 * z - 0.20e2) * (H2 ^ 2) + (-0.2e1 * z - 0.8e1) * H2 + 0.4e1 * z - 0.3e1) * H1 - 0.8e1 - 0.35e2 / 0.2e1 * (H2 ^ 4) + (30 * H2 ^ 3) + (0.5e1 * z - 0.85e2 / 0.2e1) * (H2 ^ 2) + (0.35e2 - 0.4e1 * z) * H2) * m2 * m3 + 0.35e2 / 0.4e1 * (m2 ^ 2) * ((H2 - 1) ^ 4)) * (y2(t, x) ^ 3) - (m2 - m3) * (((-(2 * H1 ^ 3) + (z + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (H1 ^ 2) + (-0.4e1 * z - 0.6e1) * H1 + 0.4e1 * z) * (H1 ^ 2) * (m2 ^ 2) - 0.2e1 * (-(2 * H1 ^ 4) + (z + 0.9e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (H1 ^ 3) + (-(9 * H2 ^ 2) + (0.3e1 / 0.2e1 * z + 0.9e1) * H2 - 0.11e2 / 0.2e1 * z - 0.7e1) * (H1 ^ 2) + (0.85e2 / 0.4e1 * (H2 ^ 3) + (-0.9e1 / 0.2e1 * z - 0.93e2 / 0.4e1) * (H2 ^ 2) + (0.9e1 / 0.2e1 * z + 0.3e1) * H2 + 0.5e1 * z) * H1 + 0.5e1 / 0.2e1 * H2 * (-(6 * H2 ^ 3) + (z + 0.4e1) * (H2 ^ 2) + (0.3e1 / 0.5e1 * z + 0.12e2 / 0.5e1) * H2 - 0.12e2 / 0.5e1 * z)) * H1 * m2 + ((H1 - H2) ^ 2) * (-(2 * H1 ^ 3) + (z - 0.7e1 / 0.4e1 * H2 + 0.19e2 / 0.4e1) * (H1 ^ 2) + (-0.39e2 / 0.2e1 * (H2 ^ 2) + (0.5e1 * z + 0.55e2 / 0.2e1) * H2 - 0.7e1 * z - 0.8e1) * H1 + 0.21e2 / 0.4e1 * (H2 ^ 3) + 0.15e2 / 0.4e1 * (H2 ^ 2) + (-0.5e1 * z - 0.10e2) * H2 + 0.6e1 * z)) * (m3 ^ 2) + 0.3e1 * (((-(6 * H2) + z + 0.3e1) * (H1 ^ 2) + (-0.23e2 / 0.6e1 + 0.85e2 / 0.6e1 * (H2 ^ 2) + (-0.4e1 / 0.3e1 - 0.3e1 * z) * H2) * H1 - (10 * H2 ^ 3) + (0.5e1 / 0.3e1 * z - 0.10e2 / 0.3e1) * (H2 ^ 2) + (0.2e1 / 0.3e1 + 0.8e1 / 0.3e1 * z) * H2 - 0.4e1 / 0.3e1 * z + 0.11e2 / 0.3e1) * H1 * m2 + (-z + (6 * H2) - 0.3e1) * (H1 ^ 3) + (0.23e2 / 0.6e1 - 0.85e2 / 0.6e1 * (H2 ^ 2) + (0.3e1 * z + 0.4e1 / 0.3e1) * H2) * (H1 ^ 2) + ((10 * H2 ^ 3) + (-0.5e1 / 0.3e1 * z + 0.10e2 / 0.3e1) * (H2 ^ 2) + (-0.8e1 / 0.3e1 * z - 0.2e1 / 0.3e1) * H2 - 0.11e2 / 0.3e1 + 0.4e1 / 0.3e1 * z) * H1 - 0.7e1 / 0.2e1 * (H2 ^ 4) + (4 * H2 ^ 3) + (0.5e1 / 0.3e1 * z - 0.61e2 / 0.6e1) * (H2 ^ 2) + (0.22e2 / 0.3e1 - z / 0.3e1) * H2 - z / 0.3e1 - 0.2e1 / 0.3e1) * (H2 - 1) * m2 * m3 + 0.21e2 / 0.4e1 * (m2 ^ 2) * ((H2 - 1) ^ 5)) * (y2(t, x) ^ 2) + (((z - 0.3e1 / 0.2e1 * H1) * (H1 ^ 5) * (m2 ^ 3) / 0.2e1 - 0.5e1 / 0.2e1 * (-0.17e2 / 0.10e2 * (H1 ^ 4) + (z + 0.8e1 / 0.5e1 * H2 + 0.16e2 / 0.5e1) * (H1 ^ 3) + (-0.9e1 / 0.10e2 * (H2 ^ 2) + (-0.19e2 / 0.5e1 - 0.4e1 / 0.5e1 * z) * H2 - 0.11e2 / 0.5e1 * z - 0.14e2 / 0.5e1) * (H1 ^ 2) + ((0.16e2 / 0.5e1 * z + 0.24e2 / 0.5e1) * H2 + 0.8e1 / 0.5e1 * z) * H1 - 0.16e2 / 0.5e1 * z * H2) * (H1 ^ 2) * (m2 ^ 2) + 0.7e1 / 0.2e1 * (-0.25e2 / 0.14e2 * (H1 ^ 4) + (z + H2 / 0.2e1 + 0.32e2 / 0.7e1) * (H1 ^ 3) + (-0.11e2 / 0.14e2 * (H2 ^ 2) + (-z / 0.7e1 - 0.6e1 / 0.7e1) * H2 - 0.22e2 / 0.7e1 * z - 0.4e1) * (H1 ^ 2) + (0.37e2 / 0.14e2 * (H2 ^ 3) + (-z - 0.6e1) * (H2 ^ 2) + (0.22e2 / 0.7e1 * z + 0.4e1) * H2 + 0.16e2 / 0.7e1 * z) * H1 + 0.5e1 / 0.7e1 * H2 * (-0.24e2 / 0.5e1 * (H2 ^ 3) + (z + 0.4e1) * (H2 ^ 2) + (0.16e2 / 0.5e1 + 0.4e1 / 0.5e1 * z) * H2 - 0.24e2 / 0.5e1 * z)) * (H1 - H2) * H1 * m2 - 0.3e1 / 0.2e1 * ((H1 - H2) ^ 3) * (-0.11e2 / 0.6e1 * (H1 ^ 3) + (z - 0.17e2 / 0.6e1 * H2 + 0.16e2 / 0.3e1) * (H1 ^ 2) + (-0.9e1 / 0.2e1 * (H2 ^ 2) + (0.5e1 / 0.3e1 * z + 0.29e2 / 0.3e1) * H2 - 0.11e2 / 0.3e1 * z - 0.14e2 / 0.3e1) * H1 + 0.7e1 / 0.6e1 * (H2 ^ 3) + (H2 ^ 2) + (-0.10e2 / 0.3e1 - 0.5e1 / 0.3e1 * z) * H2 + 0.8e1 / 0.3e1 * z)) * (m3 ^ 3) + ((-(2 * H1 ^ 4) + (z + (4 * H2) + 0.5e1) * (H1 ^ 3) + (-0.9e1 / 0.4e1 * (H2 ^ 2) + (-0.19e2 / 0.2e1 - 0.2e1 * z) * H2 - 0.13e2 / 0.4e1 - 0.3e1 * z) * (H1 ^ 2) + ((0.8e1 * z + 0.12e2) * H2 + z - 0.3e1) * H1 - 0.8e1 * z * H2 + 0.2e1 * z) * (H1 ^ 2) * (m2 ^ 2) - 0.2e1 * (-(2 * H1 ^ 5) + (z + (4 * H2) + 0.5e1) * (H1 ^ 4) + (-0.9e1 / 0.4e1 * (H2 ^ 2) + (-0.19e2 / 0.2e1 - 0.2e1 * z) * H2 - 0.13e2 / 0.4e1 - 0.3e1 * z) * (H1 ^ 3) + ((12 * H2 ^ 3) + (-0.45e2 / 0.2e1 - 0.3e1 * z) * (H2 ^ 2) + (0.14e2 * z + 0.23e2) * H2 - 0.3e1 - 0.3e1 / 0.2e1 * z) * (H1 ^ 2) + (-0.85e2 / 0.4e1 * (H2 ^ 4) + (0.6e1 * z + 0.31e2) * (H2 ^ 3) + (-0.9e1 * z + 0.3e1 / 0.4e1) * (H2 ^ 2) + (-0.10e2 * z - 0.23e2 / 0.2e1) * H2 + 0.1e1 + 0.5e1 * z) * H1 + (12 * H2 ^ 5) + (-0.10e2 - 0.5e1 / 0.2e1 * z) * (H2 ^ 4) + (-0.2e1 * z - 0.8e1) * (H2 ^ 3) + (0.12e2 * z - 0.9e1 / 0.2e1) * (H2 ^ 2) + (0.11e2 - 0.4e1 * z) * H2 - 0.2e1 - z) * H1 * m2 + (H1 - H2) * (-(2 * H1 ^ 5) + ((2 * H2) + z + 0.5e1) * (H1 ^ 4) + (-(H2 ^ 2) / 0.4e1 + (-0.9e1 / 0.2e1 - z) * H2 - 0.13e2 / 0.4e1 - 0.3e1 * z) * (H1 ^ 3) + (0.95e2 / 0.4e1 * (H2 ^ 3) + (-0.99e2 / 0.2e1 - 0.7e1 * z) * (H2 ^ 2) + (0.17e2 * z + 0.123e3 / 0.4e1) * H2 - 0.3e1 - 0.4e1 * z) * (H1 ^ 2) + (-0.75e2 / 0.4e1 * (H2 ^ 4) + (0.25e2 / 0.2e1 + 0.5e1 * z) * (H2 ^ 3) + (-z + 0.129e3 / 0.4e1) * (H2 ^ 2) + (-0.16e2 * z - 0.26e2) * H2 + 0.2e1 + 0.8e1 * z) * H1 + 0.21e2 / 0.4e1 * (H2 ^ 5) - 0.15e2 / 0.2e1 * (H2 ^ 4) + (0.65e2 / 0.4e1 - 0.5e1 * z) * (H2 ^ 3) + (0.8e1 * z - 0.35e2) * (H2 ^ 2) + (24 * H2) - 0.4e1 - 0.2e1 * z)) * m2 * (m3 ^ 2) - 0.3e1 * (((z - (4 * H2) + 0.1e1) * (H1 ^ 2) + (0.85e2 / 0.12e2 * (H2 ^ 2) + (0.23e2 / 0.6e1 - 0.2e1 * z) * H2 - z - 0.23e2 / 0.12e2) * H1 - (4 * H2 ^ 3) + (0.5e1 / 0.6e1 * z - 0.14e2 / 0.3e1) * (H2 ^ 2) + (-0.8e1 / 0.3e1 + 0.7e1 / 0.3e1 * z) * H2 - z / 0.6e1 + 0.7e1 / 0.3e1) * H1 * m2 + (-z + (4 * H2) - 0.1e1) * (H1 ^ 3) + (-0.85e2 / 0.12e2 * (H2 ^ 2) + (0.2e1 * z - 0.23e2 / 0.6e1) * H2 + 0.23e2 / 0.12e2 + z) * (H1 ^ 2) + ((4 * H2 ^ 3) + (-0.5e1 / 0.6e1 * z + 0.14e2 / 0.3e1) * (H2 ^ 2) + (-0.7e1 / 0.3e1 * z + 0.8e1 / 0.3e1) * H2 - 0.7e1 / 0.3e1 + z / 0.6e1) * H1 - 0.7e1 / 0.4e1 * (H2 ^ 4) + (3 * H2 ^ 3) + (0.5e1 / 0.6e1 * z - 0.97e2 / 0.12e2) * (H2 ^ 2) + (0.25e2 / 0.6e1 + z / 0.3e1) * H2 - z / 0.6e1 - 0.1e1 / 0.3e1) * ((H2 - 1) ^ 2) * (m2 ^ 2) * m3 - 0.7e1 / 0.4e1 * (m2 ^ 3) * ((H2 - 1) ^ 6)) * y2(t, x) + (-(-(2 * H1 ^ 2) + (z + 0.3e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 - z * (H2 + 1)) * (H1 ^ 5) * (m2 ^ 3) / 0.2e1 + 0.3e1 / 0.2e1 * (-(2 * H1 ^ 5) + (z + 0.17e2 / 0.6e1 * H2 + 0.17e2 / 0.6e1) * (H1 ^ 4) + (-0.4e1 / 0.3e1 * (H2 ^ 2) + (-0.5e1 / 0.3e1 * z - 0.16e2 / 0.3e1) * H2 - 0.5e1 / 0.3e1 * z - 0.4e1 / 0.3e1) * (H1 ^ 3) + ((H2 ^ 3) / 0.2e1 + (0.2e1 / 0.3e1 * z + 0.19e2 / 0.6e1) * (H2 ^ 2) + (0.11e2 / 0.3e1 * z + 0.14e2 / 0.3e1) * H2 + 0.2e1 / 0.3e1 * z) * (H1 ^ 2) - 0.8e1 / 0.3e1 * H2 * ((z + 0.3e1 / 0.2e1) * H2 + z) * H1 + 0.8e1 / 0.3e1 * z * (H2 ^ 2)) * (H1 ^ 2) * (m2 ^ 2) - 0.3e1 / 0.2e1 * ((H1 - H2) ^ 2) * (-(2 * H1 ^ 4) + (z + H2 / 0.6e1 + 0.25e2 / 0.6e1) * (H1 ^ 3) + (-(H2 ^ 2) / 0.3e1 + (-z / 0.3e1 - 0.7e1 / 0.3e1) * H2 - 0.7e1 / 0.3e1 * z - 0.8e1 / 0.3e1) * (H1 ^ 2) + ((H2 ^ 3) / 0.6e1 + (-z / 0.3e1 - 0.5e1 / 0.2e1) * (H2 ^ 2) + (0.8e1 / 0.3e1 * z + 0.4e1) * H2 + 0.4e1 / 0.3e1 * z) * H1 + (-(4 * H2 ^ 3) + (z + 0.4e1) * (H2 ^ 2) + (z + 0.4e1) * H2 - 0.8e1 * z) * H2 / 0.3e1) * H1 * m2 + ((H1 - H2) ^ 4) * (-(2 * H1 ^ 3) + (z - 0.5e1 / 0.2e1 * H2 + 0.11e2 / 0.2e1) * (H1 ^ 2) + (-(2 * H2 ^ 2) + (z + 0.6e1) * H2 - 0.3e1 * z - 0.4e1) * H1 + (H2 ^ 3) / 0.2e1 + (H2 ^ 2) / 0.2e1 + (-0.2e1 - z) * H2 + 0.2e1 * z) / 0.2e1) * (m3 ^ 3) + ((-(2 * H1 ^ 4) + ((2 * H2) + z + 0.7e1) * (H1 ^ 3) + (-0.3e1 / 0.4e1 * (H2 ^ 2) + (-0.11e2 / 0.2e1 - z) * H2 - 0.35e2 / 0.4e1 - 0.4e1 * z) * (H1 ^ 2) + ((0.4e1 * z + 0.6e1) * H2 + 0.5e1 * z + 0.3e1) * H1 - 0.4e1 * z * H2 - 0.2e1 * z) * (H1 ^ 2) * (m2 ^ 2) - 0.2e1 * (-(2 * H1 ^ 5) + ((2 * H2) + z + 0.7e1) * (H1 ^ 4) + (-0.3e1 / 0.4e1 * (H2 ^ 2) + (-0.11e2 / 0.2e1 - z) * H2 - 0.35e2 / 0.4e1 - 0.4e1 * z) * (H1 ^ 3) + ((3 * H2 ^ 3) + (-0.9e1 / 0.2e1 - z) * (H2 ^ 2) + (0.6e1 * z + 0.7e1) * H2 + 0.4e1 + 0.9e1 / 0.2e1 * z) * (H1 ^ 2) + (-0.17e2 / 0.4e1 * (H2 ^ 4) + (0.7e1 / 0.2e1 + 0.3e1 / 0.2e1 * z) * (H2 ^ 3) + (-0.3e1 / 0.2e1 * z + 0.15e2 / 0.4e1) * (H2 ^ 2) + (-0.13e2 / 0.2e1 * z - 0.2e1) * H2 - 0.3e1 / 0.2e1 * z - 0.1e1) * H1 - (-(4 * H2 ^ 4) + z * (H2 ^ 3) + (0.2e1 * z + 0.4e1) * (H2 ^ 2) + (-0.6e1 * z + 0.7e1) * H2 - 0.4e1 - 0.2e1 * z) * H2 / 0.2e1) * H1 * m2 + ((H1 - H2) ^ 2) * (-(2 * H1 ^ 4) + (z - (2 * H2) + 0.7e1) * (H1 ^ 3) + (-0.11e2 / 0.4e1 * (H2 ^ 2) + (z + 0.17e2 / 0.2e1) * H2 - 0.35e2 / 0.4e1 - 0.4e1 * z) * (H1 ^ 2) + (0.5e1 / 0.2e1 * (H2 ^ 3) + (-z + 0.1e1) * (H2 ^ 2) - 0.19e2 / 0.2e1 * H2 + 0.4e1 * z + 0.5e1) * H1 - 0.3e1 / 0.4e1 * (H2 ^ 4) + (H2 ^ 3) / 0.2e1 + (z - 0.11e2 / 0.4e1) * (H2 ^ 2) + (-z + 0.6e1) * H2 - 0.2e1 - z)) * (H2 - 1) * m2 * (m3 ^ 2) - ((H2 - 1) ^ 3) * (((z - (3 * H2)) * (H1 ^ 2) + (0.17e2 / 0.4e1 * (H2 ^ 2) + (0.5e1 - 0.3e1 / 0.2e1 * z) * H2 - 0.3e1 / 0.2e1 * z - 0.1e1 / 0.4e1) * H1 - (2 * H2 ^ 3) + (z / 0.2e1 - 0.4e1) * (H2 ^ 2) + (0.2e1 * z - 0.4e1) * H2 + z / 0.2e1 + 0.1e1) * H1 * m2 - (H1 - H2) * ((z - (3 * H2)) * (H1 ^ 2) + (0.5e1 / 0.4e1 * (H2 ^ 2) + (-z / 0.2e1 + 0.5e1) * H2 - 0.3e1 / 0.2e1 * z - 0.1e1 / 0.4e1) * H1 - 0.3e1 / 0.4e1 * (H2 ^ 3) + (H2 ^ 2) + (z / 0.2e1 - 0.17e2 / 0.4e1) * H2 + z / 0.2e1 + 0.1e1)) * (m2 ^ 2) * m3 - (m2 ^ 3 * (H2 - 1) ^ 7) / 0.4e1)) * m2 * diff(diff(diff(y2(t, x), x), x), x) / 0.3e1 - s1 * (((m3 ^ 4 * (m2 - 1) ^ 3 * y1(t, x) ^ 8) - (8 * (m2 - 1) ^ 2 * m3 ^ 3 * ((m2 - m3) * y2(t, x) + (-H1 * m2 + H1 - H2) * m3 + m2 * (H2 - 1)) * y1(t, x) ^ 7) + 0.5e1 * ((m2 - 1) ^ 2) * (m3 ^ 2) * ((m2 - m3) * ((m2 + 0.28e2 / 0.5e1) * m3 - 0.16e2 / 0.5e1 * m2) * (y2(t, x) ^ 2) + 0.2e1 / 0.5e1 * (m2 - m3) * (((z + (5 * H2)) * m2 - (28 * H1) + (28 * H2)) * m3 - (16 * m2 * (H2 - 1))) * y2(t, x) + ((-0.2e1 / 0.5e1 * z * H2 + 0.28e2 / 0.5e1 * (H1 ^ 2) - (H2 ^ 2)) * m2 - 0.28e2 / 0.5e1 * ((H1 - H2) ^ 2)) * (m3 ^ 2) + 0.2e1 / 0.5e1 * ((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * m2 - (28 * H1) + (22 * H2) + 0.6e1) * (H2 - 1) * m2 * m3 - 0.16e2 / 0.5e1 * (m2 ^ 2) * ((H2 - 1) ^ 2)) * (y1(t, x) ^ 6) - 0.4e1 * ((m2 - 1) ^ 2) * (m3 ^ 2) * (((m2 - m3) * ((m2 + 14) * m3 - 12 * m2) * y2(t, x) ^ 3) + 0.3e1 / 0.2e1 * (((z - (5 * H1) + (2 * H2)) * m2 - (28 * H1) + (28 * H2)) * m3 + 0.16e2 * (-0.3e1 / 0.2e1 * H2 + H1 + 0.1e1 / 0.2e1) * m2) * (m2 - m3) * (y2(t, x) ^ 2) - 0.3e1 * (m2 - m3) * ((((z + (5 * H2)) * H1 - H2 * (z + H2)) * m2 - (14 * (H1 - H2) ^ 2)) * m3 - 0.16e2 * (H2 - 1) * (-0.3e1 / 0.4e1 * H2 + H1 - 0.1e1 / 0.4e1) * m2) * y2(t, x) + ((-(14 * H1 ^ 3) + 0.3e1 * H2 * (0.5e1 / 0.2e1 * H2 + z) * H1 - 0.3e1 / 0.2e1 * z * (H2 ^ 2) - (H2 ^ 3)) * m2 + (14 * (H1 - H2) ^ 3)) * (m3 ^ 2) - 0.3e1 * (H2 - 1) * m2 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * H1 - (H2 ^ 2) / 0.3e1 + (-z / 0.2e1 - 0.1e1 / 0.3e1) * H2 - z / 0.2e1 - 0.1e1 / 0.3e1) * m2 - (14 * H1 ^ 2) + ((22 * H2 + 6) * H1) - 0.26e2 / 0.3e1 * (H2 ^ 2) - 0.14e2 / 0.3e1 * H2 - 0.2e1 / 0.3e1) * m3 + 0.24e2 * ((H2 - 1) ^ 2) * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (m2 ^ 2)) * (y1(t, x) ^ 5) - 0.67e2 * (m2 - 1) * ((-0.70e2 / 0.67e2 + m2) * ((m2 - m3) ^ 2) * (y2(t, x) ^ 4) - 0.4e1 / 0.67e2 * (m2 - m3) * (((z - (5 * H1)) * (m2 ^ 2) + (-z - (65 * H1) + (67 * H2)) * m2 + (70 * H1) - (70 * H2)) * m3 + 0.60e2 * ((H1 - 0.67e2 / 0.60e2 * H2 + 0.7e1 / 0.60e2) * m2 - H1 + 0.7e1 / 0.6e1 * H2 - 0.1e1 / 0.6e1) * m2) * (y2(t, x) ^ 3) + 0.30e2 / 0.67e2 * (m2 - m3) * (((-0.5e1 / 0.2e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.2e1 / 0.5e1 * z * H2) * (m2 ^ 2) + (-0.23e2 / 0.2e1 * (H1 ^ 2) + (-z + (26 * H2)) * H1 + 0.2e1 / 0.5e1 * H2 * (z - 0.67e2 / 0.2e1 * H2)) * m2 + (14 * (H1 - H2) ^ 2)) * m3 + 0.8e1 * (((H1 ^ 2) + ((-3 * H2 + 1) * H1) + 0.67e2 / 0.40e2 * (H2 ^ 2) - 0.7e1 / 0.20e2 * H2 - 0.13e2 / 0.40e2) * m2 - (H1 ^ 2) + ((3 * H2 - 1) * H1) - 0.7e1 / 0.4e1 * (H2 ^ 2) + H2 / 0.2e1 + 0.1e1 / 0.4e1) * m2) * (y2(t, x) ^ 2) - 0.30e2 / 0.67e2 * ((((z + (5 * H2)) * (H1 ^ 2) - 0.2e1 * H2 * (z + H2) * H1 + 0.2e1 / 0.5e1 * z * (H2 ^ 2)) * (m2 ^ 2) + (-0.28e2 / 0.3e1 * (H1 ^ 3) + (-z + (23 * H2)) * (H1 ^ 2) + 0.2e1 * H2 * (z - (13 * H2)) * H1 - 0.2e1 / 0.5e1 * (H2 ^ 2) * (-0.67e2 / 0.3e1 * H2 + z)) * m2 + 0.28e2 / 0.3e1 * ((H1 - H2) ^ 3)) * m3 - 0.16e2 * (((H1 ^ 2) + (-0.3e1 / 0.2e1 * H2 - 0.1e1 / 0.2e1) * H1 + 0.67e2 / 0.120e3 * (H2 ^ 2) + 0.23e2 / 0.60e2 * H2 + 0.7e1 / 0.120e3) * m2 - (H1 ^ 2) + (0.3e1 / 0.2e1 * H2 + 0.1e1 / 0.2e1) * H1 - 0.7e1 / 0.12e2 * (H2 ^ 2) - H2 / 0.3e1 - 0.1e1 / 0.12e2) * (H2 - 1) * m2) * (m2 - m3) * y2(t, x) + ((-0.70e2 / 0.67e2 * (H1 ^ 4) + 0.30e2 / 0.67e2 * H2 * (0.5e1 / 0.2e1 * H2 + z) * (H1 ^ 2) - 0.30e2 / 0.67e2 * (H2 ^ 2) * (0.2e1 / 0.3e1 * H2 + z) * H1 + 0.4e1 / 0.67e2 * z * (H2 ^ 3)) * (m2 ^ 2) + (0.140e3 / 0.67e2 * (H1 ^ 4) - 0.280e3 / 0.67e2 * H2 * (H1 ^ 3) - 0.30e2 / 0.67e2 * H2 * (z - 0.23e2 / 0.2e1 * H2) * (H1 ^ 2) + 0.30e2 / 0.67e2 * (z - 0.26e2 / 0.3e1 * H2) * (H2 ^ 2) * H1 - 0.4e1 / 0.67e2 * z * (H2 ^ 3) + (H2 ^ 4)) * m2 - 0.70e2 / 0.67e2 * ((H1 - H2) ^ 4)) * (m3 ^ 2) - 0.30e2 / 0.67e2 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-0.2e1 / 0.3e1 * (H2 ^ 2) + (-z - 0.2e1 / 0.3e1) * H2 - z - 0.2e1 / 0.3e1) * H1 + 0.2e1 / 0.15e2 * z * (H2 ^ 2 + H2 + 1)) * (m2 ^ 2) + (-0.28e2 / 0.3e1 * (H1 ^ 3) + (-z + 0.39e2 / 0.2e1 * H2 + 0.7e1 / 0.2e1) * (H1 ^ 2) + (-0.50e2 / 0.3e1 * (H2 ^ 2) + (-0.26e2 / 0.3e1 + z) * H2 + z - 0.2e1 / 0.3e1) * H1 + 0.67e2 / 0.15e2 * (H2 ^ 3) + (0.53e2 / 0.15e2 - 0.2e1 / 0.15e2 * z) * (H2 ^ 2) + (0.14e2 / 0.15e2 - 0.2e1 / 0.15e2 * z) * H2 - 0.2e1 / 0.15e2 * z) * m2 + 0.28e2 / 0.3e1 * (H1 - H2) * ((H1 ^ 2) + (-0.19e2 / 0.14e2 * H2 - 0.9e1 / 0.14e2) * H1 + (H2 ^ 2) / 0.2e1 + 0.5e1 / 0.14e2 * H2 + 0.1e1 / 0.7e1)) * (H2 - 1) * m2 * m3 + 0.240e3 / 0.67e2 * (((H1 ^ 2) + ((-H2 - 1) * H1) + 0.67e2 / 0.240e3 * (H2 ^ 2) + 0.53e2 / 0.120e3 * H2 + 0.67e2 / 0.240e3) * m2 - (H1 ^ 2) + ((H2 + 1) * H1) - 0.7e1 / 0.24e2 * (H2 ^ 2) - 0.5e1 / 0.12e2 * H2 - 0.7e1 / 0.24e2) * ((H2 - 1) ^ 2) * (m2 ^ 2)) * (m3 ^ 2) * (y1(t, x) ^ 4) + 0.40e2 * (m2 - 1) * m3 * (((m2 - m3) ^ 2) * ((-0.7e1 / 0.5e1 + m2) * m3 + m2 / 0.5e1) * (y2(t, x) ^ 5) + ((m2 - m3) ^ 2) * (((z - (67 * H1) + (50 * H2)) * m2 + (70 * H1) - (70 * H2)) * m3 + (10 * m2 * (H2 - 1))) * (y2(t, x) ^ 4) / 0.10e2 + 0.2e1 / 0.5e1 * (m2 - m3) * ((H1 * (z - 0.5e1 / 0.2e1 * H1) * (m2 ^ 2) + (-0.65e2 / 0.2e1 * (H1 ^ 2) + (-z + (67 * H2)) * H1 - H2 * (z + (25 * H2))) * m2 + (35 * (H1 - H2) ^ 2)) * (m3 ^ 2) + (((30 * H1 ^ 2) + ((-67 * H2 + 7) * H1) + z * H2 + (25 * H2 ^ 2) - 0.5e1 / 0.2e1) * m2 - 0.30e2 * (H1 - H2) * (H1 - 0.4e1 / 0.3e1 * H2 + 0.1e1 / 0.3e1)) * m2 * m3 + (5 * m2 ^ 2 * (H2 - 1) ^ 2)) * (y2(t, x) ^ 3) - 0.3e1 / 0.2e1 * (((-0.5e1 / 0.3e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.4e1 / 0.5e1 * z * H2) * H1 * (m2 ^ 2) + (-0.23e2 / 0.3e1 * (H1 ^ 3) + (-z + (26 * H2)) * (H1 ^ 2) + 0.4e1 / 0.5e1 * H2 * (z - 0.67e2 / 0.2e1 * H2) * H1 + 0.2e1 / 0.5e1 * (H2 ^ 2) * (z + 0.50e2 / 0.3e1 * H2)) * m2 + 0.28e2 / 0.3e1 * ((H1 - H2) ^ 3)) * (m3 ^ 2) - 0.2e1 / 0.5e1 * ((-0.40e2 / 0.3e1 * (H1 ^ 3) + ((60 * H2 - 20) * H1 ^ 2) + ((-67 * H2 ^ 2 + 14 * H2 + 13) * H1) + z * (H2 ^ 2) + 0.50e2 / 0.3e1 * (H2 ^ 3) - z / 0.3e1 - (5 * H2) - 0.5e1 / 0.3e1) * m2 + 0.40e2 / 0.3e1 * (H1 ^ 3) + ((-60 * H2 + 20) * H1 ^ 2) + ((70 * H2 ^ 2 - 20 * H2 - 10) * H1) - 0.80e2 / 0.3e1 * (H2 ^ 3) + (10 * H2 ^ 2) + 0.10e2 / 0.3e1) * m2 * m3 - 0.4e1 / 0.3e1 * (m2 ^ 2) * ((H2 - 1) ^ 3)) * (m2 - m3) * (y2(t, x) ^ 2) + (m2 - m3) * ((((z + (5 * H2)) * (H1 ^ 2) - 0.3e1 * H2 * (z + H2) * H1 + 0.6e1 / 0.5e1 * z * (H2 ^ 2)) * H1 * (m2 ^ 2) + (-(7 * H1 ^ 4) + (-z + (23 * H2)) * (H1 ^ 3) + 0.3e1 * H2 * (z - (13 * H2)) * (H1 ^ 2) - 0.6e1 / 0.5e1 * (H2 ^ 2) * (-0.67e2 / 0.3e1 * H2 + z) * H1 - 0.2e1 / 0.5e1 * z * (H2 ^ 3) - (5 * H2 ^ 4)) * m2 + (7 * (H1 - H2) ^ 4)) * (m3 ^ 2) + 0.2e1 / 0.5e1 * ((-(40 * H1 ^ 3) + ((90 * H2 + 30) * H1 ^ 2) + ((-67 * H2 ^ 2 - 46 * H2 - 7) * H1) + (0.25e2 / 0.2e1 * (H2 ^ 2) + (z + 0.25e2 / 0.2e1) * H2 + z + 0.5e1) * H2) * m2 + 0.40e2 * (H1 - H2) * ((H1 ^ 2) + (-0.5e1 / 0.4e1 * H2 - 0.3e1 / 0.4e1) * H1 + (H2 ^ 2) / 0.2e1 + H2 / 0.4e1 + 0.1e1 / 0.4e1)) * (H2 - 1) * m2 * m3 + (m2 ^ 2 * (H2 - 1) ^ 4)) * y2(t, x) + (-(-0.7e1 / 0.5e1 * (H1 ^ 4) + H2 * (0.5e1 / 0.2e1 * H2 + z) * (H1 ^ 2) + (-0.3e1 / 0.2e1 * z * (H2 ^ 2) - (H2 ^ 3)) * H1 + 0.2e1 / 0.5e1 * z * (H2 ^ 3)) * H1 * (m2 ^ 2) + (H1 - H2) * (-0.14e2 / 0.5e1 * (H1 ^ 4) + 0.21e2 / 0.5e1 * H2 * (H1 ^ 3) + H2 * (z - 0.73e2 / 0.10e2 * H2) * (H1 ^ 2) - (H2 ^ 2) * (z - 0.57e2 / 0.5e1 * H2) * H1 / 0.2e1 - (H2 ^ 3) * (z + (10 * H2)) / 0.10e2) * m2 + 0.7e1 / 0.5e1 * ((H1 - H2) ^ 5)) * (m3 ^ 3) + (H2 - 1) * m2 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-(H2 ^ 2) + (-0.3e1 / 0.2e1 * z - 0.1e1) * H2 - 0.3e1 / 0.2e1 * z - 0.1e1) * H1 + 0.2e1 / 0.5e1 * z * (H2 ^ 2 + H2 + 1)) * H1 * (m2 ^ 2) + (-(7 * H1 ^ 4) + (-z + 0.39e2 / 0.2e1 * H2 + 0.7e1 / 0.2e1) * (H1 ^ 3) + (-(25 * H2 ^ 2) + (-0.13e2 + 0.3e1 / 0.2e1 * z) * H2 + 0.3e1 / 0.2e1 * z - 0.1e1) * (H1 ^ 2) + (0.67e2 / 0.5e1 * (H2 ^ 3) + (-0.2e1 / 0.5e1 * z + 0.53e2 / 0.5e1) * (H2 ^ 2) + (0.14e2 / 0.5e1 - 0.2e1 / 0.5e1 * z) * H2 - 0.2e1 / 0.5e1 * z) * H1 - ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.5e1) * (H2 ^ 2) / 0.5e1) * m2 + 0.7e1 * ((H1 - H2) ^ 2) * ((H1 ^ 2) + (-0.8e1 / 0.7e1 * H2 - 0.6e1 / 0.7e1) * H1 + 0.3e1 / 0.7e1 * (H2 ^ 2) + 0.2e1 / 0.7e1 * H2 + 0.2e1 / 0.7e1)) * (m3 ^ 2) + ((-(80 * H1 ^ 3) + ((120 * H2 + 120) * H1 ^ 2) + ((-67 * H2 ^ 2 - 106 * H2 - 67) * H1) + ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.10e2) * (H2 + 1)) * m2 + (80 * H1 ^ 3) + ((-120 * H2 - 120) * H1 ^ 2) + ((70 * H2 ^ 2 + 100 * H2 + 70) * H1) - (18 * H2 ^ 3) - (16 * H2 ^ 2) - (34 * H2) - 0.12e2) * ((H2 - 1) ^ 2) * (m2 ^ 2) * m3 / 0.10e2 + (m2 ^ 3 * (H2 - 1) ^ 5) / 0.5e1) * (y1(t, x) ^ 3) - 0.8e1 * m3 * (((m2 - m3) ^ 2) * (((m2 ^ 2) + 0.7e1 / 0.2e1 - 0.33e2 / 0.8e1 * m2) * m3 + 0.9e1 / 0.8e1 * (m2 ^ 2) - 0.3e1 / 0.2e1 * m2) * (y2(t, x) ^ 6) + ((m2 - m3) ^ 2) * (((z - (30 * H1) + (12 * H2)) * (m2 ^ 2) + (-0.3e1 / 0.2e1 * z + (72 * H1) - 0.99e2 / 0.2e1 * H2) * m2 - (42 * H1) + (42 * H2)) * m3 + ((z - (12 * H1) + (27 * H2) - 0.18e2) * m2 + (12 * H1) - (36 * H2) + 0.24e2) * m2 / 0.2e1) * (y2(t, x) ^ 5) / 0.2e1 - 0.3e1 / 0.2e1 * ((m2 - m3) ^ 2) * (((-0.67e2 / 0.2e1 * (H1 ^ 2) + (z + (50 * H2)) * H1 - 0.5e1 / 0.3e1 * H2 * (z + (6 * H2))) * (m2 ^ 2) + (0.137e3 / 0.2e1 * (H1 ^ 2) + (-z - (120 * H2)) * H1 + 0.5e1 / 0.2e1 * (0.33e2 / 0.2e1 * H2 + z) * H2) * m2 - (35 * (H1 - H2) ^ 2)) * m3 - 0.5e1 / 0.6e1 * ((z - (12 * H1) + 0.27e2 / 0.2e1 * H2 - 0.9e1 / 0.2e1) * m2 + (12 * H1) - (18 * H2) + 0.6e1) * (H2 - 1) * m2) * (y2(t, x) ^ 4) - 0.3e1 * (m2 - m3) * (((H1 ^ 2) * (z - 0.5e1 / 0.3e1 * H1) * (m2 ^ 3) + (-(20 * H1 ^ 3) + (-0.2e1 * z + (67 * H2)) * (H1 ^ 2) - 0.2e1 * H2 * (z + (25 * H2)) * H1 + 0.5e1 / 0.3e1 * (H2 ^ 2) * (z + (4 * H2))) * (m2 ^ 2) + ((45 * H1 ^ 3) + (-(137 * H2) + z) * (H1 ^ 2) + 0.2e1 * H2 * (z + (60 * H2)) * H1 - 0.5e1 / 0.2e1 * (H2 ^ 2) * (z + (11 * H2))) * m2 - 0.70e2 / 0.3e1 * ((H1 - H2) ^ 3)) * (m3 ^ 2) + 0.2e1 * (((10 * H1 ^ 3) + (-0.67e2 / 0.2e1 * H2 + 0.7e1 / 0.2e1) * (H1 ^ 2) + (z * H2 + (25 * H2 ^ 2) - 0.5e1 / 0.2e1) * H1 - 0.10e2 / 0.3e1 * (H2 ^ 3) - 0.5e1 / 0.6e1 * z * (H2 ^ 2) + 0.1e1 / 0.3e1 + z / 0.12e2) * (m2 ^ 2) + (-(20 * H1 ^ 3) + (0.137e3 / 0.2e1 * H2 - 0.17e2 / 0.2e1) * (H1 ^ 2) + (0.5e1 / 0.2e1 - (65 * H2 ^ 2) + (0.10e2 - z) * H2) * H1 + 0.35e2 / 0.2e1 * (H2 ^ 3) + (-0.15e2 / 0.2e1 + 0.5e1 / 0.3e1 * z) * (H2 ^ 2) + (0.15e2 / 0.4e1 - 0.5e1 / 0.6e1 * z) * H2 - 0.7e1 / 0.4e1 + z / 0.6e1) * m2 + (10 * H1 ^ 3) + ((5 - 35 * H2) * H1 ^ 2) + ((40 * H2 ^ 2 - 10 * H2) * H1) - (5 * H2) - 0.50e2 / 0.3e1 * (H2 ^ 3) + 0.5e1 / 0.3e1 + (10 * H2 ^ 2)) * m2 * m3 - 0.5e1 / 0.6e1 * ((z - (12 * H1) + (9 * H2)) * m2 + (12 * H1) - (12 * H2)) * ((H2 - 1) ^ 2) * (m2 ^ 2)) * (y2(t, x) ^ 3) + 0.15e2 / 0.2e1 * (m2 - m3) * (((-0.5e1 / 0.4e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.6e1 / 0.5e1 * z * H2) * (H1 ^ 2) * (m2 ^ 3) + (-0.9e1 / 0.2e1 * (H1 ^ 4) + ((24 * H2) - 0.2e1 * z) * (H1 ^ 3) + 0.12e2 / 0.5e1 * H2 * (z - 0.67e2 / 0.4e1 * H2) * (H1 ^ 2) + ((20 * H2 ^ 3) + 0.6e1 / 0.5e1 * z * (H2 ^ 2)) * H1 - 0.2e1 / 0.3e1 * (H2 ^ 3) * (z + (3 * H2))) * (m2 ^ 2) + (0.51e2 / 0.4e1 * (H1 ^ 4) + (z - (54 * H2)) * (H1 ^ 3) - 0.6e1 / 0.5e1 * (-0.137e3 / 0.2e1 * H2 + z) * H2 * (H1 ^ 2) - 0.6e1 / 0.5e1 * (H2 ^ 2) * (z + (40 * H2)) * H1 + (H2 ^ 3) * (z + 0.33e2 / 0.4e1 * H2)) * m2 - (7 * (H1 - H2) ^ 4)) * (m3 ^ 2) - 0.6e1 / 0.5e1 * ((-0.10e2 / 0.3e1 * (H1 ^ 4) + ((20 * H2) - 0.20e2 / 0.3e1) * (H1 ^ 3) + (-0.67e2 / 0.2e1 * (H2 ^ 2) + (7 * H2) + 0.13e2 / 0.2e1) * (H1 ^ 2) + (z * (H2 ^ 2) + 0.50e2 / 0.3e1 * (H2 ^ 3) - z / 0.3e1 - (5 * H2) - 0.5e1 / 0.3e1) * H1 - 0.5e1 / 0.3e1 * (H2 ^ 4) - 0.5e1 / 0.9e1 * z * (H2 ^ 3) + (0.2e1 / 0.3e1 + z / 0.6e1) * H2 + z / 0.18e2) * (m2 ^ 2) + (0.20e2 / 0.3e1 * (H1 ^ 4) + (-(40 * H2) + 0.40e2 / 0.3e1) * (H1 ^ 3) + (-(17 * H2) + 0.137e3 / 0.2e1 * (H2 ^ 2) - 0.23e2 / 0.2e1) * (H1 ^ 2) + (-0.130e3 / 0.3e1 * (H2 ^ 3) + (0.10e2 - z) * (H2 ^ 2) + (5 * H2) + z / 0.3e1 + 0.5e1) * H1 + 0.35e2 / 0.4e1 * (H2 ^ 4) + (0.10e2 / 0.9e1 * z - 0.5e1) * (H2 ^ 3) + (0.15e2 / 0.4e1 - 0.5e1 / 0.6e1 * z) * (H2 ^ 2) + (-0.7e1 / 0.2e1 + z / 0.3e1) * H2 - z / 0.6e1) * m2 - 0.10e2 / 0.3e1 * (H1 - H2) * ((H1 ^ 3) + ((-5 * H2 + 2) * H1 ^ 2) + (0.11e2 / 0.2e1 * (H2 ^ 2) - H2 - 0.3e1 / 0.2e1) * H1 - 0.5e1 / 0.2e1 * (H2 ^ 3) + (2 * H2 ^ 2) - 0.3e1 / 0.2e1 * H2 + 0.1e1)) * m2 * m3 + ((z - (12 * H1) + 0.27e2 / 0.4e1 * H2 + 0.9e1 / 0.4e1) * m2 + (12 * H1) - (9 * H2) - 0.3e1) * ((H2 - 1) ^ 3) * (m2 ^ 2) / 0.3e1) * (y2(t, x) ^ 2) - 0.15e2 / 0.4e1 * (m2 - m3) * ((((z + (5 * H2)) * (H1 ^ 2) - 0.4e1 * H2 * (z + H2) * H1 + 0.12e2 / 0.5e1 * z * (H2 ^ 2)) * (H1 ^ 2) * (m2 ^ 3) + (-0.28e2 / 0.5e1 * (H1 ^ 5) + ((18 * H2) - 0.2e1 * z) * (H1 ^ 4) + 0.8e1 * H2 * (z - (6 * H2)) * (H1 ^ 3) - 0.24e2 / 0.5e1 * (z - 0.67e2 / 0.6e1 * H2) * (H2 ^ 2) * (H1 ^ 2) + (-0.8e1 / 0.5e1 * z * (H2 ^ 3) - (20 * H2 ^ 4)) * H1 + 0.2e1 / 0.3e1 * (0.12e2 / 0.5e1 * H2 + z) * (H2 ^ 4)) * (m2 ^ 2) + (H1 - H2) * (0.56e2 / 0.5e1 * (H1 ^ 4) + (z - 0.199e3 / 0.5e1 * H2) * (H1 ^ 3) - 0.3e1 * H2 * (z - 0.341e3 / 0.15e2 * H2) * (H1 ^ 2) - 0.3e1 / 0.5e1 * (H2 ^ 2) * (z + (69 * H2)) * H1 + (H2 ^ 3) * (z + 0.33e2 / 0.5e1 * H2)) * m2 - 0.28e2 / 0.5e1 * ((H1 - H2) ^ 5)) * (m3 ^ 2) + 0.8e1 / 0.5e1 * ((-(10 * H1 ^ 4) + ((30 * H2 + 10) * H1 ^ 3) + (-0.67e2 / 0.2e1 * (H2 ^ 2) - (23 * H2) - 0.7e1 / 0.2e1) * (H1 ^ 2) + (0.25e2 / 0.2e1 * (H2 ^ 2) + (z + 0.25e2 / 0.2e1) * H2 + z + 0.5e1) * H2 * H1 - (H2 ^ 4) + (-0.1e1 - 0.5e1 / 0.12e2 * z) * (H2 ^ 3) + (-0.1e1 - 0.5e1 / 0.12e2 * z) * (H2 ^ 2) - z * H2 / 0.6e1) * (m2 ^ 2) + ((20 * H1 ^ 4) + ((-60 * H2 - 20) * H1 ^ 3) + ((43 * H2) + 0.137e3 / 0.2e1 * (H2 ^ 2) + 0.17e2 / 0.2e1) * (H1 ^ 2) - (0.65e2 / 0.2e1 * (H2 ^ 2) + (z + 0.45e2 / 0.2e1) * H2 + z + 0.15e2) * H2 * H1 + 0.5e1 / 0.6e1 * (0.63e2 / 0.10e2 * (H2 ^ 3) + (z + 0.9e1 / 0.5e1) * (H2 ^ 2) + 0.63e2 / 0.10e2 * H2 + 0.3e1 / 0.5e1 * z) * H2) * m2 - 0.10e2 * ((H1 - H2) ^ 2) * ((H1 ^ 2) + ((-H2 - 1) * H1) + (H2 ^ 2) / 0.2e1 + 0.1e1 / 0.2e1)) * (H2 - 1) * m2 * m3 - ((z - (12 * H1) + 0.27e2 / 0.5e1 * H2 + 0.18e2 / 0.5e1) * m2 + (12 * H1) - 0.36e2 / 0.5e1 * H2 - 0.24e2 / 0.5e1) * ((H2 - 1) ^ 4) * (m2 ^ 2) / 0.3e1) * y2(t, x) + (0.15e2 / 0.4e1 * (-0.14e2 / 0.15e2 * (H1 ^ 4) + H2 * (0.5e1 / 0.2e1 * H2 + z) * (H1 ^ 2) - 0.2e1 * (H2 ^ 2) * (0.2e1 / 0.3e1 * H2 + z) * H1 + 0.4e1 / 0.5e1 * z * (H2 ^ 3)) * (H1 ^ 2) * (m2 ^ 3) + (0.21e2 / 0.2e1 * (H1 ^ 6) - (21 * H1 ^ 5 * H2) - 0.15e2 / 0.2e1 * (-0.9e1 / 0.2e1 * H2 + z) * H2 * (H1 ^ 4) + 0.15e2 * (H2 ^ 2) * (z - (4 * H2)) * (H1 ^ 3) - 0.6e1 * (H2 ^ 3) * (z - 0.67e2 / 0.8e1 * H2) * (H1 ^ 2) - 0.3e1 / 0.2e1 * (H2 ^ 4) * (z + (10 * H2)) * H1 + (H2 ^ 5) * (z + (2 * H2)) / 0.2e1) * (m2 ^ 2) + 0.15e2 / 0.4e1 * ((H1 - H2) ^ 2) * (-0.14e2 / 0.5e1 * (H1 ^ 4) + 0.28e2 / 0.5e1 * H2 * (H1 ^ 3) + H2 * (z - 0.23e2 / 0.2e1 * H2) * (H1 ^ 2) + 0.37e2 / 0.5e1 * (H2 ^ 3) * H1 - (H2 ^ 3) * (z + 0.11e2 / 0.2e1 * H2) / 0.5e1) * m2 + 0.7e1 / 0.2e1 * ((H1 - H2) ^ 6)) * (m3 ^ 3) - 0.15e2 / 0.4e1 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-0.4e1 / 0.3e1 * (H2 ^ 2) + (-0.4e1 / 0.3e1 - 0.2e1 * z) * H2 - 0.4e1 / 0.3e1 - 0.2e1 * z) * H1 + 0.4e1 / 0.5e1 * z * (H2 ^ 2 + H2 + 1)) * (H1 ^ 2) * (m2 ^ 3) + (-0.28e2 / 0.5e1 * (H1 ^ 5) + ((17 * H2) - 0.2e1 * z + 0.1e1) * (H1 ^ 4) + (-(32 * H2 ^ 2) + (0.4e1 * z - 0.16e2) * H2 + 0.4e1 * z) * (H1 ^ 3) + (0.134e3 / 0.5e1 * (H2 ^ 3) + (0.106e3 / 0.5e1 - 0.8e1 / 0.5e1 * z) * (H2 ^ 2) + (-0.8e1 / 0.5e1 * z + 0.28e2 / 0.5e1) * H2 - 0.8e1 / 0.5e1 * z) * (H1 ^ 2) - 0.4e1 / 0.5e1 * ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.5e1) * (H2 ^ 2) * H1 + 0.4e1 / 0.15e2 * (H2 ^ 2) * ((2 * H2 ^ 3) + (z + 0.2e1) * (H2 ^ 2) + (z + 0.2e1) * H2 + z / 0.2e1)) * (m2 ^ 2) + (0.56e2 / 0.5e1 * (H1 ^ 5) + (-0.83e2 / 0.2e1 * H2 + z - 0.19e2 / 0.2e1) * (H1 ^ 4) + ((68 * H2 ^ 2) + (-0.2e1 * z + 0.36e2) * H2 - 0.2e1 * z + 0.4e1) * (H1 ^ 3) + (-0.274e3 / 0.5e1 * (H2 ^ 3) + (-0.206e3 / 0.5e1 + 0.4e1 / 0.5e1 * z) * (H2 ^ 2) + (0.4e1 / 0.5e1 * z - 0.68e2 / 0.5e1) * H2 + 0.4e1 / 0.5e1 * z) * (H1 ^ 2) + 0.4e1 / 0.5e1 * (H2 ^ 2) * ((25 * H2 ^ 2) + (z + 0.20e2) * H2 + z + 0.15e2) * H1 - 0.7e1 / 0.15e2 * (H2 ^ 2) * (0.75e2 / 0.14e2 * (H2 ^ 3) + (z + 0.39e2 / 0.14e2) * (H2 ^ 2) + (0.2e1 / 0.7e1 * z + 0.6e1) * H2 + 0.6e1 / 0.7e1 * z)) * m2 - 0.28e2 / 0.5e1 * ((H1 - H2) ^ 3) * ((H1 ^ 2) + (-0.13e2 / 0.14e2 * H2 - 0.15e2 / 0.14e2) * H1 + 0.17e2 / 0.42e2 * (H2 ^ 2) + 0.5e1 / 0.42e2 * H2 + 0.10e2 / 0.21e2)) * (H2 - 1) * m2 * (m3 ^ 2) - 0.3e1 / 0.2e1 * ((-(20 * H1 ^ 4) + ((40 * H2 + 40) * H1 ^ 3) + (-0.67e2 / 0.2e1 * (H2 ^ 2) - (53 * H2) - 0.67e2 / 0.2e1) * (H1 ^ 2) + ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.10e2) * (H2 + 1) * H1 - (H2 ^ 2 + H2 + 1) * ((2 * H2 ^ 2) + (z + 0.2e1) * H2 + z + 0.2e1) / 0.3e1) * (m2 ^ 2) + ((40 * H1 ^ 4) + ((-80 * H2 - 80) * H1 ^ 3) + ((103 * H2) + 0.137e3 / 0.2e1 * (H2 ^ 2) + 0.137e3 / 0.2e1) * (H1 ^ 2) + (-(28 * H2 ^ 3) + (-z - 0.36e2) * (H2 ^ 2) + (-0.2e1 * z - 0.54e2) * H2 - z - 0.22e2) * H1 + 0.17e2 / 0.4e1 * (H2 ^ 4) + (0.5e1 / 0.6e1 * z + 0.5e1 / 0.2e1) * (H2 ^ 3) + 0.33e2 / 0.4e1 * (H2 ^ 2) + (0.7e1 + 0.3e1 / 0.2e1 * z) * H2 + z / 0.3e1 + 0.2e1) * m2 - (20 * H1 ^ 4) + ((40 * H2 + 40) * H1 ^ 3) + ((-35 * H2 ^ 2 - 50 * H2 - 35) * H1 ^ 2) + ((18 * H2 ^ 3 + 16 * H2 ^ 2 + 34 * H2 + 12) * H1) - 0.20e2 / 0.3e1 * H2 - 0.2e1 / 0.3e1 * (H2 ^ 3) - 0.13e2 / 0.3e1 * (H2 ^ 4) - 0.4e1 / 0.3e1 - (7 * H2 ^ 2)) * ((H2 - 1) ^ 2) * (m2 ^ 2) * m3 + ((z - (12 * H1) + 0.9e1 / 0.2e1 * H2 + 0.9e1 / 0.2e1) * m2 + (12 * H1) - (6 * H2) - 0.6e1) * ((H2 - 1) ^ 5) * (m2 ^ 3) / 0.4e1) * (y1(t, x) ^ 2) + 0.4e1 * m3 * (((m2 - 2) * (m2 - m3) ^ 3 * y2(t, x) ^ 7) + ((m2 - m3) ^ 2) * ((-(8 * m2 ^ 2 * H1) + (-z + (33 * H1) - (14 * H2)) * m2 - (28 * H1) + (28 * H2)) * m3 + ((z - (9 * H1) + (14 * H2) - 0.8e1) * m2 + (12 * H1) - (28 * H2) + 0.16e2) * m2) * (y2(t, x) ^ 6) / 0.2e1 - 0.2e1 * ((m2 - m3) ^ 2) * ((H1 * (z - (15 * H1) + (12 * H2)) * (m2 ^ 2) + ((36 * H1 ^ 2) + (-0.3e1 / 0.2e1 * z - 0.99e2 / 0.2e1 * H2) * H1 + 0.3e1 / 0.2e1 * H2 * ((7 * H2) + z)) * m2 - (21 * (H1 - H2) ^ 2)) * m3 + ((-(6 * H1 ^ 2) + (z + (27 * H2) - 0.18e2) * H1 - (21 * H2 ^ 2) + (-0.3e1 * z + 0.24e2) * H2 + 0.2e1 * z - 0.6e1) * m2 + (6 * H1 ^ 2) + ((-36 * H2 + 24) * H1) + (42 * H2 ^ 2) - (48 * H2) + 0.12e2) * m2 / 0.2e1) * (y2(t, x) ^ 5) + 0.3e1 * ((m2 - m3) ^ 2) * (((-0.67e2 / 0.3e1 * (H1 ^ 2) + (z + (50 * H2)) * H1 - 0.10e2 / 0.3e1 * H2 * (z + (6 * H2))) * H1 * (m2 ^ 2) + (0.137e3 / 0.3e1 * (H1 ^ 3) + (-z - (120 * H2)) * (H1 ^ 2) + 0.5e1 * (0.33e2 / 0.2e1 * H2 + z) * H2 * H1 - 0.5e1 / 0.2e1 * (H2 ^ 2) * (0.14e2 / 0.3e1 * H2 + z)) * m2 - 0.70e2 / 0.3e1 * ((H1 - H2) ^ 3)) * m3 - 0.5e1 / 0.3e1 * (H2 - 1) * m2 * ((-(6 * H1 ^ 2) + (z + 0.27e2 / 0.2e1 * H2 - 0.9e1 / 0.2e1) * H1 - (7 * H2 ^ 2) + (0.5e1 - 0.3e1 / 0.2e1 * z) * H2 + z / 0.2e1 - 0.1e1) * m2 + (6 * H1 ^ 2) + ((-18 * H2 + 6) * H1) + (14 * H2 ^ 2) - (10 * H2) + 0.2e1)) * (y2(t, x) ^ 4) + 0.4e1 * (m2 - m3) * (((H1 ^ 3) * (z - 0.5e1 / 0.4e1 * H1) * (m2 ^ 3) - 0.2e1 * (0.15e2 / 0.2e1 * (H1 ^ 3) + (z - 0.67e2 / 0.2e1 * H2) * (H1 ^ 2) + 0.3e1 / 0.2e1 * H2 * (z + (25 * H2)) * H1 - 0.5e1 / 0.2e1 * (H2 ^ 2) * (z + (4 * H2))) * H1 * (m2 ^ 2) + (0.135e3 / 0.4e1 * (H1 ^ 4) + (-(137 * H2) + z) * (H1 ^ 3) + 0.3e1 * H2 * (z + (60 * H2)) * (H1 ^ 2) - 0.15e2 / 0.2e1 * (H2 ^ 2) * (z + (11 * H2)) * H1 + 0.5e1 / 0.2e1 * (H2 ^ 3) * (z + 0.7e1 / 0.2e1 * H2)) * m2 - 0.35e2 / 0.2e1 * ((H1 - H2) ^ 4)) * (m3 ^ 2) + 0.3e1 * (((5 * H1 ^ 3) + (-0.67e2 / 0.3e1 * H2 + 0.7e1 / 0.3e1) * (H1 ^ 2) + (z * H2 + (25 * H2 ^ 2) - 0.5e1 / 0.2e1) * H1 + z / 0.6e1 - 0.20e2 / 0.3e1 * (H2 ^ 3) - 0.5e1 / 0.3e1 * z * (H2 ^ 2) + 0.2e1 / 0.3e1) * H1 * (m2 ^ 2) + (-(10 * H1 ^ 4) + (0.137e3 / 0.3e1 * H2 - 0.17e2 / 0.3e1) * (H1 ^ 3) + (0.5e1 / 0.2e1 - (65 * H2 ^ 2) + (0.10e2 - z) * H2) * (H1 ^ 2) + ((35 * H2 ^ 3) + (0.10e2 / 0.3e1 * z - 0.15e2) * (H2 ^ 2) + (0.15e2 / 0.2e1 - 0.5e1 / 0.3e1 * z) * H2 - 0.7e1 / 0.2e1 + z / 0.3e1) * H1 - 0.35e2 / 0.6e1 * (H2 ^ 4) + (-0.5e1 / 0.3e1 * z + 0.20e2 / 0.3e1) * (H2 ^ 3) + (-0.5e1 + 0.5e1 / 0.3e1 * z) * (H2 ^ 2) + (0.5e1 / 0.3e1 - 0.5e1 / 0.6e1 * z) * H2 + z / 0.6e1) * m2 + 0.5e1 * (H1 - H2) * ((H1 ^ 3) + (-0.11e2 / 0.3e1 * H2 + 0.2e1 / 0.3e1) * (H1 ^ 2) + (0.13e2 / 0.3e1 * (H2 ^ 2) - 0.4e1 / 0.3e1 * H2) * H1 - 0.7e1 / 0.3e1 * (H2 ^ 3) + 0.8e1 / 0.3e1 * (H2 ^ 2) - (2 * H2) + 0.2e1 / 0.3e1)) * m2 * m3 - 0.5e1 / 0.2e1 * ((-(6 * H1 ^ 2) + (z + (9 * H2)) * H1 - 0.1e1 / 0.2e1 - 0.7e1 / 0.2e1 * (H2 ^ 2) + (-z + 0.1e1) * H2) * m2 + (6 * H1 ^ 2) - (12 * H2 * H1) + (7 * H2 ^ 2) - (2 * H2) + 0.1e1) * ((H2 - 1) ^ 2) * (m2 ^ 2)) * (y2(t, x) ^ 3) - 0.15e2 / 0.2e1 * (m2 - m3) * (((-(H1 ^ 2) + (z + (2 * H2)) * H1 - 0.8e1 / 0.5e1 * z * H2) * (H1 ^ 3) * (m2 ^ 3) - 0.2e1 * (0.9e1 / 0.5e1 * (H1 ^ 4) + (z - (12 * H2)) * (H1 ^ 3) - 0.8e1 / 0.5e1 * H2 * (z - 0.67e2 / 0.4e1 * H2) * (H1 ^ 2) + (-0.6e1 / 0.5e1 * z * (H2 ^ 2) - (20 * H2 ^ 3)) * H1 + 0.4e1 / 0.3e1 * (H2 ^ 3) * (z + (3 * H2))) * H1 * (m2 ^ 2) + (H1 - H2) * (0.51e2 / 0.5e1 * (H1 ^ 4) + (z - 0.219e3 / 0.5e1 * H2) * (H1 ^ 3) - 0.3e1 / 0.5e1 * H2 * (z - 0.329e3 / 0.3e1 * H2) * (H1 ^ 2) - 0.3e1 * (H2 ^ 2) * (z + 0.151e3 / 0.15e2 * H2) * H1 + (H2 ^ 3) * (z + 0.14e2 / 0.5e1 * H2)) * m2 - 0.28e2 / 0.5e1 * ((H1 - H2) ^ 5)) * (m3 ^ 2) - 0.12e2 / 0.5e1 * ((-0.4e1 / 0.3e1 * (H1 ^ 4) + ((10 * H2) - 0.10e2 / 0.3e1) * (H1 ^ 3) + (0.14e2 / 0.3e1 * H2 - 0.67e2 / 0.3e1 * (H2 ^ 2) + 0.13e2 / 0.3e1) * (H1 ^ 2) + (z * (H2 ^ 2) + 0.50e2 / 0.3e1 * (H2 ^ 3) - z / 0.3e1 - (5 * H2) - 0.5e1 / 0.3e1) * H1 - 0.10e2 / 0.3e1 * (H2 ^ 4) - 0.10e2 / 0.9e1 * z * (H2 ^ 3) + (z / 0.3e1 + 0.4e1 / 0.3e1) * H2 + z / 0.9e1) * H1 * (m2 ^ 2) + (0.8e1 / 0.3e1 * (H1 ^ 5) + (-(20 * H2) + 0.20e2 / 0.3e1) * (H1 ^ 4) + (-0.34e2 / 0.3e1 * H2 + 0.137e3 / 0.3e1 * (H2 ^ 2) - 0.23e2 / 0.3e1) * (H1 ^ 3) + (-0.130e3 / 0.3e1 * (H2 ^ 3) + (0.10e2 - z) * (H2 ^ 2) + (5 * H2) + z / 0.3e1 + 0.5e1) * (H1 ^ 2) + (0.35e2 / 0.2e1 * (H2 ^ 4) + (-0.10e2 + 0.20e2 / 0.9e1 * z) * (H2 ^ 3) + (0.15e2 / 0.2e1 - 0.5e1 / 0.3e1 * z) * (H2 ^ 2) + (0.2e1 / 0.3e1 * z - 0.7e1) * H2 - z / 0.3e1) * H1 - 0.5e1 / 0.6e1 * H2 * (0.14e2 / 0.5e1 * (H2 ^ 4) + (z - 0.4e1) * (H2 ^ 3) + (-0.4e1 / 0.3e1 * z + 0.4e1) * (H2 ^ 2) + (z - 0.2e1) * H2 - 0.2e1 / 0.5e1 * z)) * m2 - 0.4e1 / 0.3e1 * ((H1 - H2) ^ 2) * ((H1 ^ 3) + (-0.11e2 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (0.11e2 / 0.2e1 * (H2 ^ 2) - 0.5e1 / 0.2e1) * H1 - 0.7e1 / 0.2e1 * (H2 ^ 3) + (5 * H2 ^ 2) - (5 * H2) + 0.5e1 / 0.2e1)) * m2 * m3 + 0.4e1 / 0.3e1 * ((-(6 * H1 ^ 2) + (z + 0.27e2 / 0.4e1 * H2 + 0.9e1 / 0.4e1) * H1 - 0.21e2 / 0.10e2 * (H2 ^ 2) + (-0.3e1 / 0.4e1 * z - 0.3e1 / 0.10e2) * H2 - z / 0.4e1 - 0.3e1 / 0.5e1) * m2 + (6 * H1 ^ 2) + ((-9 * H2 - 3) * H1) + 0.21e2 / 0.5e1 * (H2 ^ 2) + 0.3e1 / 0.5e1 * H2 + 0.6e1 / 0.5e1) * ((H2 - 1) ^ 3) * (m2 ^ 2)) * (y2(t, x) ^ 2) + 0.3e1 * (m2 - m3) * (((H1 - H2) * ((z + (5 * H2)) * H1 - 0.4e1 * z * H2) * (H1 ^ 3) * (m2 ^ 3) - 0.2e1 * (0.7e1 / 0.3e1 * (H1 ^ 5) + (z - (9 * H2)) * (H1 ^ 4) - 0.5e1 * H2 * (z - (6 * H2)) * (H1 ^ 3) + 0.4e1 * (z - 0.67e2 / 0.6e1 * H2) * (H2 ^ 2) * (H1 ^ 2) + ((25 * H2 ^ 4) + 0.2e1 * z * (H2 ^ 3)) * H1 - 0.5e1 / 0.3e1 * (H2 ^ 4) * z - (4 * H2 ^ 5)) * H1 * (m2 ^ 2) + ((H1 - H2) ^ 2) * (0.28e2 / 0.3e1 * (H1 ^ 4) + (z - 0.97e2 / 0.3e1 * H2) * (H1 ^ 3) + ((61 * H2 ^ 2) - 0.3e1 * z * H2) * (H1 ^ 2) - 0.3e1 * (z + 0.85e2 / 0.9e1 * H2) * (H2 ^ 2) * H1 + (H2 ^ 3) * (z + 0.7e1 / 0.3e1 * H2)) * m2 - 0.14e2 / 0.3e1 * ((H1 - H2) ^ 6)) * (m3 ^ 2) + 0.4e1 * ((-(4 * H1 ^ 4) + ((15 * H2 + 5) * H1 ^ 3) + (-0.46e2 / 0.3e1 * H2 - 0.67e2 / 0.3e1 * (H2 ^ 2) - 0.7e1 / 0.3e1) * (H1 ^ 2) + (0.25e2 / 0.2e1 * (H2 ^ 2) + (z + 0.25e2 / 0.2e1) * H2 + z + 0.5e1) * H2 * H1 - (2 * H2 ^ 4) + (-0.2e1 - 0.5e1 / 0.6e1 * z) * (H2 ^ 3) + (-0.2e1 - 0.5e1 / 0.6e1 * z) * (H2 ^ 2) - z * H2 / 0.3e1) * H1 * (m2 ^ 2) + ((8 * H1 ^ 5) + ((-30 * H2 - 10) * H1 ^ 4) + (0.86e2 / 0.3e1 * H2 + 0.17e2 / 0.3e1 + 0.137e3 / 0.3e1 * (H2 ^ 2)) * (H1 ^ 3) - (0.65e2 / 0.2e1 * (H2 ^ 2) + (z + 0.45e2 / 0.2e1) * H2 + z + 0.15e2) * H2 * (H1 ^ 2) + (0.21e2 / 0.2e1 * (H2 ^ 4) + (0.3e1 + 0.5e1 / 0.3e1 * z) * (H2 ^ 3) + 0.21e2 / 0.2e1 * (H2 ^ 2) + z * H2) * H1 - (0.7e1 / 0.3e1 * (H2 ^ 3) + (z - 0.5e1 / 0.3e1) * (H2 ^ 2) + (-0.2e1 / 0.3e1 * z + 0.10e2 / 0.3e1) * H2 + z) * (H2 ^ 2) / 0.2e1) * m2 - 0.4e1 * ((H1 - H2) ^ 3) * ((H1 ^ 2) + (-0.3e1 / 0.4e1 * H2 - 0.5e1 / 0.4e1) * H1 + 0.7e1 / 0.12e2 * (H2 ^ 2) - 0.5e1 / 0.12e2 * H2 + 0.5e1 / 0.6e1)) * (H2 - 1) * m2 * m3 - 0.5e1 / 0.3e1 * ((-(6 * H1 ^ 2) + (z + 0.27e2 / 0.5e1 * H2 + 0.18e2 / 0.5e1) * H1 - 0.7e1 / 0.5e1 * (H2 ^ 2) + (-0.3e1 / 0.5e1 * z - 0.4e1 / 0.5e1) * H2 - 0.2e1 / 0.5e1 * z - 0.4e1 / 0.5e1) * m2 + (6 * H1 ^ 2) + (-0.36e2 / 0.5e1 * H2 - 0.24e2 / 0.5e1) * H1 + 0.14e2 / 0.5e1 * (H2 ^ 2) + 0.8e1 / 0.5e1 * H2 + 0.8e1 / 0.5e1) * ((H2 - 1) ^ 4) * (m2 ^ 2)) * y2(t, x) + (-0.3e1 * (-0.2e1 / 0.3e1 * (H1 ^ 4) + H2 * (0.5e1 / 0.2e1 * H2 + z) * (H1 ^ 2) - 0.5e1 / 0.2e1 * (H2 ^ 2) * (0.2e1 / 0.3e1 * H2 + z) * H1 + 0.4e1 / 0.3e1 * z * (H2 ^ 3)) * (H1 ^ 3) * (m2 ^ 3) + 0.6e1 * (H1 - H2) * (-(H1 ^ 5) + 0.4e1 / 0.3e1 * (H1 ^ 4) * H2 + H2 * (z - 0.19e2 / 0.6e1 * H2) * (H1 ^ 3) - 0.3e1 / 0.2e1 * (H2 ^ 2) * (z - 0.41e2 / 0.9e1 * H2) * (H1 ^ 2) - (H2 ^ 3) * (z + (26 * H2)) * H1 / 0.6e1 + (H2 ^ 4) * (z + (2 * H2)) / 0.3e1) * H1 * (m2 ^ 2) - 0.3e1 * ((H1 - H2) ^ 3) * (-(2 * H1 ^ 4) + 0.10e2 / 0.3e1 * H2 * (H1 ^ 3) + H2 * (z - 0.19e2 / 0.2e1 * H2) * (H1 ^ 2) + (H2 ^ 2) * (z + (9 * H2)) * H1 / 0.2e1 - (H2 ^ 3) * (z + (2 * H2)) / 0.6e1) * m2 - (2 * (H1 - H2) ^ 7)) * (m3 ^ 3) + 0.3e1 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-0.5e1 / 0.3e1 * (H2 ^ 2) + (-0.5e1 / 0.3e1 - 0.5e1 / 0.2e1 * z) * H2 - 0.5e1 / 0.3e1 - 0.5e1 / 0.2e1 * z) * H1 + 0.4e1 / 0.3e1 * z * (H2 ^ 2 + H2 + 1)) * (H1 ^ 3) * (m2 ^ 3) - 0.2e1 * (0.7e1 / 0.3e1 * (H1 ^ 5) + (-0.17e2 / 0.2e1 * H2 + z - 0.1e1 / 0.2e1) * (H1 ^ 4) + ((20 * H2 ^ 2) + (0.10e2 - 0.5e1 / 0.2e1 * z) * H2 - 0.5e1 / 0.2e1 * z) * (H1 ^ 3) + (-0.67e2 / 0.3e1 * (H2 ^ 3) + (-0.53e2 / 0.3e1 + 0.4e1 / 0.3e1 * z) * (H2 ^ 2) + (0.4e1 / 0.3e1 * z - 0.14e2 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z) * (H1 ^ 2) + ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.5e1) * (H2 ^ 2) * H1 - 0.2e1 / 0.3e1 * (H2 ^ 2) * ((2 * H2 ^ 3) + (z + 0.2e1) * (H2 ^ 2) + (z + 0.2e1) * H2 + z / 0.2e1)) * H1 * (m2 ^ 2) + (0.28e2 / 0.3e1 * (H1 ^ 5) + (-0.193e3 / 0.6e1 * H2 + z - 0.19e2 / 0.2e1) * (H1 ^ 4) + (0.317e3 / 0.6e1 * (H2 ^ 2) + (0.71e2 / 0.2e1 - 0.3e1 / 0.2e1 * z) * H2 - 0.5e1 / 0.2e1 * z + 0.5e1) * (H1 ^ 3) + (-0.77e2 / 0.2e1 * (H2 ^ 3) + (-0.199e3 / 0.6e1 - z / 0.6e1) * (H2 ^ 2) + (-0.7e1 / 0.6e1 * z - 0.53e2 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z) * (H1 ^ 2) + 0.11e2 / 0.6e1 * H2 * (0.69e2 / 0.11e2 * (H2 ^ 3) + (z + 0.41e2 / 0.11e2) * (H2 ^ 2) + (0.5e1 / 0.11e2 * z + 0.74e2 / 0.11e2) * H2 + 0.8e1 / 0.11e2 * z) * H1 - ((2 * H2 ^ 3) + (z - 0.2e1 / 0.3e1) * (H2 ^ 2) + (-z / 0.3e1 + 0.10e2 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z) * (H2 ^ 2) / 0.2e1) * (H1 - H2) * m2 - 0.14e2 / 0.3e1 * ((H1 - H2) ^ 4) * ((H1 ^ 2) + (-0.5e1 / 0.7e1 * H2 - 0.9e1 / 0.7e1) * H1 + 0.3e1 / 0.7e1 * (H2 ^ 2) - H2 / 0.7e1 + 0.5e1 / 0.7e1)) * (H2 - 1) * m2 * (m3 ^ 2) + 0.3e1 * ((-(8 * H1 ^ 4) + ((20 * H2 + 20) * H1 ^ 3) + (-0.106e3 / 0.3e1 * H2 - 0.67e2 / 0.3e1 * (H2 ^ 2) - 0.67e2 / 0.3e1) * (H1 ^ 2) + ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.10e2) * (H2 + 1) * H1 - 0.2e1 / 0.3e1 * (H2 ^ 2 + H2 + 1) * ((2 * H2 ^ 2) + (z + 0.2e1) * H2 + z + 0.2e1)) * H1 * (m2 ^ 2) + ((16 * H1 ^ 5) + ((-40 * H2 - 40) * H1 ^ 4) + (0.206e3 / 0.3e1 * H2 + 0.137e3 / 0.3e1 * (H2 ^ 2) + 0.137e3 / 0.3e1) * (H1 ^ 3) + (-(28 * H2 ^ 3) + (-z - 0.36e2) * (H2 ^ 2) + (-0.2e1 * z - 0.54e2) * H2 - z - 0.22e2) * (H1 ^ 2) + (0.17e2 / 0.2e1 * (H2 ^ 4) + (0.5e1 + 0.5e1 / 0.3e1 * z) * (H2 ^ 3) + 0.33e2 / 0.2e1 * (H2 ^ 2) + (0.3e1 * z + 0.14e2) * H2 + 0.4e1 + 0.2e1 / 0.3e1 * z) * H1 - H2 * ((2 * H2 ^ 4) + (z - 0.4e1 / 0.3e1) * (H2 ^ 3) + (-0.2e1 / 0.3e1 * z + 0.10e2 / 0.3e1) * (H2 ^ 2) + (z + 0.4e1 / 0.3e1) * H2 + 0.4e1 / 0.3e1 * z + 0.8e1 / 0.3e1) / 0.2e1) * m2 - 0.8e1 * (H1 - H2) * ((H1 ^ 4) + (-0.5e1 / 0.2e1 - 0.3e1 / 0.2e1 * H2) * (H1 ^ 3) + (0.17e2 / 0.12e2 * (H2 ^ 2) + 0.5e1 / 0.3e1 * H2 + 0.35e2 / 0.12e2) * (H1 ^ 2) + (-0.5e1 / 0.6e1 * (H2 ^ 3) - (H2 ^ 2) / 0.3e1 - 0.4e1 / 0.3e1 * H2 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 4) / 0.4e1 - (H2 ^ 3) / 0.6e1 + 0.5e1 / 0.12e2 * (H2 ^ 2) + H2 / 0.6e1 + 0.1e1 / 0.3e1)) * ((H2 - 1) ^ 2) * (m2 ^ 2) * m3 - ((-(6 * H1 ^ 2) + (z + 0.9e1 / 0.2e1 * H2 + 0.9e1 / 0.2e1) * H1 - (H2 ^ 2) + (-z / 0.2e1 - 0.1e1) * H2 - z / 0.2e1 - 0.1e1) * m2 + (6 * H1 ^ 2) + ((-6 * H2 - 6) * H1) + (2 * H2 ^ 2) + (2 * H2) + 0.2e1) * ((H2 - 1) ^ 5) * (m2 ^ 3)) * y1(t, x) - ((m2 - m3) ^ 4 * y2(t, x) ^ 8) + (4 * (m2 - m3) ^ 3 * ((H1 * m2 - 2 * H1 + 2 * H2) * m3 - 2 * m2 * (H2 - 1)) * y2(t, x) ^ 7) + 0.2e1 * ((m2 - m3) ^ 2) * ((-(4 * m2 ^ 2 * H1 ^ 2) - (z - 0.33e2 / 0.2e1 * H1 + (14 * H2)) * H1 * m2 - (14 * (H1 - H2) ^ 2)) * (m3 ^ 2) + (H1 * (z - 0.9e1 / 0.2e1 * H1 + (14 * H2) - 0.8e1) * m2 + (6 * H1 ^ 2) + ((-28 * H2 + 16) * H1) + (28 * H2 ^ 2) - (28 * H2) + 0.6e1) * m2 * m3 - (14 * m2 ^ 2 * (H2 - 1) ^ 2)) * (y2(t, x) ^ 6) - 0.4e1 * ((m2 - m3) ^ 2) * (((H1 ^ 2) * (z - (10 * H1) + (12 * H2)) * (m2 ^ 2) - 0.3e1 / 0.2e1 * (-(16 * H1 ^ 2) + (z + (33 * H2)) * H1 - 0.2e1 * H2 * ((7 * H2) + z)) * H1 * m2 - (14 * (H1 - H2) ^ 3)) * (m3 ^ 2) + ((-(4 * H1 ^ 2) + (z + (27 * H2) - 0.18e2) * H1 - (42 * H2 ^ 2) + (-0.6e1 * z + 0.48e2) * H2 + 0.4e1 * z - 0.12e2) * H1 * m2 + (4 * (-2 * H2 + 1 + H1) * (H1 ^ 2 + (-7 * H2 + 5) * H1 + 7 * H2 ^ 2 - 7 * H2 + 1))) * m2 * m3 / 0.2e1 + (14 * m2 ^ 2 * (H2 - 1) ^ 3)) * (y2(t, x) ^ 5) + 0.4e1 * ((m2 - m3) ^ 2) * (((-0.67e2 / 0.4e1 * (H1 ^ 2) + (z + (50 * H2)) * H1 - 0.5e1 * H2 * (z + (6 * H2))) * (H1 ^ 2) * (m2 ^ 2) - (-0.137e3 / 0.4e1 * (H1 ^ 3) + (z + (120 * H2)) * (H1 ^ 2) - 0.15e2 / 0.2e1 * (0.33e2 / 0.2e1 * H2 + z) * H2 * H1 + 0.15e2 / 0.2e1 * z * (H2 ^ 2) + (35 * H2 ^ 3)) * H1 * m2 - 0.35e2 / 0.2e1 * ((H1 - H2) ^ 4)) * (m3 ^ 2) - 0.5e1 / 0.2e1 * ((-(4 * H1 ^ 2) + (z + 0.27e2 / 0.2e1 * H2 - 0.9e1 / 0.2e1) * H1 - (14 * H2 ^ 2) + (-0.3e1 * z + 0.10e2) * H2 + z - 0.2e1) * H1 * m2 + 0.4e1 * (H1 - H2) * ((H1 ^ 2) + (-0.7e1 / 0.2e1 * H2 + 0.3e1 / 0.2e1) * H1 + 0.7e1 / 0.2e1 * (H2 ^ 2) - 0.7e1 / 0.2e1 * H2 + 0.1e1)) * (H2 - 1) * m2 * m3 - 0.35e2 / 0.2e1 * (m2 ^ 2) * ((H2 - 1) ^ 4)) * (y2(t, x) ^ 4) + 0.4e1 * (m2 - m3) * (((H1 ^ 4) * (z - H1) * (m2 ^ 3) - 0.2e1 * ((6 * H1 ^ 3) + (z - 0.67e2 / 0.2e1 * H2) * (H1 ^ 2) + 0.2e1 * H2 * (z + (25 * H2)) * H1 - 0.5e1 * (H2 ^ 2) * (z + (4 * H2))) * (H1 ^ 2) * (m2 ^ 2) + (H1 - H2) * ((27 * H1 ^ 3) + (-(110 * H2) + z) * (H1 ^ 2) + 0.5e1 * H2 * (z + (26 * H2)) * H1 - 0.10e2 * z * (H2 ^ 2) - (35 * H2 ^ 3)) * H1 * m2 - (14 * (H1 - H2) ^ 5)) * (m3 ^ 3) + 0.4e1 * (((3 * H1 ^ 3) + (-0.67e2 / 0.4e1 * H2 + 0.7e1 / 0.4e1) * (H1 ^ 2) + (z * H2 + (25 * H2 ^ 2) - 0.5e1 / 0.2e1) * H1 + z / 0.4e1 - 0.5e1 / 0.2e1 * z * (H2 ^ 2) + 0.1e1 - (10 * H2 ^ 3)) * (H1 ^ 2) * (m2 ^ 2) - ((6 * H1 ^ 4) + (-0.137e3 / 0.4e1 * H2 + 0.17e2 / 0.4e1) * (H1 ^ 3) + (-0.5e1 / 0.2e1 + (65 * H2 ^ 2) + (-0.10e2 + z) * H2) * (H1 ^ 2) + (-0.105e3 / 0.2e1 * (H2 ^ 3) + (-0.5e1 * z + 0.45e2 / 0.2e1) * (H2 ^ 2) + (0.5e1 / 0.2e1 * z - 0.45e2 / 0.4e1) * H2 - z / 0.2e1 + 0.21e2 / 0.4e1) * H1 + 0.35e2 / 0.2e1 * (H2 ^ 4) + (0.5e1 * z - 0.20e2) * (H2 ^ 3) + (-0.5e1 * z + 0.15e2) * (H2 ^ 2) + (0.5e1 / 0.2e1 * z - 0.5e1) * H2 - z / 0.2e1) * H1 * m2 + 0.3e1 * ((H1 - H2) ^ 2) * ((H1 ^ 3) + (-0.23e2 / 0.6e1 * H2 + 0.5e1 / 0.6e1) * (H1 ^ 2) + (0.14e2 / 0.3e1 * (H2 ^ 2) - 0.5e1 / 0.3e1 * H2) * H1 - 0.7e1 / 0.2e1 * (H2 ^ 3) + 0.35e2 / 0.6e1 * (H2 ^ 2) - (5 * H2) + 0.5e1 / 0.3e1)) * m2 * (m3 ^ 2) - 0.5e1 * ((-(4 * H1 ^ 2) + (z + (9 * H2)) * H1 - 0.1e1 - (7 * H2 ^ 2) + (-0.2e1 * z + 0.2e1) * H2) * H1 * m2 + (4 * H1 ^ 3) - (12 * H2 * H1 ^ 2) + ((14 * H2 ^ 2 - 4 * H2 + 2) * H1) - 0.42e2 / 0.5e1 * (H2 ^ 3) + 0.56e2 / 0.5e1 * (H2 ^ 2) - 0.46e2 / 0.5e1 * H2 + 0.12e2 / 0.5e1) * ((H2 - 1) ^ 2) * (m2 ^ 2) * m3 - (14 * m2 ^ 3 * (H2 - 1) ^ 5)) * (y2(t, x) ^ 3) - 0.6e1 * (m2 - m3) * (((-0.5e1 / 0.6e1 * (H1 ^ 2) + (z + (2 * H2)) * H1 - 0.2e1 * z * H2) * (H1 ^ 4) * (m2 ^ 3) - 0.2e1 * (0.3e1 / 0.2e1 * (H1 ^ 4) + (z - (12 * H2)) * (H1 ^ 3) - 0.2e1 * H2 * (z - 0.67e2 / 0.4e1 * H2) * (H1 ^ 2) - 0.2e1 * (H2 ^ 2) * (z + 0.50e2 / 0.3e1 * H2) * H1 + 0.10e2 / 0.3e1 * (H2 ^ 3) * (z + (3 * H2))) * (H1 ^ 2) * (m2 ^ 2) + ((H1 - H2) ^ 2) * (0.17e2 / 0.2e1 * (H1 ^ 3) + (z - (37 * H2)) * (H1 ^ 2) + 0.109e3 / 0.2e1 * (H2 ^ 2) * H1 - 0.5e1 * z * (H2 ^ 2) - (14 * H2 ^ 3)) * H1 * m2 - 0.14e2 / 0.3e1 * ((H1 - H2) ^ 6)) * (m3 ^ 3) - 0.4e1 * ((-0.2e1 / 0.3e1 * (H1 ^ 4) + ((-2 + 6 * H2) * H1 ^ 3) + (0.7e1 / 0.2e1 * H2 + 0.13e2 / 0.4e1 - 0.67e2 / 0.4e1 * (H2 ^ 2)) * (H1 ^ 2) + (z * (H2 ^ 2) + 0.50e2 / 0.3e1 * (H2 ^ 3) - z / 0.3e1 - (5 * H2) - 0.5e1 / 0.3e1) * H1 - (5 * H2 ^ 4) - 0.5e1 / 0.3e1 * z * (H2 ^ 3) + (0.2e1 + z / 0.2e1) * H2 + z / 0.6e1) * (H1 ^ 2) * (m2 ^ 2) - (-0.4e1 / 0.3e1 * (H1 ^ 5) + ((12 * H2 - 4) * H1 ^ 4) + (0.17e2 / 0.2e1 * H2 - 0.137e3 / 0.4e1 * (H2 ^ 2) + 0.23e2 / 0.4e1) * (H1 ^ 3) + (0.130e3 / 0.3e1 * (H2 ^ 3) + (-0.10e2 + z) * (H2 ^ 2) - (5 * H2) - z / 0.3e1 - 0.5e1) * (H1 ^ 2) + (-0.105e3 / 0.4e1 * (H2 ^ 4) + (0.15e2 - 0.10e2 / 0.3e1 * z) * (H2 ^ 3) + (0.5e1 / 0.2e1 * z - 0.45e2 / 0.4e1) * (H2 ^ 2) + (-z + 0.21e2 / 0.2e1) * H2 + z / 0.2e1) * H1 + 0.5e1 / 0.2e1 * H2 * (0.14e2 / 0.5e1 * (H2 ^ 4) + (z - 0.4e1) * (H2 ^ 3) + (-0.4e1 / 0.3e1 * z + 0.4e1) * (H2 ^ 2) + (z - 0.2e1) * H2 - 0.2e1 / 0.5e1 * z)) * H1 * m2 - 0.2e1 / 0.3e1 * ((H1 - H2) ^ 3) * ((H1 ^ 3) + ((-6 * H2 + 3) * H1 ^ 2) + (0.21e2 / 0.4e1 * (H2 ^ 2) + 0.3e1 / 0.2e1 * H2 - 0.15e2 / 0.4e1) * H1 - 0.21e2 / 0.4e1 * (H2 ^ 3) + 0.21e2 / 0.2e1 * (H2 ^ 2) - 0.45e2 / 0.4e1 * H2 + 0.5e1)) * m2 * (m3 ^ 2) + 0.10e2 / 0.3e1 * ((-(4 * H1 ^ 2) + (z + 0.27e2 / 0.4e1 * H2 + 0.9e1 / 0.4e1) * H1 - 0.21e2 / 0.5e1 * (H2 ^ 2) + (-0.3e1 / 0.2e1 * z - 0.3e1 / 0.5e1) * H2 - z / 0.2e1 - 0.6e1 / 0.5e1) * H1 * m2 + (4 * H1 ^ 3) + ((-9 * H2 - 3) * H1 ^ 2) + (0.42e2 / 0.5e1 * (H2 ^ 2) + 0.6e1 / 0.5e1 * H2 + 0.12e2 / 0.5e1) * H1 - 0.21e2 / 0.5e1 * (H2 ^ 3) + 0.21e2 / 0.5e1 * (H2 ^ 2) - 0.24e2 / 0.5e1 * H2 + 0.4e1 / 0.5e1) * ((H2 - 1) ^ 3) * (m2 ^ 2) * m3 + 0.14e2 / 0.3e1 * (m2 ^ 3) * ((H2 - 1) ^ 6)) * (y2(t, x) ^ 2) + 0.2e1 * (m2 - m3) * ((((z + (5 * H2)) * (H1 ^ 2) - 0.6e1 * H2 * (z + H2) * H1 + 0.6e1 * z * (H2 ^ 2)) * (H1 ^ 4) * (m2 ^ 3) - 0.2e1 * (H1 - H2) * ((2 * H1 ^ 4) + (z - (7 * H2)) * (H1 ^ 3) + ((29 * H2 ^ 2) - 0.5e1 * z * H2) * (H1 ^ 2) + (H2 ^ 2) * (z - (38 * H2)) * H1 + 0.5e1 * z * (H2 ^ 3) + (12 * H2 ^ 4)) * (H1 ^ 2) * (m2 ^ 2) + ((H1 - H2) ^ 3) * ((8 * H1 ^ 3) + (z - (27 * H2)) * (H1 ^ 2) - 0.3e1 * H2 * (z - (19 * H2)) * H1 - 0.6e1 * z * (H2 ^ 2) - (14 * H2 ^ 3)) * H1 * m2 - (4 * (H1 - H2) ^ 7)) * (m3 ^ 3) + 0.8e1 * ((-(2 * H1 ^ 4) + ((3 + 9 * H2) * H1 ^ 3) + (-0.23e2 / 0.2e1 * H2 - 0.7e1 / 0.4e1 - 0.67e2 / 0.4e1 * (H2 ^ 2)) * (H1 ^ 2) + (0.25e2 / 0.2e1 * (H2 ^ 2) + (z + 0.25e2 / 0.2e1) * H2 + z + 0.5e1) * H2 * H1 - (3 * H2 ^ 4) + (-0.3e1 - 0.5e1 / 0.4e1 * z) * (H2 ^ 3) + (-0.3e1 - 0.5e1 / 0.4e1 * z) * (H2 ^ 2) - z * H2 / 0.2e1) * (H1 ^ 2) * (m2 ^ 2) - (-(4 * H1 ^ 4) + ((14 * H2 + 6) * H1 ^ 3) + (-0.81e2 / 0.4e1 * (H2 ^ 2) - 0.31e2 / 0.2e1 * H2 - 0.17e2 / 0.4e1) * (H1 ^ 2) + H2 * (0.49e2 / 0.4e1 * (H2 ^ 2) + (z + 0.7e1) * H2 + z + 0.43e2 / 0.4e1) * H1 - 0.3e1 / 0.2e1 * (0.7e1 / 0.3e1 * (H2 ^ 3) + (z - 0.5e1 / 0.3e1) * (H2 ^ 2) + (-0.2e1 / 0.3e1 * z + 0.10e2 / 0.3e1) * H2 + z) * H2) * (H1 - H2) * H1 * m2 - 0.2e1 * ((H1 - H2) ^ 4) * ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + 0.3e1 / 0.4e1 * (H2 ^ 2) - H2 + 0.5e1 / 0.4e1)) * (H2 - 1) * m2 * (m3 ^ 2) - 0.5e1 * ((-(4 * H1 ^ 2) + (z + 0.27e2 / 0.5e1 * H2 + 0.18e2 / 0.5e1) * H1 - 0.14e2 / 0.5e1 * (H2 ^ 2) + (-0.6e1 / 0.5e1 * z - 0.8e1 / 0.5e1) * H2 - 0.4e1 / 0.5e1 * z - 0.8e1 / 0.5e1) * H1 * m2 + 0.4e1 * (H1 - H2) * ((H1 ^ 2) + (-0.4e1 / 0.5e1 * H2 - 0.6e1 / 0.5e1) * H1 + 0.3e1 / 0.5e1 * (H2 ^ 2) - 0.2e1 / 0.5e1 * H2 + 0.4e1 / 0.5e1)) * ((H2 - 1) ^ 4) * (m2 ^ 2) * m3 - (4 * m2 ^ 3 * (H2 - 1) ^ 7)) * y2(t, x) - 0.2e1 * (H1 - H2) * ((-(H1 ^ 3) / 0.2e1 - (H2 * H1 ^ 2) / 0.2e1 + H2 * (z + (2 * H2)) * H1 - 0.2e1 * z * (H2 ^ 2)) * (H1 ^ 4) * (m2 ^ 3) - 0.2e1 * (H1 - H2) * (-0.3e1 / 0.4e1 * (H1 ^ 4) + (H2 * H1 ^ 3) / 0.2e1 + H2 * (z - 0.11e2 / 0.4e1 * H2) * (H1 ^ 2) - (H2 ^ 2) * (z - (6 * H2)) * H1 - (H2 ^ 3) * (z + (2 * H2))) * (H1 ^ 2) * (m2 ^ 2) + ((H1 - H2) ^ 3) * (-0.3e1 / 0.2e1 * (H1 ^ 3) + (2 * H2 * H1 ^ 2) + H2 * (z - 0.17e2 / 0.2e1 * H2) * H1 + (H2 ^ 2) * (z + (2 * H2))) * H1 * m2 + ((H1 - H2) ^ 7) / 0.2e1) * (m3 ^ 4) + 0.2e1 * (H2 - 1) * m2 * (((z + 0.5e1 / 0.2e1 * H2 + 0.5e1 / 0.2e1) * (H1 ^ 2) + (-(2 * H2 ^ 2) + (-0.3e1 * z - 0.2e1) * H2 - 0.3e1 * z - 0.2e1) * H1 + 0.2e1 * z * (H2 ^ 2 + H2 + 1)) * (H1 ^ 4) * (m2 ^ 3) - 0.2e1 * ((2 * H1 ^ 5) + (-0.17e2 / 0.2e1 * H2 + z - 0.1e1 / 0.2e1) * (H1 ^ 4) + ((24 * H2 ^ 2) + (-0.3e1 * z + 0.12e2) * H2 - 0.3e1 * z) * (H1 ^ 3) + (-0.67e2 / 0.2e1 * (H2 ^ 3) + (-0.53e2 / 0.2e1 + 0.2e1 * z) * (H2 ^ 2) + (0.2e1 * z - 0.7e1) * H2 + 0.2e1 * z) * (H1 ^ 2) + 0.2e1 * ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.5e1) * (H2 ^ 2) * H1 - 0.2e1 * (H2 ^ 2) * ((2 * H2 ^ 3) + (z + 0.2e1) * (H2 ^ 2) + (z + 0.2e1) * H2 + z / 0.2e1)) * (H1 ^ 2) * (m2 ^ 2) + ((8 * H1 ^ 4) + (z - 0.51e2 / 0.2e1 * H2 - 0.19e2 / 0.2e1) * (H1 ^ 3) + ((43 * H2 ^ 2) + (-z + 0.35e2) * H2 - 0.3e1 * z + 0.6e1) * (H1 ^ 2) + (-0.51e2 / 0.2e1 * (H2 ^ 3) + (-z - 0.47e2 / 0.2e1) * (H2 ^ 2) + (-0.4e1 * z - 0.22e2) * H2 + 0.2e1 * z) * H1 + (6 * H2 ^ 4) + (0.3e1 * z - 0.2e1) * (H2 ^ 3) + (0.10e2 - z) * (H2 ^ 2) + 0.4e1 * z * H2) * ((H1 - H2) ^ 2) * H1 * m2 - 0.4e1 * ((H1 - H2) ^ 5) * ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1)) * (m3 ^ 3) + 0.4e1 * ((H2 - 1) ^ 2) * (m2 ^ 2) * ((-(4 * H1 ^ 4) + ((12 + 12 * H2) * H1 ^ 3) + (-0.53e2 / 0.2e1 * H2 - 0.67e2 / 0.4e1 - 0.67e2 / 0.4e1 * (H2 ^ 2)) * (H1 ^ 2) + ((10 * H2 ^ 2) + (z + 0.10e2) * H2 + z + 0.10e2) * (H2 + 1) * H1 - (H2 ^ 2 + H2 + 1) * ((2 * H2 ^ 2) + (z + 0.2e1) * H2 + z + 0.2e1)) * (H1 ^ 2) * (m2 ^ 2) - (-(8 * H1 ^ 5) + ((24 * H2 + 24) * H1 ^ 4) + (-0.103e3 / 0.2e1 * H2 - 0.137e3 / 0.4e1 * (H2 ^ 2) - 0.137e3 / 0.4e1) * (H1 ^ 3) + ((28 * H2 ^ 3) + (z + 0.36e2) * (H2 ^ 2) + (0.2e1 * z + 0.54e2) * H2 + z + 0.22e2) * (H1 ^ 2) + (-0.51e2 / 0.4e1 * (H2 ^ 4) + (-0.15e2 / 0.2e1 - 0.5e1 / 0.2e1 * z) * (H2 ^ 3) - 0.99e2 / 0.4e1 * (H2 ^ 2) + (-0.9e1 / 0.2e1 * z - 0.21e2) * H2 - z - 0.6e1) * H1 + (3 * H2 ^ 5) + (-0.2e1 + 0.3e1 / 0.2e1 * z) * (H2 ^ 4) + (0.5e1 - z) * (H2 ^ 3) + (0.3e1 / 0.2e1 * z + 0.2e1) * (H2 ^ 2) + (0.2e1 * z + 0.4e1) * H2) * H1 * m2 - 0.4e1 * ((H1 - H2) ^ 2) * ((H1 ^ 4) + ((-H2 - 3) * H1 ^ 3) + (0.11e2 / 0.8e1 * (H2 ^ 2) + H2 / 0.4e1 + 0.35e2 / 0.8e1) * (H1 ^ 2) + (-0.3e1 / 0.4e1 * (H2 ^ 3) - (H2 ^ 2) / 0.2e1 + H2 / 0.4e1 - 0.3e1) * H1 + 0.3e1 / 0.8e1 * (H2 ^ 4) - 0.3e1 / 0.4e1 * (H2 ^ 3) + 0.11e2 / 0.8e1 * (H2 ^ 2) - H2 + 0.1e1)) * (m3 ^ 2) - 0.2e1 * ((-(4 * H1 ^ 2) + (z + 0.9e1 / 0.2e1 * H2 + 0.9e1 / 0.2e1) * H1 - (2 * H2 ^ 2) + (-0.2e1 - z) * H2 - 0.2e1 - z) * H1 * m2 + 0.4e1 * ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1) * (H1 - H2)) * ((H2 - 1) ^ 5) * (m2 ^ 3) * m3 - (m2 ^ 4 * (H2 - 1) ^ 8)) * diff(y1(t, x), x) + 0.4e1 * (m2 - m3) * diff(y2(t, x), x) * m3 * ((H1 + y1(t, x)) ^ 2) * m2 * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - (m3 * (m2 - 1) * (y2(t, x) - 3 * H1 + H2) * y1(t, x) ^ 2) + (((-m2 + m3) * y2(t, x) ^ 2 + ((-2 * H1 * m2 + 2 * H1 + 2 * H2) * m3 - 2 * m2 * (H2 - 1)) * y2(t, x) + ((3 * H1 ^ 2 - 2 * H2 * H1) * m2 - 3 * H1 ^ 2 + 2 * H2 * H1 + H2 ^ 2) * m3 - m2 * (H2 - 1) ^ 2) * y1(t, x)) + ((m2 - m3) * y2(t, x) ^ 3) - ((m2 - m3) * (H1 - 3 * H2) * y2(t, x) ^ 2) + (((-H1 ^ 2 * m2 + (H1 + 3 * H2) * (H1 - H2)) * m3) - 0.2e1 * (-0.3e1 / 0.2e1 * H2 + H1 - 0.3e1 / 0.2e1) * (H2 - 1) * m2) * y2(t, x) + ((H1 - H2) * (H1 ^ 2 * m2 - H1 ^ 2 + H2 ^ 2) * m3) - (m2 * (H2 - 1) ^ 2 * (H1 - H2 - 2))) * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - 0.3e1 / 0.2e1 * (m2 - 1) * m3 * (y2(t, x) + z / 0.3e1 - (2 * H1) + H2) * (y1(t, x) ^ 2) + m3 * (m2 - 1) * (z - (3 * H1)) * (y2(t, x) - H1 + H2) * y1(t, x) + (-m3 / 0.2e1 + m2 / 0.2e1) * (y2(t, x) ^ 3) - (m2 - m3) * (z - (3 * H2)) * (y2(t, x) ^ 2) / 0.2e1 + ((H1 * (z - 0.3e1 / 0.2e1 * H1) * m2 - (H1 - H2) * (-0.3e1 / 0.2e1 * H1 + z - 0.3e1 / 0.2e1 * H2)) * m3 - (H2 - 1) * (-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * m2) * y2(t, x) + (-(-(2 * H1 ^ 2) + (z + (3 * H2)) * H1 - 0.2e1 * z * H2) * H1 * m2 / 0.2e1 + ((H1 - H2) ^ 2) * (z - (2 * H1) - H2) / 0.2e1) * m3 - m2 * ((H2 - 1) ^ 2) * (z - H2 - 0.2e1) / 0.2e1)) * diff(diff(diff(y1(t, x), x), x), x) / 0.12e2 + ((m2 - 1) * m3 * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - m3 * (m2 - 1) * (z - (3 * H1)) * (y1(t, x) ^ 2) + (((-3 * m2 + 3 * m3) * y2(t, x) ^ 2) + 0.2e1 * (m2 - m3) * (z - (3 * H2)) * y2(t, x) + (((3 * H1 ^ 2) - 0.2e1 * z * H1) * m2 + 0.2e1 * (H1 - H2) * (-0.3e1 / 0.2e1 * H1 + z - 0.3e1 / 0.2e1 * H2)) * m3 + 0.2e1 * (H2 - 1) * (-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * m2) * y1(t, x) + ((2 * m2 - 2 * m3) * y2(t, x) ^ 3) - (m2 - m3) * (z + (3 * H1) - (6 * H2)) * (y2(t, x) ^ 2) + 0.2e1 * (m2 - m3) * (H1 - H2) * (z - (3 * H2)) * y2(t, x) + (-(H1 ^ 2) * (z - H1) * m2 + ((H1 - H2) ^ 2) * (z - H1 - (2 * H2))) * m3 + 0.2e1 * ((-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) + (-z / 0.2e1 + 0.1e1) * H2 - z / 0.2e1 + 0.1e1) * (H2 - 1) * m2) * ((m3 * (m2 - 1) * y1(t, x) ^ 2) + (((-2 * m2 + 2 * m3) * y2(t, x) + (2 * H1 * m2 - 2 * H1 + 2 * H2) * m3 - 2 * m2 * (H2 - 1)) * y1(t, x)) + ((m2 - m3) * y2(t, x) ^ 2) - (2 * (m2 - m3) * (H1 - H2) * y2(t, x)) + ((H1 ^ 2 * m2 - (H1 - H2) ^ 2) * m3) - 0.2e1 * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (H2 - 1) * m2) * diff(y1(t, x), x) - 0.2e1 * (m2 - m3) * diff(y2(t, x), x) * (m3 * (m2 - 1) * y1(t, x) ^ 2 - 2 * m3 * (m2 - 1) * (y2(t, x) - H1 + H2) * y1(t, x) + (m2 - m3) * y2(t, x) ^ 2 + ((-2 * H1 * m2 + 2 * H1 - 2 * H2) * m3 + 2 * m2 * (H2 - 1)) * y2(t, x) + (H1 * (H1 - 2 * H2) * m2 - (H1 - H2) ^ 2) * m3 + m2 * (H2 - 1) ^ 2) * ((m3 * (m2 - 1) * y1(t, x) ^ 3) - 0.3e1 / 0.2e1 * (m2 - 1) * m3 * (y2(t, x) + z / 0.3e1 - (2 * H1) + H2) * (y1(t, x) ^ 2) + m3 * (m2 - 1) * (z - (3 * H1)) * (y2(t, x) - H1 + H2) * y1(t, x) + (-m3 / 0.2e1 + m2 / 0.2e1) * (y2(t, x) ^ 3) - (m2 - m3) * (z - (3 * H2)) * (y2(t, x) ^ 2) / 0.2e1 + ((H1 * (z - 0.3e1 / 0.2e1 * H1) * m2 - (H1 - H2) * (-0.3e1 / 0.2e1 * H1 + z - 0.3e1 / 0.2e1 * H2)) * m3 - (H2 - 1) * (-0.3e1 / 0.2e1 * H2 + z - 0.3e1 / 0.2e1) * m2) * y2(t, x) + (-(-(2 * H1 ^ 2) + (z + (3 * H2)) * H1 - 0.2e1 * z * H2) * H1 * m2 / 0.2e1 + ((H1 - H2) ^ 2) * (z - (2 * H1) - H2) / 0.2e1) * m3 - m2 * ((H2 - 1) ^ 2) * (z - H2 - 0.2e1) / 0.2e1)) * m3 * Q * m2) / ((m3 ^ 2 * (m2 - 1) ^ 2 * y1(t, x) ^ 4) - (4 * (m2 - 1) * m3 * ((m2 - m3) * y2(t, x) + (-H1 * m2 + H1 - H2) * m3 + m2 * (H2 - 1)) * y1(t, x) ^ 3) + 0.6e1 * (m2 - 1) * m3 * (((m2 - m3) * y2(t, x) ^ 2) - (2 * (m2 - m3) * (H1 - H2) * y2(t, x)) + ((H1 ^ 2 * m2 - (H1 - H2) ^ 2) * m3) - 0.2e1 * (H1 - H2 / 0.2e1 - 0.1e1 / 0.2e1) * (H2 - 1) * m2) * (y1(t, x) ^ 2) - 0.4e1 * (m2 - 1) * (((m2 - m3) * y2(t, x) ^ 3) - (3 * (m2 - m3) * (H1 - H2) * y2(t, x) ^ 2) + (3 * (H1 - H2) ^ 2 * (m2 - m3) * y2(t, x)) + ((-H1 ^ 3 * m2 + (H1 - H2) ^ 3) * m3) + 0.3e1 * ((H1 ^ 2) + ((-H2 - 1) * H1) + (H2 ^ 2) / 0.3e1 + H2 / 0.3e1 + 0.1e1 / 0.3e1) * (H2 - 1) * m2) * m3 * y1(t, x) + ((m2 - m3) ^ 2 * y2(t, x) ^ 4) - (4 * (m2 - m3) * ((H1 * m2 - H1 + H2) * m3 - m2 * (H2 - 1)) * y2(t, x) ^ 3) + (6 * (m2 - m3) * ((H1 * (H1 - 2 * H2) * m2 - (H1 - H2) ^ 2) * m3 + m2 * (H2 - 1) ^ 2) * y2(t, x) ^ 2) - (4 * (m2 - m3) * ((H1 * (H1 ^ 2 - 3 * H2 * H1 + 3 * H2 ^ 2) * m2 - (H1 - H2) ^ 3) * m3 - m2 * (H2 - 1) ^ 3) * y2(t, x)) + ((m2 ^ 2 * H1 ^ 4 + (-2 * H1 ^ 4 + 4 * H2 * H1 ^ 3 - 6 * H1 ^ 2 * H2 ^ 2 + 4 * H2 ^ 3 * H1) * m2 + (H1 - H2) ^ 4) * m3 ^ 2) - 0.4e1 * (((H1 ^ 2) + (-0.3e1 / 0.2e1 * H2 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) + H2 + 0.1e1) * H1 * m2 - ((H1 ^ 2) + (-H2 / 0.2e1 - 0.3e1 / 0.2e1) * H1 + (H2 ^ 2) / 0.2e1 - H2 / 0.2e1 + 0.1e1) * (H1 - H2)) * (H2 - 1) * m2 * m3 + (m2 ^ 2 * (H2 - 1) ^ 4)) ^ 2;</Text-field>
</Output>
</Group>
<Group labelreference="L4828" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group>
</Section>
</Worksheet>